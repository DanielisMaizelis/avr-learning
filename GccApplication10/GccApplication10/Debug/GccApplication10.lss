
GccApplication10.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  000008ec  00000980  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008ec  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  0080010c  0080010c  0000098c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000098c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00000a00  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e20  00000000  00000000  00000ac0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000098f  00000000  00000000  000018e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000066e  00000000  00000000  0000226f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000013c  00000000  00000000  000028e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005a2  00000000  00000000  00002a1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004a8  00000000  00000000  00002fbe  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00003466  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4d c0       	rjmp	.+154    	; 0xc8 <__vector_11>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	56 c0       	rjmp	.+172    	; 0xf6 <__vector_18>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec ee       	ldi	r30, 0xEC	; 236
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 30       	cpi	r26, 0x0C	; 12
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ac e0       	ldi	r26, 0x0C	; 12
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 31       	cpi	r26, 0x10	; 16
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	11 d1       	rcall	.+546    	; 0x2e6 <main>
  c4:	11 c4       	rjmp	.+2082   	; 0x8e8 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_11>:
uint16_t overflow_t2 = 0;
float highscore = 1.05;
float timeDelay = 1;

ISR(TIMER2_OVF_vect)
{
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	8f 93       	push	r24
  d4:	9f 93       	push	r25
	overflow_t2++;
  d6:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
  da:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <__data_end+0x1>
  de:	01 96       	adiw	r24, 0x01	; 1
  e0:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <__data_end+0x1>
  e4:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
}
  e8:	9f 91       	pop	r25
  ea:	8f 91       	pop	r24
  ec:	0f 90       	pop	r0
  ee:	0f be       	out	0x3f, r0	; 63
  f0:	0f 90       	pop	r0
  f2:	1f 90       	pop	r1
  f4:	18 95       	reti

000000f6 <__vector_18>:

ISR(TIMER0_OVF_vect)
{
  f6:	1f 92       	push	r1
  f8:	0f 92       	push	r0
  fa:	0f b6       	in	r0, 0x3f	; 63
  fc:	0f 92       	push	r0
  fe:	11 24       	eor	r1, r1
 100:	0b b6       	in	r0, 0x3b	; 59
 102:	0f 92       	push	r0
 104:	cf 92       	push	r12
 106:	df 92       	push	r13
 108:	ef 92       	push	r14
 10a:	ff 92       	push	r15
 10c:	2f 93       	push	r18
 10e:	3f 93       	push	r19
 110:	4f 93       	push	r20
 112:	5f 93       	push	r21
 114:	6f 93       	push	r22
 116:	7f 93       	push	r23
 118:	8f 93       	push	r24
 11a:	9f 93       	push	r25
 11c:	af 93       	push	r26
 11e:	bf 93       	push	r27
 120:	ef 93       	push	r30
 122:	ff 93       	push	r31
	overflow_t0++;
 124:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <overflow_t0>
 128:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <overflow_t0+0x1>
 12c:	6f 5f       	subi	r22, 0xFF	; 255
 12e:	7f 4f       	sbci	r23, 0xFF	; 255
 130:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <overflow_t0+0x1>
 134:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <overflow_t0>
	if ((PINB & 0x01) == 0x01)
 138:	18 9b       	sbis	0x03, 0	; 3
 13a:	1c c0       	rjmp	.+56     	; 0x174 <__vector_18+0x7e>
	{ //If output is high
		if (overflow_t0 >= (31*timeDelay))
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	cb d1       	rcall	.+918    	; 0x4d8 <__floatunsisf>
 142:	6b 01       	movw	r12, r22
 144:	7c 01       	movw	r14, r24
 146:	20 e0       	ldi	r18, 0x00	; 0
 148:	30 e0       	ldi	r19, 0x00	; 0
 14a:	48 ef       	ldi	r20, 0xF8	; 248
 14c:	51 e4       	ldi	r21, 0x41	; 65
 14e:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <timeDelay>
 152:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <timeDelay+0x1>
 156:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <timeDelay+0x2>
 15a:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <timeDelay+0x3>
 15e:	72 d2       	rcall	.+1252   	; 0x644 <__mulsf3>
 160:	9b 01       	movw	r18, r22
 162:	ac 01       	movw	r20, r24
 164:	c7 01       	movw	r24, r14
 166:	b6 01       	movw	r22, r12
 168:	69 d2       	rcall	.+1234   	; 0x63c <__gesf2>
 16a:	88 23       	and	r24, r24
 16c:	1c f0       	brlt	.+6      	; 0x174 <__vector_18+0x7e>
		{
				PORTC &= ~(1<<PORTC0); // Turn the output low
 16e:	88 b1       	in	r24, 0x08	; 8
 170:	8e 7f       	andi	r24, 0xFE	; 254
 172:	88 b9       	out	0x08, r24	; 8
		}
	}
	if ((PINB & 0x01) == 0x00)
 174:	18 99       	sbic	0x03, 0	; 3
 176:	0e c0       	rjmp	.+28     	; 0x194 <__vector_18+0x9e>
	{ //If output is low
		if (overflow_t0 >= 1249)
 178:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflow_t0>
 17c:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflow_t0+0x1>
 180:	81 3e       	cpi	r24, 0xE1	; 225
 182:	94 40       	sbci	r25, 0x04	; 4
 184:	38 f0       	brcs	.+14     	; 0x194 <__vector_18+0x9e>
		{ //If 20 ms have elapsed
			PORTC |= (1<<0); //Make output high (set the pin HIGH)
 186:	88 b1       	in	r24, 0x08	; 8
 188:	81 60       	ori	r24, 0x01	; 1
 18a:	88 b9       	out	0x08, r24	; 8
			overflow_t0 = 0; //End of the cycle
 18c:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <overflow_t0+0x1>
 190:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <overflow_t0>
		}
	}
}
 194:	ff 91       	pop	r31
 196:	ef 91       	pop	r30
 198:	bf 91       	pop	r27
 19a:	af 91       	pop	r26
 19c:	9f 91       	pop	r25
 19e:	8f 91       	pop	r24
 1a0:	7f 91       	pop	r23
 1a2:	6f 91       	pop	r22
 1a4:	5f 91       	pop	r21
 1a6:	4f 91       	pop	r20
 1a8:	3f 91       	pop	r19
 1aa:	2f 91       	pop	r18
 1ac:	ff 90       	pop	r15
 1ae:	ef 90       	pop	r14
 1b0:	df 90       	pop	r13
 1b2:	cf 90       	pop	r12
 1b4:	0f 90       	pop	r0
 1b6:	0b be       	out	0x3b, r0	; 59
 1b8:	0f 90       	pop	r0
 1ba:	0f be       	out	0x3f, r0	; 63
 1bc:	0f 90       	pop	r0
 1be:	1f 90       	pop	r1
 1c0:	18 95       	reti

000001c2 <_Z9set_timerv>:
void set_timer()
{
	overflow_t2 = 0;
 1c2:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <__data_end+0x1>
 1c6:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <__data_end>
	TCNT2 = 0;
 1ca:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
 1ce:	08 95       	ret

000001d0 <_Z13random_createv>:
}

int random_create()
{
	int number = rand() % 2000 + 2000;
 1d0:	0a d3       	rcall	.+1556   	; 0x7e6 <rand>
 1d2:	60 ed       	ldi	r22, 0xD0	; 208
 1d4:	77 e0       	ldi	r23, 0x07	; 7
 1d6:	99 d2       	rcall	.+1330   	; 0x70a <__divmodhi4>
	return number; // Set from 2-4seconds
}
 1d8:	80 53       	subi	r24, 0x30	; 48
 1da:	98 4f       	sbci	r25, 0xF8	; 248
 1dc:	08 95       	ret

000001de <_Z8eeprom_wif>:

void eeprom_w(int address, float result)
{
	eeprom_write_float (( float *) address, result);
 1de:	11 c3       	rjmp	.+1570   	; 0x802 <eeprom_write_dword>
 1e0:	08 95       	ret

000001e2 <_Z16checkIfHighscoref>:
}

void checkIfHighscore(float score)
{
 1e2:	cf 92       	push	r12
 1e4:	df 92       	push	r13
 1e6:	ef 92       	push	r14
 1e8:	ff 92       	push	r15
 1ea:	6b 01       	movw	r12, r22
 1ec:	7c 01       	movw	r14, r24
	if(score < highscore)
 1ee:	60 91 08 01 	lds	r22, 0x0108	; 0x800108 <highscore>
 1f2:	70 91 09 01 	lds	r23, 0x0109	; 0x800109 <highscore+0x1>
 1f6:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <highscore+0x2>
 1fa:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <highscore+0x3>
 1fe:	a7 01       	movw	r20, r14
 200:	96 01       	movw	r18, r12
 202:	1c d2       	rcall	.+1080   	; 0x63c <__gesf2>
 204:	18 16       	cp	r1, r24
 206:	5c f4       	brge	.+22     	; 0x21e <_Z16checkIfHighscoref+0x3c>
	{
		highscore = score;
 208:	c0 92 08 01 	sts	0x0108, r12	; 0x800108 <highscore>
 20c:	d0 92 09 01 	sts	0x0109, r13	; 0x800109 <highscore+0x1>
 210:	e0 92 0a 01 	sts	0x010A, r14	; 0x80010a <highscore+0x2>
 214:	f0 92 0b 01 	sts	0x010B, r15	; 0x80010b <highscore+0x3>
		PORTB = 0b00000100;
 218:	84 e0       	ldi	r24, 0x04	; 4
 21a:	85 b9       	out	0x05, r24	; 5
 21c:	01 c0       	rjmp	.+2      	; 0x220 <_Z16checkIfHighscoref+0x3e>
		
		//highscore
	}
	else
	{
		PORTB = 0b00000000;
 21e:	15 b8       	out	0x05, r1	; 5
		//low-score	
	}
}
 220:	ff 90       	pop	r15
 222:	ef 90       	pop	r14
 224:	df 90       	pop	r13
 226:	cf 90       	pop	r12
 228:	08 95       	ret

0000022a <_Z12Set_servomaxv>:

void Set_servomax()
{
	timeDelay = 2;
 22a:	80 e0       	ldi	r24, 0x00	; 0
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	a0 e0       	ldi	r26, 0x00	; 0
 230:	b0 e4       	ldi	r27, 0x40	; 64
 232:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <timeDelay>
 236:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <timeDelay+0x1>
 23a:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <timeDelay+0x2>
 23e:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <timeDelay+0x3>
 242:	08 95       	ret

00000244 <_Z12Set_servominf>:
}

void Set_servomin(float angle)
{
 244:	cf 92       	push	r12
 246:	df 92       	push	r13
 248:	ef 92       	push	r14
 24a:	ff 92       	push	r15
 24c:	6b 01       	movw	r12, r22
 24e:	7c 01       	movw	r14, r24
	if(angle < 0.3){
 250:	2a e9       	ldi	r18, 0x9A	; 154
 252:	39 e9       	ldi	r19, 0x99	; 153
 254:	49 e9       	ldi	r20, 0x99	; 153
 256:	5e e3       	ldi	r21, 0x3E	; 62
 258:	3b d1       	rcall	.+630    	; 0x4d0 <__cmpsf2>
 25a:	88 23       	and	r24, r24
 25c:	64 f4       	brge	.+24     	; 0x276 <_Z12Set_servominf+0x32>
		timeDelay = 0.3;
 25e:	8a e9       	ldi	r24, 0x9A	; 154
 260:	99 e9       	ldi	r25, 0x99	; 153
 262:	a9 e9       	ldi	r26, 0x99	; 153
 264:	be e3       	ldi	r27, 0x3E	; 62
 266:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <timeDelay>
 26a:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <timeDelay+0x1>
 26e:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <timeDelay+0x2>
 272:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <timeDelay+0x3>
	}
	if(angle >= 0.3 && angle < 0.6){
 276:	2a e9       	ldi	r18, 0x9A	; 154
 278:	39 e9       	ldi	r19, 0x99	; 153
 27a:	49 e9       	ldi	r20, 0x99	; 153
 27c:	5e e3       	ldi	r21, 0x3E	; 62
 27e:	c7 01       	movw	r24, r14
 280:	b6 01       	movw	r22, r12
 282:	dc d1       	rcall	.+952    	; 0x63c <__gesf2>
 284:	88 23       	and	r24, r24
 286:	ac f0       	brlt	.+42     	; 0x2b2 <_Z12Set_servominf+0x6e>
 288:	2a e9       	ldi	r18, 0x9A	; 154
 28a:	39 e9       	ldi	r19, 0x99	; 153
 28c:	49 e1       	ldi	r20, 0x19	; 25
 28e:	5f e3       	ldi	r21, 0x3F	; 63
 290:	c7 01       	movw	r24, r14
 292:	b6 01       	movw	r22, r12
 294:	1d d1       	rcall	.+570    	; 0x4d0 <__cmpsf2>
 296:	88 23       	and	r24, r24
 298:	64 f4       	brge	.+24     	; 0x2b2 <_Z12Set_servominf+0x6e>
		timeDelay = 0.8;
 29a:	8d ec       	ldi	r24, 0xCD	; 205
 29c:	9c ec       	ldi	r25, 0xCC	; 204
 29e:	ac e4       	ldi	r26, 0x4C	; 76
 2a0:	bf e3       	ldi	r27, 0x3F	; 63
 2a2:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <timeDelay>
 2a6:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <timeDelay+0x1>
 2aa:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <timeDelay+0x2>
 2ae:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <timeDelay+0x3>
	}
	if(angle >= 0.6){
 2b2:	2a e9       	ldi	r18, 0x9A	; 154
 2b4:	39 e9       	ldi	r19, 0x99	; 153
 2b6:	49 e1       	ldi	r20, 0x19	; 25
 2b8:	5f e3       	ldi	r21, 0x3F	; 63
 2ba:	c7 01       	movw	r24, r14
 2bc:	b6 01       	movw	r22, r12
 2be:	be d1       	rcall	.+892    	; 0x63c <__gesf2>
 2c0:	88 23       	and	r24, r24
 2c2:	64 f0       	brlt	.+24     	; 0x2dc <_Z12Set_servominf+0x98>
		timeDelay = 1.5;
 2c4:	80 e0       	ldi	r24, 0x00	; 0
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	a0 ec       	ldi	r26, 0xC0	; 192
 2ca:	bf e3       	ldi	r27, 0x3F	; 63
 2cc:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <timeDelay>
 2d0:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <timeDelay+0x1>
 2d4:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <timeDelay+0x2>
 2d8:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <timeDelay+0x3>
	}
}
 2dc:	ff 90       	pop	r15
 2de:	ef 90       	pop	r14
 2e0:	df 90       	pop	r13
 2e2:	cf 90       	pop	r12
 2e4:	08 95       	ret

000002e6 <main>:

int main(void)
{
	float score = 0;
	int address = 0;
	int random_value = random_create();
 2e6:	74 df       	rcall	.-280    	; 0x1d0 <_Z13random_createv>
 2e8:	ec 01       	movw	r28, r24
		
	// Setup for LEDs
	DDRB = 0b00000111;
 2ea:	87 e0       	ldi	r24, 0x07	; 7
 2ec:	84 b9       	out	0x04, r24	; 4
	PORTB = 0b00000000;
 2ee:	15 b8       	out	0x05, r1	; 5
	
	// Pull-up for a button
	DDRD = 0b00000000;
 2f0:	1a b8       	out	0x0a, r1	; 10
	PORTD = 0b00000100;
 2f2:	84 e0       	ldi	r24, 0x04	; 4
 2f4:	8b b9       	out	0x0b, r24	; 11
	
	//Servo
	DDRC = 0b11111111; 
 2f6:	8f ef       	ldi	r24, 0xFF	; 255
 2f8:	87 b9       	out	0x07, r24	; 7
	
	//Timer 0
	TCCR0B |= (1<<CS00);
 2fa:	85 b5       	in	r24, 0x25	; 37
 2fc:	81 60       	ori	r24, 0x01	; 1
 2fe:	85 bd       	out	0x25, r24	; 37
	TIMSK0 |= (1<<TOIE0);
 300:	ee e6       	ldi	r30, 0x6E	; 110
 302:	f0 e0       	ldi	r31, 0x00	; 0
 304:	80 81       	ld	r24, Z
 306:	81 60       	ori	r24, 0x01	; 1
 308:	80 83       	st	Z, r24
	
	//Timer 2		 
	TCCR2B |= (1<<CS22)|(1<<CS21); //Overflow for timer 2 set at 256 pre-scale
 30a:	e1 eb       	ldi	r30, 0xB1	; 177
 30c:	f0 e0       	ldi	r31, 0x00	; 0
 30e:	80 81       	ld	r24, Z
 310:	86 60       	ori	r24, 0x06	; 6
 312:	80 83       	st	Z, r24
	TIMSK2 |= (1<<TOIE2); /* Timer/Counter2 Overflow interrupt enabled */
 314:	e0 e7       	ldi	r30, 0x70	; 112
 316:	f0 e0       	ldi	r31, 0x00	; 0
 318:	80 81       	ld	r24, Z
 31a:	81 60       	ori	r24, 0x01	; 1
 31c:	80 83       	st	Z, r24
		 
	sei(); /* Global Interrupt Enable */
 31e:	78 94       	sei
}

int main(void)
{
	float score = 0;
	int address = 0;
 320:	00 e0       	ldi	r16, 0x00	; 0
		 
	sei(); /* Global Interrupt Enable */
		 
	while(1)
	{
		set_timer();			 
 322:	10 e0       	ldi	r17, 0x00	; 0
 324:	4e df       	rcall	.-356    	; 0x1c2 <_Z9set_timerv>
		for(int i=0; i<=random_value; i++)
 326:	80 e0       	ldi	r24, 0x00	; 0
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	c8 17       	cp	r28, r24
 32c:	d9 07       	cpc	r29, r25
 32e:	44 f0       	brlt	.+16     	; 0x340 <main+0x5a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 330:	ef e9       	ldi	r30, 0x9F	; 159
 332:	ff e0       	ldi	r31, 0x0F	; 15
 334:	31 97       	sbiw	r30, 0x01	; 1
 336:	f1 f7       	brne	.-4      	; 0x334 <main+0x4e>
 338:	00 c0       	rjmp	.+0      	; 0x33a <main+0x54>
 33a:	00 00       	nop
 33c:	01 96       	adiw	r24, 0x01	; 1
 33e:	f5 cf       	rjmp	.-22     	; 0x32a <main+0x44>
		{
			_delay_ms(1);
		}
			 
		PORTB |= (1<<0);
 340:	85 b1       	in	r24, 0x05	; 5
 342:	81 60       	ori	r24, 0x01	; 1
		set_timer();
 344:	85 b9       	out	0x05, r24	; 5
 346:	3d df       	rcall	.-390    	; 0x1c2 <_Z9set_timerv>
		while (PIND != 0)
 348:	89 b1       	in	r24, 0x09	; 9
 34a:	81 11       	cpse	r24, r1
 34c:	fd cf       	rjmp	.-6      	; 0x348 <main+0x62>
		{
		}
		PORTB |= (1<<1);
 34e:	85 b1       	in	r24, 0x05	; 5
 350:	82 60       	ori	r24, 0x02	; 2
 352:	85 b9       	out	0x05, r24	; 5
		score = (overflow_t2*0.004)+TCNT2*0.0016;
 354:	60 91 0c 01 	lds	r22, 0x010C	; 0x80010c <__data_end>
 358:	70 91 0d 01 	lds	r23, 0x010D	; 0x80010d <__data_end+0x1>
 35c:	80 e0       	ldi	r24, 0x00	; 0
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	bb d0       	rcall	.+374    	; 0x4d8 <__floatunsisf>
 362:	2f e6       	ldi	r18, 0x6F	; 111
 364:	32 e1       	ldi	r19, 0x12	; 18
 366:	43 e8       	ldi	r20, 0x83	; 131
 368:	5b e3       	ldi	r21, 0x3B	; 59
 36a:	6c d1       	rcall	.+728    	; 0x644 <__mulsf3>
 36c:	6b 01       	movw	r12, r22
 36e:	7c 01       	movw	r14, r24
 370:	60 91 b2 00 	lds	r22, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
 374:	70 e0       	ldi	r23, 0x00	; 0
 376:	80 e0       	ldi	r24, 0x00	; 0
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	b0 d0       	rcall	.+352    	; 0x4dc <__floatsisf>
 37c:	27 e1       	ldi	r18, 0x17	; 23
 37e:	37 eb       	ldi	r19, 0xB7	; 183
 380:	41 ed       	ldi	r20, 0xD1	; 209
 382:	5a e3       	ldi	r21, 0x3A	; 58
 384:	5f d1       	rcall	.+702    	; 0x644 <__mulsf3>
 386:	9b 01       	movw	r18, r22
 388:	ac 01       	movw	r20, r24
 38a:	c7 01       	movw	r24, r14
 38c:	b6 01       	movw	r22, r12
 38e:	3c d0       	rcall	.+120    	; 0x408 <__addsf3>
 390:	6b 01       	movw	r12, r22
 392:	7c 01       	movw	r14, r24
 394:	ff ef       	ldi	r31, 0xFF	; 255
 396:	27 ea       	ldi	r18, 0xA7	; 167
 398:	81 e6       	ldi	r24, 0x61	; 97
 39a:	f1 50       	subi	r31, 0x01	; 1
 39c:	20 40       	sbci	r18, 0x00	; 0
 39e:	80 40       	sbci	r24, 0x00	; 0
 3a0:	e1 f7       	brne	.-8      	; 0x39a <main+0xb4>
		_delay_ms(2000);
		set_timer();
 3a2:	00 c0       	rjmp	.+0      	; 0x3a4 <main+0xbe>
 3a4:	00 00       	nop
		checkIfHighscore(score);
 3a6:	0d df       	rcall	.-486    	; 0x1c2 <_Z9set_timerv>
 3a8:	c7 01       	movw	r24, r14
 3aa:	b6 01       	movw	r22, r12
		eeprom_w(address, score);
 3ac:	1a df       	rcall	.-460    	; 0x1e2 <_Z16checkIfHighscoref>
 3ae:	b7 01       	movw	r22, r14
 3b0:	a6 01       	movw	r20, r12
 3b2:	c8 01       	movw	r24, r16
 3b4:	14 df       	rcall	.-472    	; 0x1de <_Z8eeprom_wif>
		address++;
 3b6:	0f 5f       	subi	r16, 0xFF	; 255
 3b8:	1f 4f       	sbci	r17, 0xFF	; 255
		PORTB = 0b00000000;
 3ba:	15 b8       	out	0x05, r1	; 5
		set_timer();
 3bc:	02 df       	rcall	.-508    	; 0x1c2 <_Z9set_timerv>
 3be:	16 bc       	out	0x26, r1	; 38
		TCNT0 = 0;
 3c0:	34 df       	rcall	.-408    	; 0x22a <_Z12Set_servomaxv>
		Set_servomax();
 3c2:	9f ef       	ldi	r25, 0xFF	; 255
 3c4:	e3 ed       	ldi	r30, 0xD3	; 211
 3c6:	f0 e3       	ldi	r31, 0x30	; 48
 3c8:	91 50       	subi	r25, 0x01	; 1
 3ca:	e0 40       	sbci	r30, 0x00	; 0
 3cc:	f0 40       	sbci	r31, 0x00	; 0
 3ce:	e1 f7       	brne	.-8      	; 0x3c8 <main+0xe2>
 3d0:	00 c0       	rjmp	.+0      	; 0x3d2 <main+0xec>
 3d2:	00 00       	nop
 3d4:	63 e3       	ldi	r22, 0x33	; 51
		_delay_ms(1000);
		score = 1.4;
		Set_servomin(score);
 3d6:	73 e3       	ldi	r23, 0x33	; 51
 3d8:	83 eb       	ldi	r24, 0xB3	; 179
 3da:	9f e3       	ldi	r25, 0x3F	; 63
 3dc:	33 df       	rcall	.-410    	; 0x244 <_Z12Set_servominf>
 3de:	2f ef       	ldi	r18, 0xFF	; 255
 3e0:	83 e2       	ldi	r24, 0x23	; 35
 3e2:	94 ef       	ldi	r25, 0xF4	; 244
 3e4:	21 50       	subi	r18, 0x01	; 1
 3e6:	80 40       	sbci	r24, 0x00	; 0
 3e8:	90 40       	sbci	r25, 0x00	; 0
 3ea:	e1 f7       	brne	.-8      	; 0x3e4 <main+0xfe>
 3ec:	00 c0       	rjmp	.+0      	; 0x3ee <main+0x108>
 3ee:	00 00       	nop
 3f0:	1c df       	rcall	.-456    	; 0x22a <_Z12Set_servomaxv>
		_delay_ms(5000);
		Set_servomax();
 3f2:	ef ef       	ldi	r30, 0xFF	; 255
 3f4:	fb e7       	ldi	r31, 0x7B	; 123
 3f6:	22 e9       	ldi	r18, 0x92	; 146
 3f8:	e1 50       	subi	r30, 0x01	; 1
 3fa:	f0 40       	sbci	r31, 0x00	; 0
 3fc:	20 40       	sbci	r18, 0x00	; 0
 3fe:	e1 f7       	brne	.-8      	; 0x3f8 <main+0x112>
 400:	00 c0       	rjmp	.+0      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 402:	00 00       	nop
 404:	8f cf       	rjmp	.-226    	; 0x324 <main+0x3e>

00000406 <__subsf3>:
 406:	50 58       	subi	r21, 0x80	; 128

00000408 <__addsf3>:
 408:	bb 27       	eor	r27, r27
 40a:	aa 27       	eor	r26, r26
 40c:	0e d0       	rcall	.+28     	; 0x42a <__addsf3x>
 40e:	dc c0       	rjmp	.+440    	; 0x5c8 <__fp_round>
 410:	cd d0       	rcall	.+410    	; 0x5ac <__fp_pscA>
 412:	30 f0       	brcs	.+12     	; 0x420 <__addsf3+0x18>
 414:	d2 d0       	rcall	.+420    	; 0x5ba <__fp_pscB>
 416:	20 f0       	brcs	.+8      	; 0x420 <__addsf3+0x18>
 418:	31 f4       	brne	.+12     	; 0x426 <__addsf3+0x1e>
 41a:	9f 3f       	cpi	r25, 0xFF	; 255
 41c:	11 f4       	brne	.+4      	; 0x422 <__addsf3+0x1a>
 41e:	1e f4       	brtc	.+6      	; 0x426 <__addsf3+0x1e>
 420:	c2 c0       	rjmp	.+388    	; 0x5a6 <__fp_nan>
 422:	0e f4       	brtc	.+2      	; 0x426 <__addsf3+0x1e>
 424:	e0 95       	com	r30
 426:	e7 fb       	bst	r30, 7
 428:	b8 c0       	rjmp	.+368    	; 0x59a <__fp_inf>

0000042a <__addsf3x>:
 42a:	e9 2f       	mov	r30, r25
 42c:	de d0       	rcall	.+444    	; 0x5ea <__fp_split3>
 42e:	80 f3       	brcs	.-32     	; 0x410 <__addsf3+0x8>
 430:	ba 17       	cp	r27, r26
 432:	62 07       	cpc	r22, r18
 434:	73 07       	cpc	r23, r19
 436:	84 07       	cpc	r24, r20
 438:	95 07       	cpc	r25, r21
 43a:	18 f0       	brcs	.+6      	; 0x442 <__addsf3x+0x18>
 43c:	71 f4       	brne	.+28     	; 0x45a <__addsf3x+0x30>
 43e:	9e f5       	brtc	.+102    	; 0x4a6 <__addsf3x+0x7c>
 440:	f6 c0       	rjmp	.+492    	; 0x62e <__fp_zero>
 442:	0e f4       	brtc	.+2      	; 0x446 <__addsf3x+0x1c>
 444:	e0 95       	com	r30
 446:	0b 2e       	mov	r0, r27
 448:	ba 2f       	mov	r27, r26
 44a:	a0 2d       	mov	r26, r0
 44c:	0b 01       	movw	r0, r22
 44e:	b9 01       	movw	r22, r18
 450:	90 01       	movw	r18, r0
 452:	0c 01       	movw	r0, r24
 454:	ca 01       	movw	r24, r20
 456:	a0 01       	movw	r20, r0
 458:	11 24       	eor	r1, r1
 45a:	ff 27       	eor	r31, r31
 45c:	59 1b       	sub	r21, r25
 45e:	99 f0       	breq	.+38     	; 0x486 <__addsf3x+0x5c>
 460:	59 3f       	cpi	r21, 0xF9	; 249
 462:	50 f4       	brcc	.+20     	; 0x478 <__addsf3x+0x4e>
 464:	50 3e       	cpi	r21, 0xE0	; 224
 466:	68 f1       	brcs	.+90     	; 0x4c2 <__addsf3x+0x98>
 468:	1a 16       	cp	r1, r26
 46a:	f0 40       	sbci	r31, 0x00	; 0
 46c:	a2 2f       	mov	r26, r18
 46e:	23 2f       	mov	r18, r19
 470:	34 2f       	mov	r19, r20
 472:	44 27       	eor	r20, r20
 474:	58 5f       	subi	r21, 0xF8	; 248
 476:	f3 cf       	rjmp	.-26     	; 0x45e <__addsf3x+0x34>
 478:	46 95       	lsr	r20
 47a:	37 95       	ror	r19
 47c:	27 95       	ror	r18
 47e:	a7 95       	ror	r26
 480:	f0 40       	sbci	r31, 0x00	; 0
 482:	53 95       	inc	r21
 484:	c9 f7       	brne	.-14     	; 0x478 <__addsf3x+0x4e>
 486:	7e f4       	brtc	.+30     	; 0x4a6 <__addsf3x+0x7c>
 488:	1f 16       	cp	r1, r31
 48a:	ba 0b       	sbc	r27, r26
 48c:	62 0b       	sbc	r22, r18
 48e:	73 0b       	sbc	r23, r19
 490:	84 0b       	sbc	r24, r20
 492:	ba f0       	brmi	.+46     	; 0x4c2 <__addsf3x+0x98>
 494:	91 50       	subi	r25, 0x01	; 1
 496:	a1 f0       	breq	.+40     	; 0x4c0 <__addsf3x+0x96>
 498:	ff 0f       	add	r31, r31
 49a:	bb 1f       	adc	r27, r27
 49c:	66 1f       	adc	r22, r22
 49e:	77 1f       	adc	r23, r23
 4a0:	88 1f       	adc	r24, r24
 4a2:	c2 f7       	brpl	.-16     	; 0x494 <__addsf3x+0x6a>
 4a4:	0e c0       	rjmp	.+28     	; 0x4c2 <__addsf3x+0x98>
 4a6:	ba 0f       	add	r27, r26
 4a8:	62 1f       	adc	r22, r18
 4aa:	73 1f       	adc	r23, r19
 4ac:	84 1f       	adc	r24, r20
 4ae:	48 f4       	brcc	.+18     	; 0x4c2 <__addsf3x+0x98>
 4b0:	87 95       	ror	r24
 4b2:	77 95       	ror	r23
 4b4:	67 95       	ror	r22
 4b6:	b7 95       	ror	r27
 4b8:	f7 95       	ror	r31
 4ba:	9e 3f       	cpi	r25, 0xFE	; 254
 4bc:	08 f0       	brcs	.+2      	; 0x4c0 <__addsf3x+0x96>
 4be:	b3 cf       	rjmp	.-154    	; 0x426 <__addsf3+0x1e>
 4c0:	93 95       	inc	r25
 4c2:	88 0f       	add	r24, r24
 4c4:	08 f0       	brcs	.+2      	; 0x4c8 <__addsf3x+0x9e>
 4c6:	99 27       	eor	r25, r25
 4c8:	ee 0f       	add	r30, r30
 4ca:	97 95       	ror	r25
 4cc:	87 95       	ror	r24
 4ce:	08 95       	ret

000004d0 <__cmpsf2>:
 4d0:	40 d0       	rcall	.+128    	; 0x552 <__fp_cmp>
 4d2:	08 f4       	brcc	.+2      	; 0x4d6 <__cmpsf2+0x6>
 4d4:	81 e0       	ldi	r24, 0x01	; 1
 4d6:	08 95       	ret

000004d8 <__floatunsisf>:
 4d8:	e8 94       	clt
 4da:	09 c0       	rjmp	.+18     	; 0x4ee <__floatsisf+0x12>

000004dc <__floatsisf>:
 4dc:	97 fb       	bst	r25, 7
 4de:	3e f4       	brtc	.+14     	; 0x4ee <__floatsisf+0x12>
 4e0:	90 95       	com	r25
 4e2:	80 95       	com	r24
 4e4:	70 95       	com	r23
 4e6:	61 95       	neg	r22
 4e8:	7f 4f       	sbci	r23, 0xFF	; 255
 4ea:	8f 4f       	sbci	r24, 0xFF	; 255
 4ec:	9f 4f       	sbci	r25, 0xFF	; 255
 4ee:	99 23       	and	r25, r25
 4f0:	a9 f0       	breq	.+42     	; 0x51c <__floatsisf+0x40>
 4f2:	f9 2f       	mov	r31, r25
 4f4:	96 e9       	ldi	r25, 0x96	; 150
 4f6:	bb 27       	eor	r27, r27
 4f8:	93 95       	inc	r25
 4fa:	f6 95       	lsr	r31
 4fc:	87 95       	ror	r24
 4fe:	77 95       	ror	r23
 500:	67 95       	ror	r22
 502:	b7 95       	ror	r27
 504:	f1 11       	cpse	r31, r1
 506:	f8 cf       	rjmp	.-16     	; 0x4f8 <__floatsisf+0x1c>
 508:	fa f4       	brpl	.+62     	; 0x548 <__floatsisf+0x6c>
 50a:	bb 0f       	add	r27, r27
 50c:	11 f4       	brne	.+4      	; 0x512 <__floatsisf+0x36>
 50e:	60 ff       	sbrs	r22, 0
 510:	1b c0       	rjmp	.+54     	; 0x548 <__floatsisf+0x6c>
 512:	6f 5f       	subi	r22, 0xFF	; 255
 514:	7f 4f       	sbci	r23, 0xFF	; 255
 516:	8f 4f       	sbci	r24, 0xFF	; 255
 518:	9f 4f       	sbci	r25, 0xFF	; 255
 51a:	16 c0       	rjmp	.+44     	; 0x548 <__floatsisf+0x6c>
 51c:	88 23       	and	r24, r24
 51e:	11 f0       	breq	.+4      	; 0x524 <__floatsisf+0x48>
 520:	96 e9       	ldi	r25, 0x96	; 150
 522:	11 c0       	rjmp	.+34     	; 0x546 <__floatsisf+0x6a>
 524:	77 23       	and	r23, r23
 526:	21 f0       	breq	.+8      	; 0x530 <__floatsisf+0x54>
 528:	9e e8       	ldi	r25, 0x8E	; 142
 52a:	87 2f       	mov	r24, r23
 52c:	76 2f       	mov	r23, r22
 52e:	05 c0       	rjmp	.+10     	; 0x53a <__floatsisf+0x5e>
 530:	66 23       	and	r22, r22
 532:	71 f0       	breq	.+28     	; 0x550 <__floatsisf+0x74>
 534:	96 e8       	ldi	r25, 0x86	; 134
 536:	86 2f       	mov	r24, r22
 538:	70 e0       	ldi	r23, 0x00	; 0
 53a:	60 e0       	ldi	r22, 0x00	; 0
 53c:	2a f0       	brmi	.+10     	; 0x548 <__floatsisf+0x6c>
 53e:	9a 95       	dec	r25
 540:	66 0f       	add	r22, r22
 542:	77 1f       	adc	r23, r23
 544:	88 1f       	adc	r24, r24
 546:	da f7       	brpl	.-10     	; 0x53e <__floatsisf+0x62>
 548:	88 0f       	add	r24, r24
 54a:	96 95       	lsr	r25
 54c:	87 95       	ror	r24
 54e:	97 f9       	bld	r25, 7
 550:	08 95       	ret

00000552 <__fp_cmp>:
 552:	99 0f       	add	r25, r25
 554:	00 08       	sbc	r0, r0
 556:	55 0f       	add	r21, r21
 558:	aa 0b       	sbc	r26, r26
 55a:	e0 e8       	ldi	r30, 0x80	; 128
 55c:	fe ef       	ldi	r31, 0xFE	; 254
 55e:	16 16       	cp	r1, r22
 560:	17 06       	cpc	r1, r23
 562:	e8 07       	cpc	r30, r24
 564:	f9 07       	cpc	r31, r25
 566:	c0 f0       	brcs	.+48     	; 0x598 <__fp_cmp+0x46>
 568:	12 16       	cp	r1, r18
 56a:	13 06       	cpc	r1, r19
 56c:	e4 07       	cpc	r30, r20
 56e:	f5 07       	cpc	r31, r21
 570:	98 f0       	brcs	.+38     	; 0x598 <__fp_cmp+0x46>
 572:	62 1b       	sub	r22, r18
 574:	73 0b       	sbc	r23, r19
 576:	84 0b       	sbc	r24, r20
 578:	95 0b       	sbc	r25, r21
 57a:	39 f4       	brne	.+14     	; 0x58a <__fp_cmp+0x38>
 57c:	0a 26       	eor	r0, r26
 57e:	61 f0       	breq	.+24     	; 0x598 <__fp_cmp+0x46>
 580:	23 2b       	or	r18, r19
 582:	24 2b       	or	r18, r20
 584:	25 2b       	or	r18, r21
 586:	21 f4       	brne	.+8      	; 0x590 <__fp_cmp+0x3e>
 588:	08 95       	ret
 58a:	0a 26       	eor	r0, r26
 58c:	09 f4       	brne	.+2      	; 0x590 <__fp_cmp+0x3e>
 58e:	a1 40       	sbci	r26, 0x01	; 1
 590:	a6 95       	lsr	r26
 592:	8f ef       	ldi	r24, 0xFF	; 255
 594:	81 1d       	adc	r24, r1
 596:	81 1d       	adc	r24, r1
 598:	08 95       	ret

0000059a <__fp_inf>:
 59a:	97 f9       	bld	r25, 7
 59c:	9f 67       	ori	r25, 0x7F	; 127
 59e:	80 e8       	ldi	r24, 0x80	; 128
 5a0:	70 e0       	ldi	r23, 0x00	; 0
 5a2:	60 e0       	ldi	r22, 0x00	; 0
 5a4:	08 95       	ret

000005a6 <__fp_nan>:
 5a6:	9f ef       	ldi	r25, 0xFF	; 255
 5a8:	80 ec       	ldi	r24, 0xC0	; 192
 5aa:	08 95       	ret

000005ac <__fp_pscA>:
 5ac:	00 24       	eor	r0, r0
 5ae:	0a 94       	dec	r0
 5b0:	16 16       	cp	r1, r22
 5b2:	17 06       	cpc	r1, r23
 5b4:	18 06       	cpc	r1, r24
 5b6:	09 06       	cpc	r0, r25
 5b8:	08 95       	ret

000005ba <__fp_pscB>:
 5ba:	00 24       	eor	r0, r0
 5bc:	0a 94       	dec	r0
 5be:	12 16       	cp	r1, r18
 5c0:	13 06       	cpc	r1, r19
 5c2:	14 06       	cpc	r1, r20
 5c4:	05 06       	cpc	r0, r21
 5c6:	08 95       	ret

000005c8 <__fp_round>:
 5c8:	09 2e       	mov	r0, r25
 5ca:	03 94       	inc	r0
 5cc:	00 0c       	add	r0, r0
 5ce:	11 f4       	brne	.+4      	; 0x5d4 <__fp_round+0xc>
 5d0:	88 23       	and	r24, r24
 5d2:	52 f0       	brmi	.+20     	; 0x5e8 <__fp_round+0x20>
 5d4:	bb 0f       	add	r27, r27
 5d6:	40 f4       	brcc	.+16     	; 0x5e8 <__fp_round+0x20>
 5d8:	bf 2b       	or	r27, r31
 5da:	11 f4       	brne	.+4      	; 0x5e0 <__fp_round+0x18>
 5dc:	60 ff       	sbrs	r22, 0
 5de:	04 c0       	rjmp	.+8      	; 0x5e8 <__fp_round+0x20>
 5e0:	6f 5f       	subi	r22, 0xFF	; 255
 5e2:	7f 4f       	sbci	r23, 0xFF	; 255
 5e4:	8f 4f       	sbci	r24, 0xFF	; 255
 5e6:	9f 4f       	sbci	r25, 0xFF	; 255
 5e8:	08 95       	ret

000005ea <__fp_split3>:
 5ea:	57 fd       	sbrc	r21, 7
 5ec:	90 58       	subi	r25, 0x80	; 128
 5ee:	44 0f       	add	r20, r20
 5f0:	55 1f       	adc	r21, r21
 5f2:	59 f0       	breq	.+22     	; 0x60a <__fp_splitA+0x10>
 5f4:	5f 3f       	cpi	r21, 0xFF	; 255
 5f6:	71 f0       	breq	.+28     	; 0x614 <__fp_splitA+0x1a>
 5f8:	47 95       	ror	r20

000005fa <__fp_splitA>:
 5fa:	88 0f       	add	r24, r24
 5fc:	97 fb       	bst	r25, 7
 5fe:	99 1f       	adc	r25, r25
 600:	61 f0       	breq	.+24     	; 0x61a <__fp_splitA+0x20>
 602:	9f 3f       	cpi	r25, 0xFF	; 255
 604:	79 f0       	breq	.+30     	; 0x624 <__fp_splitA+0x2a>
 606:	87 95       	ror	r24
 608:	08 95       	ret
 60a:	12 16       	cp	r1, r18
 60c:	13 06       	cpc	r1, r19
 60e:	14 06       	cpc	r1, r20
 610:	55 1f       	adc	r21, r21
 612:	f2 cf       	rjmp	.-28     	; 0x5f8 <__fp_split3+0xe>
 614:	46 95       	lsr	r20
 616:	f1 df       	rcall	.-30     	; 0x5fa <__fp_splitA>
 618:	08 c0       	rjmp	.+16     	; 0x62a <__fp_splitA+0x30>
 61a:	16 16       	cp	r1, r22
 61c:	17 06       	cpc	r1, r23
 61e:	18 06       	cpc	r1, r24
 620:	99 1f       	adc	r25, r25
 622:	f1 cf       	rjmp	.-30     	; 0x606 <__fp_splitA+0xc>
 624:	86 95       	lsr	r24
 626:	71 05       	cpc	r23, r1
 628:	61 05       	cpc	r22, r1
 62a:	08 94       	sec
 62c:	08 95       	ret

0000062e <__fp_zero>:
 62e:	e8 94       	clt

00000630 <__fp_szero>:
 630:	bb 27       	eor	r27, r27
 632:	66 27       	eor	r22, r22
 634:	77 27       	eor	r23, r23
 636:	cb 01       	movw	r24, r22
 638:	97 f9       	bld	r25, 7
 63a:	08 95       	ret

0000063c <__gesf2>:
 63c:	8a df       	rcall	.-236    	; 0x552 <__fp_cmp>
 63e:	08 f4       	brcc	.+2      	; 0x642 <__gesf2+0x6>
 640:	8f ef       	ldi	r24, 0xFF	; 255
 642:	08 95       	ret

00000644 <__mulsf3>:
 644:	0b d0       	rcall	.+22     	; 0x65c <__mulsf3x>
 646:	c0 cf       	rjmp	.-128    	; 0x5c8 <__fp_round>
 648:	b1 df       	rcall	.-158    	; 0x5ac <__fp_pscA>
 64a:	28 f0       	brcs	.+10     	; 0x656 <__mulsf3+0x12>
 64c:	b6 df       	rcall	.-148    	; 0x5ba <__fp_pscB>
 64e:	18 f0       	brcs	.+6      	; 0x656 <__mulsf3+0x12>
 650:	95 23       	and	r25, r21
 652:	09 f0       	breq	.+2      	; 0x656 <__mulsf3+0x12>
 654:	a2 cf       	rjmp	.-188    	; 0x59a <__fp_inf>
 656:	a7 cf       	rjmp	.-178    	; 0x5a6 <__fp_nan>
 658:	11 24       	eor	r1, r1
 65a:	ea cf       	rjmp	.-44     	; 0x630 <__fp_szero>

0000065c <__mulsf3x>:
 65c:	c6 df       	rcall	.-116    	; 0x5ea <__fp_split3>
 65e:	a0 f3       	brcs	.-24     	; 0x648 <__mulsf3+0x4>

00000660 <__mulsf3_pse>:
 660:	95 9f       	mul	r25, r21
 662:	d1 f3       	breq	.-12     	; 0x658 <__mulsf3+0x14>
 664:	95 0f       	add	r25, r21
 666:	50 e0       	ldi	r21, 0x00	; 0
 668:	55 1f       	adc	r21, r21
 66a:	62 9f       	mul	r22, r18
 66c:	f0 01       	movw	r30, r0
 66e:	72 9f       	mul	r23, r18
 670:	bb 27       	eor	r27, r27
 672:	f0 0d       	add	r31, r0
 674:	b1 1d       	adc	r27, r1
 676:	63 9f       	mul	r22, r19
 678:	aa 27       	eor	r26, r26
 67a:	f0 0d       	add	r31, r0
 67c:	b1 1d       	adc	r27, r1
 67e:	aa 1f       	adc	r26, r26
 680:	64 9f       	mul	r22, r20
 682:	66 27       	eor	r22, r22
 684:	b0 0d       	add	r27, r0
 686:	a1 1d       	adc	r26, r1
 688:	66 1f       	adc	r22, r22
 68a:	82 9f       	mul	r24, r18
 68c:	22 27       	eor	r18, r18
 68e:	b0 0d       	add	r27, r0
 690:	a1 1d       	adc	r26, r1
 692:	62 1f       	adc	r22, r18
 694:	73 9f       	mul	r23, r19
 696:	b0 0d       	add	r27, r0
 698:	a1 1d       	adc	r26, r1
 69a:	62 1f       	adc	r22, r18
 69c:	83 9f       	mul	r24, r19
 69e:	a0 0d       	add	r26, r0
 6a0:	61 1d       	adc	r22, r1
 6a2:	22 1f       	adc	r18, r18
 6a4:	74 9f       	mul	r23, r20
 6a6:	33 27       	eor	r19, r19
 6a8:	a0 0d       	add	r26, r0
 6aa:	61 1d       	adc	r22, r1
 6ac:	23 1f       	adc	r18, r19
 6ae:	84 9f       	mul	r24, r20
 6b0:	60 0d       	add	r22, r0
 6b2:	21 1d       	adc	r18, r1
 6b4:	82 2f       	mov	r24, r18
 6b6:	76 2f       	mov	r23, r22
 6b8:	6a 2f       	mov	r22, r26
 6ba:	11 24       	eor	r1, r1
 6bc:	9f 57       	subi	r25, 0x7F	; 127
 6be:	50 40       	sbci	r21, 0x00	; 0
 6c0:	8a f0       	brmi	.+34     	; 0x6e4 <__mulsf3_pse+0x84>
 6c2:	e1 f0       	breq	.+56     	; 0x6fc <__mulsf3_pse+0x9c>
 6c4:	88 23       	and	r24, r24
 6c6:	4a f0       	brmi	.+18     	; 0x6da <__mulsf3_pse+0x7a>
 6c8:	ee 0f       	add	r30, r30
 6ca:	ff 1f       	adc	r31, r31
 6cc:	bb 1f       	adc	r27, r27
 6ce:	66 1f       	adc	r22, r22
 6d0:	77 1f       	adc	r23, r23
 6d2:	88 1f       	adc	r24, r24
 6d4:	91 50       	subi	r25, 0x01	; 1
 6d6:	50 40       	sbci	r21, 0x00	; 0
 6d8:	a9 f7       	brne	.-22     	; 0x6c4 <__mulsf3_pse+0x64>
 6da:	9e 3f       	cpi	r25, 0xFE	; 254
 6dc:	51 05       	cpc	r21, r1
 6de:	70 f0       	brcs	.+28     	; 0x6fc <__mulsf3_pse+0x9c>
 6e0:	5c cf       	rjmp	.-328    	; 0x59a <__fp_inf>
 6e2:	a6 cf       	rjmp	.-180    	; 0x630 <__fp_szero>
 6e4:	5f 3f       	cpi	r21, 0xFF	; 255
 6e6:	ec f3       	brlt	.-6      	; 0x6e2 <__mulsf3_pse+0x82>
 6e8:	98 3e       	cpi	r25, 0xE8	; 232
 6ea:	dc f3       	brlt	.-10     	; 0x6e2 <__mulsf3_pse+0x82>
 6ec:	86 95       	lsr	r24
 6ee:	77 95       	ror	r23
 6f0:	67 95       	ror	r22
 6f2:	b7 95       	ror	r27
 6f4:	f7 95       	ror	r31
 6f6:	e7 95       	ror	r30
 6f8:	9f 5f       	subi	r25, 0xFF	; 255
 6fa:	c1 f7       	brne	.-16     	; 0x6ec <__mulsf3_pse+0x8c>
 6fc:	fe 2b       	or	r31, r30
 6fe:	88 0f       	add	r24, r24
 700:	91 1d       	adc	r25, r1
 702:	96 95       	lsr	r25
 704:	87 95       	ror	r24
 706:	97 f9       	bld	r25, 7
 708:	08 95       	ret

0000070a <__divmodhi4>:
 70a:	97 fb       	bst	r25, 7
 70c:	07 2e       	mov	r0, r23
 70e:	16 f4       	brtc	.+4      	; 0x714 <__divmodhi4+0xa>
 710:	00 94       	com	r0
 712:	06 d0       	rcall	.+12     	; 0x720 <__divmodhi4_neg1>
 714:	77 fd       	sbrc	r23, 7
 716:	08 d0       	rcall	.+16     	; 0x728 <__divmodhi4_neg2>
 718:	0b d0       	rcall	.+22     	; 0x730 <__udivmodhi4>
 71a:	07 fc       	sbrc	r0, 7
 71c:	05 d0       	rcall	.+10     	; 0x728 <__divmodhi4_neg2>
 71e:	3e f4       	brtc	.+14     	; 0x72e <__divmodhi4_exit>

00000720 <__divmodhi4_neg1>:
 720:	90 95       	com	r25
 722:	81 95       	neg	r24
 724:	9f 4f       	sbci	r25, 0xFF	; 255
 726:	08 95       	ret

00000728 <__divmodhi4_neg2>:
 728:	70 95       	com	r23
 72a:	61 95       	neg	r22
 72c:	7f 4f       	sbci	r23, 0xFF	; 255

0000072e <__divmodhi4_exit>:
 72e:	08 95       	ret

00000730 <__udivmodhi4>:
 730:	aa 1b       	sub	r26, r26
 732:	bb 1b       	sub	r27, r27
 734:	51 e1       	ldi	r21, 0x11	; 17
 736:	07 c0       	rjmp	.+14     	; 0x746 <__udivmodhi4_ep>

00000738 <__udivmodhi4_loop>:
 738:	aa 1f       	adc	r26, r26
 73a:	bb 1f       	adc	r27, r27
 73c:	a6 17       	cp	r26, r22
 73e:	b7 07       	cpc	r27, r23
 740:	10 f0       	brcs	.+4      	; 0x746 <__udivmodhi4_ep>
 742:	a6 1b       	sub	r26, r22
 744:	b7 0b       	sbc	r27, r23

00000746 <__udivmodhi4_ep>:
 746:	88 1f       	adc	r24, r24
 748:	99 1f       	adc	r25, r25
 74a:	5a 95       	dec	r21
 74c:	a9 f7       	brne	.-22     	; 0x738 <__udivmodhi4_loop>
 74e:	80 95       	com	r24
 750:	90 95       	com	r25
 752:	bc 01       	movw	r22, r24
 754:	cd 01       	movw	r24, r26
 756:	08 95       	ret

00000758 <do_rand>:
 758:	8f 92       	push	r8
 75a:	9f 92       	push	r9
 75c:	af 92       	push	r10
 75e:	bf 92       	push	r11
 760:	cf 92       	push	r12
 762:	df 92       	push	r13
 764:	ef 92       	push	r14
 766:	ff 92       	push	r15
 768:	cf 93       	push	r28
 76a:	df 93       	push	r29
 76c:	ec 01       	movw	r28, r24
 76e:	68 81       	ld	r22, Y
 770:	79 81       	ldd	r23, Y+1	; 0x01
 772:	8a 81       	ldd	r24, Y+2	; 0x02
 774:	9b 81       	ldd	r25, Y+3	; 0x03
 776:	61 15       	cp	r22, r1
 778:	71 05       	cpc	r23, r1
 77a:	81 05       	cpc	r24, r1
 77c:	91 05       	cpc	r25, r1
 77e:	21 f4       	brne	.+8      	; 0x788 <do_rand+0x30>
 780:	64 e2       	ldi	r22, 0x24	; 36
 782:	79 ed       	ldi	r23, 0xD9	; 217
 784:	8b e5       	ldi	r24, 0x5B	; 91
 786:	97 e0       	ldi	r25, 0x07	; 7
 788:	2d e1       	ldi	r18, 0x1D	; 29
 78a:	33 ef       	ldi	r19, 0xF3	; 243
 78c:	41 e0       	ldi	r20, 0x01	; 1
 78e:	50 e0       	ldi	r21, 0x00	; 0
 790:	4e d0       	rcall	.+156    	; 0x82e <__divmodsi4>
 792:	49 01       	movw	r8, r18
 794:	5a 01       	movw	r10, r20
 796:	9b 01       	movw	r18, r22
 798:	ac 01       	movw	r20, r24
 79a:	a7 ea       	ldi	r26, 0xA7	; 167
 79c:	b1 e4       	ldi	r27, 0x41	; 65
 79e:	63 d0       	rcall	.+198    	; 0x866 <__muluhisi3>
 7a0:	6b 01       	movw	r12, r22
 7a2:	7c 01       	movw	r14, r24
 7a4:	ac ee       	ldi	r26, 0xEC	; 236
 7a6:	b4 ef       	ldi	r27, 0xF4	; 244
 7a8:	a5 01       	movw	r20, r10
 7aa:	94 01       	movw	r18, r8
 7ac:	68 d0       	rcall	.+208    	; 0x87e <__mulohisi3>
 7ae:	dc 01       	movw	r26, r24
 7b0:	cb 01       	movw	r24, r22
 7b2:	8c 0d       	add	r24, r12
 7b4:	9d 1d       	adc	r25, r13
 7b6:	ae 1d       	adc	r26, r14
 7b8:	bf 1d       	adc	r27, r15
 7ba:	b7 ff       	sbrs	r27, 7
 7bc:	03 c0       	rjmp	.+6      	; 0x7c4 <do_rand+0x6c>
 7be:	01 97       	sbiw	r24, 0x01	; 1
 7c0:	a1 09       	sbc	r26, r1
 7c2:	b0 48       	sbci	r27, 0x80	; 128
 7c4:	88 83       	st	Y, r24
 7c6:	99 83       	std	Y+1, r25	; 0x01
 7c8:	aa 83       	std	Y+2, r26	; 0x02
 7ca:	bb 83       	std	Y+3, r27	; 0x03
 7cc:	9f 77       	andi	r25, 0x7F	; 127
 7ce:	df 91       	pop	r29
 7d0:	cf 91       	pop	r28
 7d2:	ff 90       	pop	r15
 7d4:	ef 90       	pop	r14
 7d6:	df 90       	pop	r13
 7d8:	cf 90       	pop	r12
 7da:	bf 90       	pop	r11
 7dc:	af 90       	pop	r10
 7de:	9f 90       	pop	r9
 7e0:	8f 90       	pop	r8
 7e2:	08 95       	ret

000007e4 <rand_r>:
 7e4:	b9 cf       	rjmp	.-142    	; 0x758 <do_rand>

000007e6 <rand>:
 7e6:	80 e0       	ldi	r24, 0x00	; 0
 7e8:	91 e0       	ldi	r25, 0x01	; 1
 7ea:	b6 cf       	rjmp	.-148    	; 0x758 <do_rand>

000007ec <srand>:
 7ec:	a0 e0       	ldi	r26, 0x00	; 0
 7ee:	b0 e0       	ldi	r27, 0x00	; 0
 7f0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 7f4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 7f8:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 7fc:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 800:	08 95       	ret

00000802 <eeprom_write_dword>:
 802:	24 2f       	mov	r18, r20
 804:	07 d0       	rcall	.+14     	; 0x814 <eeprom_write_r18>
 806:	25 2f       	mov	r18, r21
 808:	05 d0       	rcall	.+10     	; 0x814 <eeprom_write_r18>
 80a:	00 c0       	rjmp	.+0      	; 0x80c <eeprom_write_word>

0000080c <eeprom_write_word>:
 80c:	02 d0       	rcall	.+4      	; 0x812 <eeprom_write_byte>
 80e:	27 2f       	mov	r18, r23
 810:	01 c0       	rjmp	.+2      	; 0x814 <eeprom_write_r18>

00000812 <eeprom_write_byte>:
 812:	26 2f       	mov	r18, r22

00000814 <eeprom_write_r18>:
 814:	f9 99       	sbic	0x1f, 1	; 31
 816:	fe cf       	rjmp	.-4      	; 0x814 <eeprom_write_r18>
 818:	1f ba       	out	0x1f, r1	; 31
 81a:	92 bd       	out	0x22, r25	; 34
 81c:	81 bd       	out	0x21, r24	; 33
 81e:	20 bd       	out	0x20, r18	; 32
 820:	0f b6       	in	r0, 0x3f	; 63
 822:	f8 94       	cli
 824:	fa 9a       	sbi	0x1f, 2	; 31
 826:	f9 9a       	sbi	0x1f, 1	; 31
 828:	0f be       	out	0x3f, r0	; 63
 82a:	01 96       	adiw	r24, 0x01	; 1
 82c:	08 95       	ret

0000082e <__divmodsi4>:
 82e:	05 2e       	mov	r0, r21
 830:	97 fb       	bst	r25, 7
 832:	16 f4       	brtc	.+4      	; 0x838 <__divmodsi4+0xa>
 834:	00 94       	com	r0
 836:	0f d0       	rcall	.+30     	; 0x856 <__negsi2>
 838:	57 fd       	sbrc	r21, 7
 83a:	05 d0       	rcall	.+10     	; 0x846 <__divmodsi4_neg2>
 83c:	24 d0       	rcall	.+72     	; 0x886 <__udivmodsi4>
 83e:	07 fc       	sbrc	r0, 7
 840:	02 d0       	rcall	.+4      	; 0x846 <__divmodsi4_neg2>
 842:	46 f4       	brtc	.+16     	; 0x854 <__divmodsi4_exit>
 844:	08 c0       	rjmp	.+16     	; 0x856 <__negsi2>

00000846 <__divmodsi4_neg2>:
 846:	50 95       	com	r21
 848:	40 95       	com	r20
 84a:	30 95       	com	r19
 84c:	21 95       	neg	r18
 84e:	3f 4f       	sbci	r19, 0xFF	; 255
 850:	4f 4f       	sbci	r20, 0xFF	; 255
 852:	5f 4f       	sbci	r21, 0xFF	; 255

00000854 <__divmodsi4_exit>:
 854:	08 95       	ret

00000856 <__negsi2>:
 856:	90 95       	com	r25
 858:	80 95       	com	r24
 85a:	70 95       	com	r23
 85c:	61 95       	neg	r22
 85e:	7f 4f       	sbci	r23, 0xFF	; 255
 860:	8f 4f       	sbci	r24, 0xFF	; 255
 862:	9f 4f       	sbci	r25, 0xFF	; 255
 864:	08 95       	ret

00000866 <__muluhisi3>:
 866:	31 d0       	rcall	.+98     	; 0x8ca <__umulhisi3>
 868:	a5 9f       	mul	r26, r21
 86a:	90 0d       	add	r25, r0
 86c:	b4 9f       	mul	r27, r20
 86e:	90 0d       	add	r25, r0
 870:	a4 9f       	mul	r26, r20
 872:	80 0d       	add	r24, r0
 874:	91 1d       	adc	r25, r1
 876:	11 24       	eor	r1, r1
 878:	08 95       	ret

0000087a <__mulshisi3>:
 87a:	b7 ff       	sbrs	r27, 7
 87c:	f4 cf       	rjmp	.-24     	; 0x866 <__muluhisi3>

0000087e <__mulohisi3>:
 87e:	f3 df       	rcall	.-26     	; 0x866 <__muluhisi3>
 880:	82 1b       	sub	r24, r18
 882:	93 0b       	sbc	r25, r19
 884:	08 95       	ret

00000886 <__udivmodsi4>:
 886:	a1 e2       	ldi	r26, 0x21	; 33
 888:	1a 2e       	mov	r1, r26
 88a:	aa 1b       	sub	r26, r26
 88c:	bb 1b       	sub	r27, r27
 88e:	fd 01       	movw	r30, r26
 890:	0d c0       	rjmp	.+26     	; 0x8ac <__udivmodsi4_ep>

00000892 <__udivmodsi4_loop>:
 892:	aa 1f       	adc	r26, r26
 894:	bb 1f       	adc	r27, r27
 896:	ee 1f       	adc	r30, r30
 898:	ff 1f       	adc	r31, r31
 89a:	a2 17       	cp	r26, r18
 89c:	b3 07       	cpc	r27, r19
 89e:	e4 07       	cpc	r30, r20
 8a0:	f5 07       	cpc	r31, r21
 8a2:	20 f0       	brcs	.+8      	; 0x8ac <__udivmodsi4_ep>
 8a4:	a2 1b       	sub	r26, r18
 8a6:	b3 0b       	sbc	r27, r19
 8a8:	e4 0b       	sbc	r30, r20
 8aa:	f5 0b       	sbc	r31, r21

000008ac <__udivmodsi4_ep>:
 8ac:	66 1f       	adc	r22, r22
 8ae:	77 1f       	adc	r23, r23
 8b0:	88 1f       	adc	r24, r24
 8b2:	99 1f       	adc	r25, r25
 8b4:	1a 94       	dec	r1
 8b6:	69 f7       	brne	.-38     	; 0x892 <__udivmodsi4_loop>
 8b8:	60 95       	com	r22
 8ba:	70 95       	com	r23
 8bc:	80 95       	com	r24
 8be:	90 95       	com	r25
 8c0:	9b 01       	movw	r18, r22
 8c2:	ac 01       	movw	r20, r24
 8c4:	bd 01       	movw	r22, r26
 8c6:	cf 01       	movw	r24, r30
 8c8:	08 95       	ret

000008ca <__umulhisi3>:
 8ca:	a2 9f       	mul	r26, r18
 8cc:	b0 01       	movw	r22, r0
 8ce:	b3 9f       	mul	r27, r19
 8d0:	c0 01       	movw	r24, r0
 8d2:	a3 9f       	mul	r26, r19
 8d4:	70 0d       	add	r23, r0
 8d6:	81 1d       	adc	r24, r1
 8d8:	11 24       	eor	r1, r1
 8da:	91 1d       	adc	r25, r1
 8dc:	b2 9f       	mul	r27, r18
 8de:	70 0d       	add	r23, r0
 8e0:	81 1d       	adc	r24, r1
 8e2:	11 24       	eor	r1, r1
 8e4:	91 1d       	adc	r25, r1
 8e6:	08 95       	ret

000008e8 <_exit>:
 8e8:	f8 94       	cli

000008ea <__stop_program>:
 8ea:	ff cf       	rjmp	.-2      	; 0x8ea <__stop_program>
