
GccApplication11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  000008e0  00000974  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008e0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  0080010c  0080010c  00000980  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000980  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  000009f0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e01  00000000  00000000  00000ab0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000097f  00000000  00000000  000018b1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000664  00000000  00000000  00002230  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000013c  00000000  00000000  00002894  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000050e  00000000  00000000  000029d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000498  00000000  00000000  00002ede  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00003376  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4d c0       	rjmp	.+154    	; 0xc8 <__vector_11>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	56 c0       	rjmp	.+172    	; 0xf6 <__vector_18>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 ee       	ldi	r30, 0xE0	; 224
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 30       	cpi	r26, 0x0C	; 12
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ac e0       	ldi	r26, 0x0C	; 12
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 31       	cpi	r26, 0x10	; 16
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0d d1       	rcall	.+538    	; 0x2de <main>
  c4:	0b c4       	rjmp	.+2070   	; 0x8dc <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_11>:
uint16_t overflow_t2 = 0;
float highscore = 1.05;
float timeDelay = 1;

ISR(TIMER2_OVF_vect)
{
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	8f 93       	push	r24
  d4:	9f 93       	push	r25
	overflow_t2++;
  d6:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
  da:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <__data_end+0x1>
  de:	01 96       	adiw	r24, 0x01	; 1
  e0:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <__data_end+0x1>
  e4:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
}
  e8:	9f 91       	pop	r25
  ea:	8f 91       	pop	r24
  ec:	0f 90       	pop	r0
  ee:	0f be       	out	0x3f, r0	; 63
  f0:	0f 90       	pop	r0
  f2:	1f 90       	pop	r1
  f4:	18 95       	reti

000000f6 <__vector_18>:

ISR(TIMER0_OVF_vect)
{
  f6:	1f 92       	push	r1
  f8:	0f 92       	push	r0
  fa:	0f b6       	in	r0, 0x3f	; 63
  fc:	0f 92       	push	r0
  fe:	11 24       	eor	r1, r1
 100:	0b b6       	in	r0, 0x3b	; 59
 102:	0f 92       	push	r0
 104:	cf 92       	push	r12
 106:	df 92       	push	r13
 108:	ef 92       	push	r14
 10a:	ff 92       	push	r15
 10c:	2f 93       	push	r18
 10e:	3f 93       	push	r19
 110:	4f 93       	push	r20
 112:	5f 93       	push	r21
 114:	6f 93       	push	r22
 116:	7f 93       	push	r23
 118:	8f 93       	push	r24
 11a:	9f 93       	push	r25
 11c:	af 93       	push	r26
 11e:	bf 93       	push	r27
 120:	ef 93       	push	r30
 122:	ff 93       	push	r31
	overflow_t0++;
 124:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <overflow_t0>
 128:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <overflow_t0+0x1>
 12c:	6f 5f       	subi	r22, 0xFF	; 255
 12e:	7f 4f       	sbci	r23, 0xFF	; 255
 130:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <overflow_t0+0x1>
 134:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <overflow_t0>
	if ((PINB & 0x01) == 0x01)
 138:	18 9b       	sbis	0x03, 0	; 3
 13a:	1c c0       	rjmp	.+56     	; 0x174 <__vector_18+0x7e>
	{ //If output is high
		if (overflow_t0 >= (31*timeDelay))
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	c5 d1       	rcall	.+906    	; 0x4cc <__floatunsisf>
 142:	6b 01       	movw	r12, r22
 144:	7c 01       	movw	r14, r24
 146:	20 e0       	ldi	r18, 0x00	; 0
 148:	30 e0       	ldi	r19, 0x00	; 0
 14a:	48 ef       	ldi	r20, 0xF8	; 248
 14c:	51 e4       	ldi	r21, 0x41	; 65
 14e:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <timeDelay>
 152:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <timeDelay+0x1>
 156:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <timeDelay+0x2>
 15a:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <timeDelay+0x3>
 15e:	6c d2       	rcall	.+1240   	; 0x638 <__mulsf3>
 160:	9b 01       	movw	r18, r22
 162:	ac 01       	movw	r20, r24
 164:	c7 01       	movw	r24, r14
 166:	b6 01       	movw	r22, r12
 168:	63 d2       	rcall	.+1222   	; 0x630 <__gesf2>
 16a:	88 23       	and	r24, r24
 16c:	1c f0       	brlt	.+6      	; 0x174 <__vector_18+0x7e>
		{
			PORTC &= ~(1<<PORTC0); // Turn the output low
 16e:	88 b1       	in	r24, 0x08	; 8
 170:	8e 7f       	andi	r24, 0xFE	; 254
 172:	88 b9       	out	0x08, r24	; 8
		}
	}
	if ((PINB & 0x01) == 0x00)
 174:	18 99       	sbic	0x03, 0	; 3
 176:	0e c0       	rjmp	.+28     	; 0x194 <__vector_18+0x9e>
	{ //If output is low
		if (overflow_t0 >= 1249)
 178:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflow_t0>
 17c:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflow_t0+0x1>
 180:	81 3e       	cpi	r24, 0xE1	; 225
 182:	94 40       	sbci	r25, 0x04	; 4
 184:	38 f0       	brcs	.+14     	; 0x194 <__vector_18+0x9e>
		{ //If 20 ms have elapsed
			PORTC |= (1<<0); //Make output high (set the pin HIGH)
 186:	88 b1       	in	r24, 0x08	; 8
 188:	81 60       	ori	r24, 0x01	; 1
 18a:	88 b9       	out	0x08, r24	; 8
			overflow_t0 = 0; //End of the cycle
 18c:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <overflow_t0+0x1>
 190:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <overflow_t0>
		}
	}
}
 194:	ff 91       	pop	r31
 196:	ef 91       	pop	r30
 198:	bf 91       	pop	r27
 19a:	af 91       	pop	r26
 19c:	9f 91       	pop	r25
 19e:	8f 91       	pop	r24
 1a0:	7f 91       	pop	r23
 1a2:	6f 91       	pop	r22
 1a4:	5f 91       	pop	r21
 1a6:	4f 91       	pop	r20
 1a8:	3f 91       	pop	r19
 1aa:	2f 91       	pop	r18
 1ac:	ff 90       	pop	r15
 1ae:	ef 90       	pop	r14
 1b0:	df 90       	pop	r13
 1b2:	cf 90       	pop	r12
 1b4:	0f 90       	pop	r0
 1b6:	0b be       	out	0x3b, r0	; 59
 1b8:	0f 90       	pop	r0
 1ba:	0f be       	out	0x3f, r0	; 63
 1bc:	0f 90       	pop	r0
 1be:	1f 90       	pop	r1
 1c0:	18 95       	reti

000001c2 <set_timer>:
void set_timer()
{
	overflow_t2 = 0;
 1c2:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <__data_end+0x1>
 1c6:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <__data_end>
	TCNT2 = 0;
 1ca:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
 1ce:	08 95       	ret

000001d0 <random_create>:
}

int random_create()
{
	int number = rand() % 2000 + 2000;
 1d0:	04 d3       	rcall	.+1544   	; 0x7da <rand>
 1d2:	60 ed       	ldi	r22, 0xD0	; 208
 1d4:	77 e0       	ldi	r23, 0x07	; 7
 1d6:	93 d2       	rcall	.+1318   	; 0x6fe <__divmodhi4>
	return number; // Set from 2-4seconds
}
 1d8:	80 53       	subi	r24, 0x30	; 48
 1da:	98 4f       	sbci	r25, 0xF8	; 248
 1dc:	08 95       	ret

000001de <eeprom_w>:

void eeprom_w(int address, float result)
{
	eeprom_write_float (( float *) address, result);
 1de:	0b c3       	rjmp	.+1558   	; 0x7f6 <eeprom_write_dword>
 1e0:	08 95       	ret

000001e2 <checkIfHighscore>:
}

void checkIfHighscore(float score)
{
 1e2:	cf 92       	push	r12
 1e4:	df 92       	push	r13
 1e6:	ef 92       	push	r14
 1e8:	ff 92       	push	r15
 1ea:	6b 01       	movw	r12, r22
 1ec:	7c 01       	movw	r14, r24
	if(score < highscore)
 1ee:	60 91 08 01 	lds	r22, 0x0108	; 0x800108 <highscore>
 1f2:	70 91 09 01 	lds	r23, 0x0109	; 0x800109 <highscore+0x1>
 1f6:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <highscore+0x2>
 1fa:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <highscore+0x3>
 1fe:	a7 01       	movw	r20, r14
 200:	96 01       	movw	r18, r12
 202:	16 d2       	rcall	.+1068   	; 0x630 <__gesf2>
 204:	18 16       	cp	r1, r24
 206:	44 f4       	brge	.+16     	; 0x218 <checkIfHighscore+0x36>
	{
		highscore = score;
 208:	c0 92 08 01 	sts	0x0108, r12	; 0x800108 <highscore>
 20c:	d0 92 09 01 	sts	0x0109, r13	; 0x800109 <highscore+0x1>
 210:	e0 92 0a 01 	sts	0x010A, r14	; 0x80010a <highscore+0x2>
 214:	f0 92 0b 01 	sts	0x010B, r15	; 0x80010b <highscore+0x3>
	}
	else
	{
		//low-score
	}
}
 218:	ff 90       	pop	r15
 21a:	ef 90       	pop	r14
 21c:	df 90       	pop	r13
 21e:	cf 90       	pop	r12
 220:	08 95       	ret

00000222 <Set_servomax>:

void Set_servomax()
{
	timeDelay = 2;
 222:	80 e0       	ldi	r24, 0x00	; 0
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	a0 e0       	ldi	r26, 0x00	; 0
 228:	b0 e4       	ldi	r27, 0x40	; 64
 22a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <timeDelay>
 22e:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <timeDelay+0x1>
 232:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <timeDelay+0x2>
 236:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <timeDelay+0x3>
 23a:	08 95       	ret

0000023c <Set_servomin>:
}

void Set_servomin(float angle)
{
 23c:	cf 92       	push	r12
 23e:	df 92       	push	r13
 240:	ef 92       	push	r14
 242:	ff 92       	push	r15
 244:	6b 01       	movw	r12, r22
 246:	7c 01       	movw	r14, r24
	if(angle < 0.3){
 248:	2a e9       	ldi	r18, 0x9A	; 154
 24a:	39 e9       	ldi	r19, 0x99	; 153
 24c:	49 e9       	ldi	r20, 0x99	; 153
 24e:	5e e3       	ldi	r21, 0x3E	; 62
 250:	39 d1       	rcall	.+626    	; 0x4c4 <__cmpsf2>
 252:	88 23       	and	r24, r24
 254:	64 f4       	brge	.+24     	; 0x26e <Set_servomin+0x32>
		timeDelay = 0.3;
 256:	8a e9       	ldi	r24, 0x9A	; 154
 258:	99 e9       	ldi	r25, 0x99	; 153
 25a:	a9 e9       	ldi	r26, 0x99	; 153
 25c:	be e3       	ldi	r27, 0x3E	; 62
 25e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <timeDelay>
 262:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <timeDelay+0x1>
 266:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <timeDelay+0x2>
 26a:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <timeDelay+0x3>
	}
	if(angle >= 0.3 && angle < 0.6){
 26e:	2a e9       	ldi	r18, 0x9A	; 154
 270:	39 e9       	ldi	r19, 0x99	; 153
 272:	49 e9       	ldi	r20, 0x99	; 153
 274:	5e e3       	ldi	r21, 0x3E	; 62
 276:	c7 01       	movw	r24, r14
 278:	b6 01       	movw	r22, r12
 27a:	da d1       	rcall	.+948    	; 0x630 <__gesf2>
 27c:	88 23       	and	r24, r24
 27e:	ac f0       	brlt	.+42     	; 0x2aa <Set_servomin+0x6e>
 280:	2a e9       	ldi	r18, 0x9A	; 154
 282:	39 e9       	ldi	r19, 0x99	; 153
 284:	49 e1       	ldi	r20, 0x19	; 25
 286:	5f e3       	ldi	r21, 0x3F	; 63
 288:	c7 01       	movw	r24, r14
 28a:	b6 01       	movw	r22, r12
 28c:	1b d1       	rcall	.+566    	; 0x4c4 <__cmpsf2>
 28e:	88 23       	and	r24, r24
 290:	64 f4       	brge	.+24     	; 0x2aa <Set_servomin+0x6e>
		timeDelay = 0.8;
 292:	8d ec       	ldi	r24, 0xCD	; 205
 294:	9c ec       	ldi	r25, 0xCC	; 204
 296:	ac e4       	ldi	r26, 0x4C	; 76
 298:	bf e3       	ldi	r27, 0x3F	; 63
 29a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <timeDelay>
 29e:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <timeDelay+0x1>
 2a2:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <timeDelay+0x2>
 2a6:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <timeDelay+0x3>
	}
	if(angle >= 0.6){
 2aa:	2a e9       	ldi	r18, 0x9A	; 154
 2ac:	39 e9       	ldi	r19, 0x99	; 153
 2ae:	49 e1       	ldi	r20, 0x19	; 25
 2b0:	5f e3       	ldi	r21, 0x3F	; 63
 2b2:	c7 01       	movw	r24, r14
 2b4:	b6 01       	movw	r22, r12
 2b6:	bc d1       	rcall	.+888    	; 0x630 <__gesf2>
 2b8:	88 23       	and	r24, r24
 2ba:	64 f0       	brlt	.+24     	; 0x2d4 <Set_servomin+0x98>
		timeDelay = 1.5;
 2bc:	80 e0       	ldi	r24, 0x00	; 0
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	a0 ec       	ldi	r26, 0xC0	; 192
 2c2:	bf e3       	ldi	r27, 0x3F	; 63
 2c4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <timeDelay>
 2c8:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <timeDelay+0x1>
 2cc:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <timeDelay+0x2>
 2d0:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <timeDelay+0x3>
	}
}
 2d4:	ff 90       	pop	r15
 2d6:	ef 90       	pop	r14
 2d8:	df 90       	pop	r13
 2da:	cf 90       	pop	r12
 2dc:	08 95       	ret

000002de <main>:

int main(void)
{
	float score = 0;
	int address = 0;
	int random_value = random_create();
 2de:	78 df       	rcall	.-272    	; 0x1d0 <random_create>
 2e0:	ec 01       	movw	r28, r24
	
	// Setup for LEDs
	DDRB = 0b00000111;
 2e2:	87 e0       	ldi	r24, 0x07	; 7
 2e4:	84 b9       	out	0x04, r24	; 4
	PORTB = 0b00000000;
 2e6:	15 b8       	out	0x05, r1	; 5
	
	// Pull-up for a button
	DDRD = 0b00000000;
 2e8:	1a b8       	out	0x0a, r1	; 10
	PORTD = 0b00000100;
 2ea:	84 e0       	ldi	r24, 0x04	; 4
 2ec:	8b b9       	out	0x0b, r24	; 11
	
	//Servo
	DDRC = 0b11111111;
 2ee:	8f ef       	ldi	r24, 0xFF	; 255
 2f0:	87 b9       	out	0x07, r24	; 7
	
	//Timer 0
	TCCR0B |= (1<<CS00);
 2f2:	85 b5       	in	r24, 0x25	; 37
 2f4:	81 60       	ori	r24, 0x01	; 1
 2f6:	85 bd       	out	0x25, r24	; 37
	TIMSK0 |= (1<<TOIE0);
 2f8:	ee e6       	ldi	r30, 0x6E	; 110
 2fa:	f0 e0       	ldi	r31, 0x00	; 0
 2fc:	80 81       	ld	r24, Z
 2fe:	81 60       	ori	r24, 0x01	; 1
 300:	80 83       	st	Z, r24
	
	//Timer 2
	TCCR2B |= (1<<CS22)|(1<<CS21); //Overflow for timer 2 set at 256 pre-scale
 302:	e1 eb       	ldi	r30, 0xB1	; 177
 304:	f0 e0       	ldi	r31, 0x00	; 0
 306:	80 81       	ld	r24, Z
 308:	86 60       	ori	r24, 0x06	; 6
 30a:	80 83       	st	Z, r24
	TIMSK2 |= (1<<TOIE2); /* Timer/Counter2 Overflow interrupt enabled */
 30c:	e0 e7       	ldi	r30, 0x70	; 112
 30e:	f0 e0       	ldi	r31, 0x00	; 0
 310:	80 81       	ld	r24, Z
 312:	81 60       	ori	r24, 0x01	; 1
 314:	80 83       	st	Z, r24
	
	sei(); /* Global Interrupt Enable */
 316:	78 94       	sei
}

int main(void)
{
	float score = 0;
	int address = 0;
 318:	00 e0       	ldi	r16, 0x00	; 0
	sei(); /* Global Interrupt Enable */
	
	while(1)
	{

		set_timer();
 31a:	10 e0       	ldi	r17, 0x00	; 0
 31c:	52 df       	rcall	.-348    	; 0x1c2 <set_timer>
		for(int i=0; i<=random_value; i++)
 31e:	80 e0       	ldi	r24, 0x00	; 0
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	07 c0       	rjmp	.+14     	; 0x332 <main+0x54>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 324:	ef e9       	ldi	r30, 0x9F	; 159
 326:	ff e0       	ldi	r31, 0x0F	; 15
 328:	31 97       	sbiw	r30, 0x01	; 1
 32a:	f1 f7       	brne	.-4      	; 0x328 <main+0x4a>
 32c:	00 c0       	rjmp	.+0      	; 0x32e <main+0x50>
 32e:	00 00       	nop
 330:	01 96       	adiw	r24, 0x01	; 1
 332:	c8 17       	cp	r28, r24
 334:	d9 07       	cpc	r29, r25
 336:	b4 f7       	brge	.-20     	; 0x324 <main+0x46>
		{
			_delay_ms(1);
		}
		
		PORTB |= (1<<0);
 338:	85 b1       	in	r24, 0x05	; 5
 33a:	81 60       	ori	r24, 0x01	; 1
		set_timer();
 33c:	85 b9       	out	0x05, r24	; 5
 33e:	41 df       	rcall	.-382    	; 0x1c2 <set_timer>
		while (PIND != 0)
 340:	89 b1       	in	r24, 0x09	; 9
 342:	81 11       	cpse	r24, r1
 344:	fd cf       	rjmp	.-6      	; 0x340 <main+0x62>
		{
		}
		PORTB |= (1<<1);
 346:	85 b1       	in	r24, 0x05	; 5
 348:	82 60       	ori	r24, 0x02	; 2
 34a:	85 b9       	out	0x05, r24	; 5
		score = (overflow_t2*0.004)+TCNT2*0.000016;
 34c:	60 91 0c 01 	lds	r22, 0x010C	; 0x80010c <__data_end>
 350:	70 91 0d 01 	lds	r23, 0x010D	; 0x80010d <__data_end+0x1>
 354:	80 e0       	ldi	r24, 0x00	; 0
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	b9 d0       	rcall	.+370    	; 0x4cc <__floatunsisf>
 35a:	2f e6       	ldi	r18, 0x6F	; 111
 35c:	32 e1       	ldi	r19, 0x12	; 18
 35e:	43 e8       	ldi	r20, 0x83	; 131
 360:	5b e3       	ldi	r21, 0x3B	; 59
 362:	6a d1       	rcall	.+724    	; 0x638 <__mulsf3>
 364:	6b 01       	movw	r12, r22
 366:	7c 01       	movw	r14, r24
 368:	60 91 b2 00 	lds	r22, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
 36c:	70 e0       	ldi	r23, 0x00	; 0
 36e:	80 e0       	ldi	r24, 0x00	; 0
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	ae d0       	rcall	.+348    	; 0x4d0 <__floatsisf>
 374:	2d eb       	ldi	r18, 0xBD	; 189
 376:	37 e3       	ldi	r19, 0x37	; 55
 378:	46 e8       	ldi	r20, 0x86	; 134
 37a:	57 e3       	ldi	r21, 0x37	; 55
 37c:	5d d1       	rcall	.+698    	; 0x638 <__mulsf3>
 37e:	9b 01       	movw	r18, r22
 380:	ac 01       	movw	r20, r24
 382:	c7 01       	movw	r24, r14
 384:	b6 01       	movw	r22, r12
 386:	3a d0       	rcall	.+116    	; 0x3fc <__addsf3>
 388:	6b 01       	movw	r12, r22
 38a:	7c 01       	movw	r14, r24
 38c:	ff ef       	ldi	r31, 0xFF	; 255
 38e:	27 ea       	ldi	r18, 0xA7	; 167
 390:	81 e6       	ldi	r24, 0x61	; 97
 392:	f1 50       	subi	r31, 0x01	; 1
 394:	20 40       	sbci	r18, 0x00	; 0
 396:	80 40       	sbci	r24, 0x00	; 0
 398:	e1 f7       	brne	.-8      	; 0x392 <main+0xb4>
		_delay_ms(2000);
		set_timer();
 39a:	00 c0       	rjmp	.+0      	; 0x39c <main+0xbe>
 39c:	00 00       	nop
		checkIfHighscore(score);
 39e:	11 df       	rcall	.-478    	; 0x1c2 <set_timer>
 3a0:	c7 01       	movw	r24, r14
 3a2:	b6 01       	movw	r22, r12
		eeprom_w(address, score);
 3a4:	1e df       	rcall	.-452    	; 0x1e2 <checkIfHighscore>
 3a6:	b7 01       	movw	r22, r14
 3a8:	a6 01       	movw	r20, r12
 3aa:	c8 01       	movw	r24, r16
 3ac:	18 df       	rcall	.-464    	; 0x1de <eeprom_w>
		address++;
 3ae:	0f 5f       	subi	r16, 0xFF	; 255
 3b0:	1f 4f       	sbci	r17, 0xFF	; 255
		PORTB = 0b00000000;
 3b2:	15 b8       	out	0x05, r1	; 5
		set_timer();
 3b4:	06 df       	rcall	.-500    	; 0x1c2 <set_timer>
 3b6:	16 bc       	out	0x26, r1	; 38
		TCNT0 = 0;
 3b8:	34 df       	rcall	.-408    	; 0x222 <Set_servomax>
		Set_servomax();
 3ba:	9f ef       	ldi	r25, 0xFF	; 255
 3bc:	e3 ed       	ldi	r30, 0xD3	; 211
 3be:	f0 e3       	ldi	r31, 0x30	; 48
 3c0:	91 50       	subi	r25, 0x01	; 1
 3c2:	e0 40       	sbci	r30, 0x00	; 0
 3c4:	f0 40       	sbci	r31, 0x00	; 0
 3c6:	e1 f7       	brne	.-8      	; 0x3c0 <main+0xe2>
 3c8:	00 c0       	rjmp	.+0      	; 0x3ca <main+0xec>
 3ca:	00 00       	nop
		_delay_ms(1000);
		Set_servomin(score);
 3cc:	c7 01       	movw	r24, r14
 3ce:	b6 01       	movw	r22, r12
 3d0:	35 df       	rcall	.-406    	; 0x23c <Set_servomin>
 3d2:	2f ef       	ldi	r18, 0xFF	; 255
 3d4:	83 e2       	ldi	r24, 0x23	; 35
 3d6:	94 ef       	ldi	r25, 0xF4	; 244
 3d8:	21 50       	subi	r18, 0x01	; 1
 3da:	80 40       	sbci	r24, 0x00	; 0
 3dc:	90 40       	sbci	r25, 0x00	; 0
 3de:	e1 f7       	brne	.-8      	; 0x3d8 <main+0xfa>
 3e0:	00 c0       	rjmp	.+0      	; 0x3e2 <main+0x104>
 3e2:	00 00       	nop
 3e4:	1e df       	rcall	.-452    	; 0x222 <Set_servomax>
		_delay_ms(5000);
		Set_servomax();
 3e6:	ef ef       	ldi	r30, 0xFF	; 255
 3e8:	fb e7       	ldi	r31, 0x7B	; 123
 3ea:	22 e9       	ldi	r18, 0x92	; 146
 3ec:	e1 50       	subi	r30, 0x01	; 1
 3ee:	f0 40       	sbci	r31, 0x00	; 0
 3f0:	20 40       	sbci	r18, 0x00	; 0
 3f2:	e1 f7       	brne	.-8      	; 0x3ec <main+0x10e>
 3f4:	00 c0       	rjmp	.+0      	; 0x3f6 <main+0x118>
 3f6:	00 00       	nop
 3f8:	91 cf       	rjmp	.-222    	; 0x31c <main+0x3e>

000003fa <__subsf3>:
 3fa:	50 58       	subi	r21, 0x80	; 128

000003fc <__addsf3>:
 3fc:	bb 27       	eor	r27, r27
 3fe:	aa 27       	eor	r26, r26
 400:	0e d0       	rcall	.+28     	; 0x41e <__addsf3x>
 402:	dc c0       	rjmp	.+440    	; 0x5bc <__fp_round>
 404:	cd d0       	rcall	.+410    	; 0x5a0 <__fp_pscA>
 406:	30 f0       	brcs	.+12     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 408:	d2 d0       	rcall	.+420    	; 0x5ae <__fp_pscB>
 40a:	20 f0       	brcs	.+8      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 40c:	31 f4       	brne	.+12     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 40e:	9f 3f       	cpi	r25, 0xFF	; 255
 410:	11 f4       	brne	.+4      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 412:	1e f4       	brtc	.+6      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 414:	c2 c0       	rjmp	.+388    	; 0x59a <__fp_nan>
 416:	0e f4       	brtc	.+2      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 418:	e0 95       	com	r30
 41a:	e7 fb       	bst	r30, 7
 41c:	b8 c0       	rjmp	.+368    	; 0x58e <__fp_inf>

0000041e <__addsf3x>:
 41e:	e9 2f       	mov	r30, r25
 420:	de d0       	rcall	.+444    	; 0x5de <__fp_split3>
 422:	80 f3       	brcs	.-32     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 424:	ba 17       	cp	r27, r26
 426:	62 07       	cpc	r22, r18
 428:	73 07       	cpc	r23, r19
 42a:	84 07       	cpc	r24, r20
 42c:	95 07       	cpc	r25, r21
 42e:	18 f0       	brcs	.+6      	; 0x436 <__addsf3x+0x18>
 430:	71 f4       	brne	.+28     	; 0x44e <__addsf3x+0x30>
 432:	9e f5       	brtc	.+102    	; 0x49a <__addsf3x+0x7c>
 434:	f6 c0       	rjmp	.+492    	; 0x622 <__fp_zero>
 436:	0e f4       	brtc	.+2      	; 0x43a <__addsf3x+0x1c>
 438:	e0 95       	com	r30
 43a:	0b 2e       	mov	r0, r27
 43c:	ba 2f       	mov	r27, r26
 43e:	a0 2d       	mov	r26, r0
 440:	0b 01       	movw	r0, r22
 442:	b9 01       	movw	r22, r18
 444:	90 01       	movw	r18, r0
 446:	0c 01       	movw	r0, r24
 448:	ca 01       	movw	r24, r20
 44a:	a0 01       	movw	r20, r0
 44c:	11 24       	eor	r1, r1
 44e:	ff 27       	eor	r31, r31
 450:	59 1b       	sub	r21, r25
 452:	99 f0       	breq	.+38     	; 0x47a <__addsf3x+0x5c>
 454:	59 3f       	cpi	r21, 0xF9	; 249
 456:	50 f4       	brcc	.+20     	; 0x46c <__addsf3x+0x4e>
 458:	50 3e       	cpi	r21, 0xE0	; 224
 45a:	68 f1       	brcs	.+90     	; 0x4b6 <__addsf3x+0x98>
 45c:	1a 16       	cp	r1, r26
 45e:	f0 40       	sbci	r31, 0x00	; 0
 460:	a2 2f       	mov	r26, r18
 462:	23 2f       	mov	r18, r19
 464:	34 2f       	mov	r19, r20
 466:	44 27       	eor	r20, r20
 468:	58 5f       	subi	r21, 0xF8	; 248
 46a:	f3 cf       	rjmp	.-26     	; 0x452 <__addsf3x+0x34>
 46c:	46 95       	lsr	r20
 46e:	37 95       	ror	r19
 470:	27 95       	ror	r18
 472:	a7 95       	ror	r26
 474:	f0 40       	sbci	r31, 0x00	; 0
 476:	53 95       	inc	r21
 478:	c9 f7       	brne	.-14     	; 0x46c <__addsf3x+0x4e>
 47a:	7e f4       	brtc	.+30     	; 0x49a <__addsf3x+0x7c>
 47c:	1f 16       	cp	r1, r31
 47e:	ba 0b       	sbc	r27, r26
 480:	62 0b       	sbc	r22, r18
 482:	73 0b       	sbc	r23, r19
 484:	84 0b       	sbc	r24, r20
 486:	ba f0       	brmi	.+46     	; 0x4b6 <__addsf3x+0x98>
 488:	91 50       	subi	r25, 0x01	; 1
 48a:	a1 f0       	breq	.+40     	; 0x4b4 <__addsf3x+0x96>
 48c:	ff 0f       	add	r31, r31
 48e:	bb 1f       	adc	r27, r27
 490:	66 1f       	adc	r22, r22
 492:	77 1f       	adc	r23, r23
 494:	88 1f       	adc	r24, r24
 496:	c2 f7       	brpl	.-16     	; 0x488 <__addsf3x+0x6a>
 498:	0e c0       	rjmp	.+28     	; 0x4b6 <__addsf3x+0x98>
 49a:	ba 0f       	add	r27, r26
 49c:	62 1f       	adc	r22, r18
 49e:	73 1f       	adc	r23, r19
 4a0:	84 1f       	adc	r24, r20
 4a2:	48 f4       	brcc	.+18     	; 0x4b6 <__addsf3x+0x98>
 4a4:	87 95       	ror	r24
 4a6:	77 95       	ror	r23
 4a8:	67 95       	ror	r22
 4aa:	b7 95       	ror	r27
 4ac:	f7 95       	ror	r31
 4ae:	9e 3f       	cpi	r25, 0xFE	; 254
 4b0:	08 f0       	brcs	.+2      	; 0x4b4 <__addsf3x+0x96>
 4b2:	b3 cf       	rjmp	.-154    	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 4b4:	93 95       	inc	r25
 4b6:	88 0f       	add	r24, r24
 4b8:	08 f0       	brcs	.+2      	; 0x4bc <__addsf3x+0x9e>
 4ba:	99 27       	eor	r25, r25
 4bc:	ee 0f       	add	r30, r30
 4be:	97 95       	ror	r25
 4c0:	87 95       	ror	r24
 4c2:	08 95       	ret

000004c4 <__cmpsf2>:
 4c4:	40 d0       	rcall	.+128    	; 0x546 <__fp_cmp>
 4c6:	08 f4       	brcc	.+2      	; 0x4ca <__cmpsf2+0x6>
 4c8:	81 e0       	ldi	r24, 0x01	; 1
 4ca:	08 95       	ret

000004cc <__floatunsisf>:
 4cc:	e8 94       	clt
 4ce:	09 c0       	rjmp	.+18     	; 0x4e2 <__floatsisf+0x12>

000004d0 <__floatsisf>:
 4d0:	97 fb       	bst	r25, 7
 4d2:	3e f4       	brtc	.+14     	; 0x4e2 <__floatsisf+0x12>
 4d4:	90 95       	com	r25
 4d6:	80 95       	com	r24
 4d8:	70 95       	com	r23
 4da:	61 95       	neg	r22
 4dc:	7f 4f       	sbci	r23, 0xFF	; 255
 4de:	8f 4f       	sbci	r24, 0xFF	; 255
 4e0:	9f 4f       	sbci	r25, 0xFF	; 255
 4e2:	99 23       	and	r25, r25
 4e4:	a9 f0       	breq	.+42     	; 0x510 <__floatsisf+0x40>
 4e6:	f9 2f       	mov	r31, r25
 4e8:	96 e9       	ldi	r25, 0x96	; 150
 4ea:	bb 27       	eor	r27, r27
 4ec:	93 95       	inc	r25
 4ee:	f6 95       	lsr	r31
 4f0:	87 95       	ror	r24
 4f2:	77 95       	ror	r23
 4f4:	67 95       	ror	r22
 4f6:	b7 95       	ror	r27
 4f8:	f1 11       	cpse	r31, r1
 4fa:	f8 cf       	rjmp	.-16     	; 0x4ec <__floatsisf+0x1c>
 4fc:	fa f4       	brpl	.+62     	; 0x53c <__floatsisf+0x6c>
 4fe:	bb 0f       	add	r27, r27
 500:	11 f4       	brne	.+4      	; 0x506 <__floatsisf+0x36>
 502:	60 ff       	sbrs	r22, 0
 504:	1b c0       	rjmp	.+54     	; 0x53c <__floatsisf+0x6c>
 506:	6f 5f       	subi	r22, 0xFF	; 255
 508:	7f 4f       	sbci	r23, 0xFF	; 255
 50a:	8f 4f       	sbci	r24, 0xFF	; 255
 50c:	9f 4f       	sbci	r25, 0xFF	; 255
 50e:	16 c0       	rjmp	.+44     	; 0x53c <__floatsisf+0x6c>
 510:	88 23       	and	r24, r24
 512:	11 f0       	breq	.+4      	; 0x518 <__floatsisf+0x48>
 514:	96 e9       	ldi	r25, 0x96	; 150
 516:	11 c0       	rjmp	.+34     	; 0x53a <__floatsisf+0x6a>
 518:	77 23       	and	r23, r23
 51a:	21 f0       	breq	.+8      	; 0x524 <__floatsisf+0x54>
 51c:	9e e8       	ldi	r25, 0x8E	; 142
 51e:	87 2f       	mov	r24, r23
 520:	76 2f       	mov	r23, r22
 522:	05 c0       	rjmp	.+10     	; 0x52e <__floatsisf+0x5e>
 524:	66 23       	and	r22, r22
 526:	71 f0       	breq	.+28     	; 0x544 <__floatsisf+0x74>
 528:	96 e8       	ldi	r25, 0x86	; 134
 52a:	86 2f       	mov	r24, r22
 52c:	70 e0       	ldi	r23, 0x00	; 0
 52e:	60 e0       	ldi	r22, 0x00	; 0
 530:	2a f0       	brmi	.+10     	; 0x53c <__floatsisf+0x6c>
 532:	9a 95       	dec	r25
 534:	66 0f       	add	r22, r22
 536:	77 1f       	adc	r23, r23
 538:	88 1f       	adc	r24, r24
 53a:	da f7       	brpl	.-10     	; 0x532 <__floatsisf+0x62>
 53c:	88 0f       	add	r24, r24
 53e:	96 95       	lsr	r25
 540:	87 95       	ror	r24
 542:	97 f9       	bld	r25, 7
 544:	08 95       	ret

00000546 <__fp_cmp>:
 546:	99 0f       	add	r25, r25
 548:	00 08       	sbc	r0, r0
 54a:	55 0f       	add	r21, r21
 54c:	aa 0b       	sbc	r26, r26
 54e:	e0 e8       	ldi	r30, 0x80	; 128
 550:	fe ef       	ldi	r31, 0xFE	; 254
 552:	16 16       	cp	r1, r22
 554:	17 06       	cpc	r1, r23
 556:	e8 07       	cpc	r30, r24
 558:	f9 07       	cpc	r31, r25
 55a:	c0 f0       	brcs	.+48     	; 0x58c <__fp_cmp+0x46>
 55c:	12 16       	cp	r1, r18
 55e:	13 06       	cpc	r1, r19
 560:	e4 07       	cpc	r30, r20
 562:	f5 07       	cpc	r31, r21
 564:	98 f0       	brcs	.+38     	; 0x58c <__fp_cmp+0x46>
 566:	62 1b       	sub	r22, r18
 568:	73 0b       	sbc	r23, r19
 56a:	84 0b       	sbc	r24, r20
 56c:	95 0b       	sbc	r25, r21
 56e:	39 f4       	brne	.+14     	; 0x57e <__fp_cmp+0x38>
 570:	0a 26       	eor	r0, r26
 572:	61 f0       	breq	.+24     	; 0x58c <__fp_cmp+0x46>
 574:	23 2b       	or	r18, r19
 576:	24 2b       	or	r18, r20
 578:	25 2b       	or	r18, r21
 57a:	21 f4       	brne	.+8      	; 0x584 <__fp_cmp+0x3e>
 57c:	08 95       	ret
 57e:	0a 26       	eor	r0, r26
 580:	09 f4       	brne	.+2      	; 0x584 <__fp_cmp+0x3e>
 582:	a1 40       	sbci	r26, 0x01	; 1
 584:	a6 95       	lsr	r26
 586:	8f ef       	ldi	r24, 0xFF	; 255
 588:	81 1d       	adc	r24, r1
 58a:	81 1d       	adc	r24, r1
 58c:	08 95       	ret

0000058e <__fp_inf>:
 58e:	97 f9       	bld	r25, 7
 590:	9f 67       	ori	r25, 0x7F	; 127
 592:	80 e8       	ldi	r24, 0x80	; 128
 594:	70 e0       	ldi	r23, 0x00	; 0
 596:	60 e0       	ldi	r22, 0x00	; 0
 598:	08 95       	ret

0000059a <__fp_nan>:
 59a:	9f ef       	ldi	r25, 0xFF	; 255
 59c:	80 ec       	ldi	r24, 0xC0	; 192
 59e:	08 95       	ret

000005a0 <__fp_pscA>:
 5a0:	00 24       	eor	r0, r0
 5a2:	0a 94       	dec	r0
 5a4:	16 16       	cp	r1, r22
 5a6:	17 06       	cpc	r1, r23
 5a8:	18 06       	cpc	r1, r24
 5aa:	09 06       	cpc	r0, r25
 5ac:	08 95       	ret

000005ae <__fp_pscB>:
 5ae:	00 24       	eor	r0, r0
 5b0:	0a 94       	dec	r0
 5b2:	12 16       	cp	r1, r18
 5b4:	13 06       	cpc	r1, r19
 5b6:	14 06       	cpc	r1, r20
 5b8:	05 06       	cpc	r0, r21
 5ba:	08 95       	ret

000005bc <__fp_round>:
 5bc:	09 2e       	mov	r0, r25
 5be:	03 94       	inc	r0
 5c0:	00 0c       	add	r0, r0
 5c2:	11 f4       	brne	.+4      	; 0x5c8 <__fp_round+0xc>
 5c4:	88 23       	and	r24, r24
 5c6:	52 f0       	brmi	.+20     	; 0x5dc <__fp_round+0x20>
 5c8:	bb 0f       	add	r27, r27
 5ca:	40 f4       	brcc	.+16     	; 0x5dc <__fp_round+0x20>
 5cc:	bf 2b       	or	r27, r31
 5ce:	11 f4       	brne	.+4      	; 0x5d4 <__fp_round+0x18>
 5d0:	60 ff       	sbrs	r22, 0
 5d2:	04 c0       	rjmp	.+8      	; 0x5dc <__fp_round+0x20>
 5d4:	6f 5f       	subi	r22, 0xFF	; 255
 5d6:	7f 4f       	sbci	r23, 0xFF	; 255
 5d8:	8f 4f       	sbci	r24, 0xFF	; 255
 5da:	9f 4f       	sbci	r25, 0xFF	; 255
 5dc:	08 95       	ret

000005de <__fp_split3>:
 5de:	57 fd       	sbrc	r21, 7
 5e0:	90 58       	subi	r25, 0x80	; 128
 5e2:	44 0f       	add	r20, r20
 5e4:	55 1f       	adc	r21, r21
 5e6:	59 f0       	breq	.+22     	; 0x5fe <__fp_splitA+0x10>
 5e8:	5f 3f       	cpi	r21, 0xFF	; 255
 5ea:	71 f0       	breq	.+28     	; 0x608 <__fp_splitA+0x1a>
 5ec:	47 95       	ror	r20

000005ee <__fp_splitA>:
 5ee:	88 0f       	add	r24, r24
 5f0:	97 fb       	bst	r25, 7
 5f2:	99 1f       	adc	r25, r25
 5f4:	61 f0       	breq	.+24     	; 0x60e <__fp_splitA+0x20>
 5f6:	9f 3f       	cpi	r25, 0xFF	; 255
 5f8:	79 f0       	breq	.+30     	; 0x618 <__fp_splitA+0x2a>
 5fa:	87 95       	ror	r24
 5fc:	08 95       	ret
 5fe:	12 16       	cp	r1, r18
 600:	13 06       	cpc	r1, r19
 602:	14 06       	cpc	r1, r20
 604:	55 1f       	adc	r21, r21
 606:	f2 cf       	rjmp	.-28     	; 0x5ec <__fp_split3+0xe>
 608:	46 95       	lsr	r20
 60a:	f1 df       	rcall	.-30     	; 0x5ee <__fp_splitA>
 60c:	08 c0       	rjmp	.+16     	; 0x61e <__fp_splitA+0x30>
 60e:	16 16       	cp	r1, r22
 610:	17 06       	cpc	r1, r23
 612:	18 06       	cpc	r1, r24
 614:	99 1f       	adc	r25, r25
 616:	f1 cf       	rjmp	.-30     	; 0x5fa <__fp_splitA+0xc>
 618:	86 95       	lsr	r24
 61a:	71 05       	cpc	r23, r1
 61c:	61 05       	cpc	r22, r1
 61e:	08 94       	sec
 620:	08 95       	ret

00000622 <__fp_zero>:
 622:	e8 94       	clt

00000624 <__fp_szero>:
 624:	bb 27       	eor	r27, r27
 626:	66 27       	eor	r22, r22
 628:	77 27       	eor	r23, r23
 62a:	cb 01       	movw	r24, r22
 62c:	97 f9       	bld	r25, 7
 62e:	08 95       	ret

00000630 <__gesf2>:
 630:	8a df       	rcall	.-236    	; 0x546 <__fp_cmp>
 632:	08 f4       	brcc	.+2      	; 0x636 <__gesf2+0x6>
 634:	8f ef       	ldi	r24, 0xFF	; 255
 636:	08 95       	ret

00000638 <__mulsf3>:
 638:	0b d0       	rcall	.+22     	; 0x650 <__mulsf3x>
 63a:	c0 cf       	rjmp	.-128    	; 0x5bc <__fp_round>
 63c:	b1 df       	rcall	.-158    	; 0x5a0 <__fp_pscA>
 63e:	28 f0       	brcs	.+10     	; 0x64a <__mulsf3+0x12>
 640:	b6 df       	rcall	.-148    	; 0x5ae <__fp_pscB>
 642:	18 f0       	brcs	.+6      	; 0x64a <__mulsf3+0x12>
 644:	95 23       	and	r25, r21
 646:	09 f0       	breq	.+2      	; 0x64a <__mulsf3+0x12>
 648:	a2 cf       	rjmp	.-188    	; 0x58e <__fp_inf>
 64a:	a7 cf       	rjmp	.-178    	; 0x59a <__fp_nan>
 64c:	11 24       	eor	r1, r1
 64e:	ea cf       	rjmp	.-44     	; 0x624 <__fp_szero>

00000650 <__mulsf3x>:
 650:	c6 df       	rcall	.-116    	; 0x5de <__fp_split3>
 652:	a0 f3       	brcs	.-24     	; 0x63c <__mulsf3+0x4>

00000654 <__mulsf3_pse>:
 654:	95 9f       	mul	r25, r21
 656:	d1 f3       	breq	.-12     	; 0x64c <__mulsf3+0x14>
 658:	95 0f       	add	r25, r21
 65a:	50 e0       	ldi	r21, 0x00	; 0
 65c:	55 1f       	adc	r21, r21
 65e:	62 9f       	mul	r22, r18
 660:	f0 01       	movw	r30, r0
 662:	72 9f       	mul	r23, r18
 664:	bb 27       	eor	r27, r27
 666:	f0 0d       	add	r31, r0
 668:	b1 1d       	adc	r27, r1
 66a:	63 9f       	mul	r22, r19
 66c:	aa 27       	eor	r26, r26
 66e:	f0 0d       	add	r31, r0
 670:	b1 1d       	adc	r27, r1
 672:	aa 1f       	adc	r26, r26
 674:	64 9f       	mul	r22, r20
 676:	66 27       	eor	r22, r22
 678:	b0 0d       	add	r27, r0
 67a:	a1 1d       	adc	r26, r1
 67c:	66 1f       	adc	r22, r22
 67e:	82 9f       	mul	r24, r18
 680:	22 27       	eor	r18, r18
 682:	b0 0d       	add	r27, r0
 684:	a1 1d       	adc	r26, r1
 686:	62 1f       	adc	r22, r18
 688:	73 9f       	mul	r23, r19
 68a:	b0 0d       	add	r27, r0
 68c:	a1 1d       	adc	r26, r1
 68e:	62 1f       	adc	r22, r18
 690:	83 9f       	mul	r24, r19
 692:	a0 0d       	add	r26, r0
 694:	61 1d       	adc	r22, r1
 696:	22 1f       	adc	r18, r18
 698:	74 9f       	mul	r23, r20
 69a:	33 27       	eor	r19, r19
 69c:	a0 0d       	add	r26, r0
 69e:	61 1d       	adc	r22, r1
 6a0:	23 1f       	adc	r18, r19
 6a2:	84 9f       	mul	r24, r20
 6a4:	60 0d       	add	r22, r0
 6a6:	21 1d       	adc	r18, r1
 6a8:	82 2f       	mov	r24, r18
 6aa:	76 2f       	mov	r23, r22
 6ac:	6a 2f       	mov	r22, r26
 6ae:	11 24       	eor	r1, r1
 6b0:	9f 57       	subi	r25, 0x7F	; 127
 6b2:	50 40       	sbci	r21, 0x00	; 0
 6b4:	8a f0       	brmi	.+34     	; 0x6d8 <__mulsf3_pse+0x84>
 6b6:	e1 f0       	breq	.+56     	; 0x6f0 <__mulsf3_pse+0x9c>
 6b8:	88 23       	and	r24, r24
 6ba:	4a f0       	brmi	.+18     	; 0x6ce <__mulsf3_pse+0x7a>
 6bc:	ee 0f       	add	r30, r30
 6be:	ff 1f       	adc	r31, r31
 6c0:	bb 1f       	adc	r27, r27
 6c2:	66 1f       	adc	r22, r22
 6c4:	77 1f       	adc	r23, r23
 6c6:	88 1f       	adc	r24, r24
 6c8:	91 50       	subi	r25, 0x01	; 1
 6ca:	50 40       	sbci	r21, 0x00	; 0
 6cc:	a9 f7       	brne	.-22     	; 0x6b8 <__mulsf3_pse+0x64>
 6ce:	9e 3f       	cpi	r25, 0xFE	; 254
 6d0:	51 05       	cpc	r21, r1
 6d2:	70 f0       	brcs	.+28     	; 0x6f0 <__mulsf3_pse+0x9c>
 6d4:	5c cf       	rjmp	.-328    	; 0x58e <__fp_inf>
 6d6:	a6 cf       	rjmp	.-180    	; 0x624 <__fp_szero>
 6d8:	5f 3f       	cpi	r21, 0xFF	; 255
 6da:	ec f3       	brlt	.-6      	; 0x6d6 <__mulsf3_pse+0x82>
 6dc:	98 3e       	cpi	r25, 0xE8	; 232
 6de:	dc f3       	brlt	.-10     	; 0x6d6 <__mulsf3_pse+0x82>
 6e0:	86 95       	lsr	r24
 6e2:	77 95       	ror	r23
 6e4:	67 95       	ror	r22
 6e6:	b7 95       	ror	r27
 6e8:	f7 95       	ror	r31
 6ea:	e7 95       	ror	r30
 6ec:	9f 5f       	subi	r25, 0xFF	; 255
 6ee:	c1 f7       	brne	.-16     	; 0x6e0 <__mulsf3_pse+0x8c>
 6f0:	fe 2b       	or	r31, r30
 6f2:	88 0f       	add	r24, r24
 6f4:	91 1d       	adc	r25, r1
 6f6:	96 95       	lsr	r25
 6f8:	87 95       	ror	r24
 6fa:	97 f9       	bld	r25, 7
 6fc:	08 95       	ret

000006fe <__divmodhi4>:
 6fe:	97 fb       	bst	r25, 7
 700:	07 2e       	mov	r0, r23
 702:	16 f4       	brtc	.+4      	; 0x708 <__divmodhi4+0xa>
 704:	00 94       	com	r0
 706:	06 d0       	rcall	.+12     	; 0x714 <__divmodhi4_neg1>
 708:	77 fd       	sbrc	r23, 7
 70a:	08 d0       	rcall	.+16     	; 0x71c <__divmodhi4_neg2>
 70c:	0b d0       	rcall	.+22     	; 0x724 <__udivmodhi4>
 70e:	07 fc       	sbrc	r0, 7
 710:	05 d0       	rcall	.+10     	; 0x71c <__divmodhi4_neg2>
 712:	3e f4       	brtc	.+14     	; 0x722 <__divmodhi4_exit>

00000714 <__divmodhi4_neg1>:
 714:	90 95       	com	r25
 716:	81 95       	neg	r24
 718:	9f 4f       	sbci	r25, 0xFF	; 255
 71a:	08 95       	ret

0000071c <__divmodhi4_neg2>:
 71c:	70 95       	com	r23
 71e:	61 95       	neg	r22
 720:	7f 4f       	sbci	r23, 0xFF	; 255

00000722 <__divmodhi4_exit>:
 722:	08 95       	ret

00000724 <__udivmodhi4>:
 724:	aa 1b       	sub	r26, r26
 726:	bb 1b       	sub	r27, r27
 728:	51 e1       	ldi	r21, 0x11	; 17
 72a:	07 c0       	rjmp	.+14     	; 0x73a <__udivmodhi4_ep>

0000072c <__udivmodhi4_loop>:
 72c:	aa 1f       	adc	r26, r26
 72e:	bb 1f       	adc	r27, r27
 730:	a6 17       	cp	r26, r22
 732:	b7 07       	cpc	r27, r23
 734:	10 f0       	brcs	.+4      	; 0x73a <__udivmodhi4_ep>
 736:	a6 1b       	sub	r26, r22
 738:	b7 0b       	sbc	r27, r23

0000073a <__udivmodhi4_ep>:
 73a:	88 1f       	adc	r24, r24
 73c:	99 1f       	adc	r25, r25
 73e:	5a 95       	dec	r21
 740:	a9 f7       	brne	.-22     	; 0x72c <__udivmodhi4_loop>
 742:	80 95       	com	r24
 744:	90 95       	com	r25
 746:	bc 01       	movw	r22, r24
 748:	cd 01       	movw	r24, r26
 74a:	08 95       	ret

0000074c <do_rand>:
 74c:	8f 92       	push	r8
 74e:	9f 92       	push	r9
 750:	af 92       	push	r10
 752:	bf 92       	push	r11
 754:	cf 92       	push	r12
 756:	df 92       	push	r13
 758:	ef 92       	push	r14
 75a:	ff 92       	push	r15
 75c:	cf 93       	push	r28
 75e:	df 93       	push	r29
 760:	ec 01       	movw	r28, r24
 762:	68 81       	ld	r22, Y
 764:	79 81       	ldd	r23, Y+1	; 0x01
 766:	8a 81       	ldd	r24, Y+2	; 0x02
 768:	9b 81       	ldd	r25, Y+3	; 0x03
 76a:	61 15       	cp	r22, r1
 76c:	71 05       	cpc	r23, r1
 76e:	81 05       	cpc	r24, r1
 770:	91 05       	cpc	r25, r1
 772:	21 f4       	brne	.+8      	; 0x77c <do_rand+0x30>
 774:	64 e2       	ldi	r22, 0x24	; 36
 776:	79 ed       	ldi	r23, 0xD9	; 217
 778:	8b e5       	ldi	r24, 0x5B	; 91
 77a:	97 e0       	ldi	r25, 0x07	; 7
 77c:	2d e1       	ldi	r18, 0x1D	; 29
 77e:	33 ef       	ldi	r19, 0xF3	; 243
 780:	41 e0       	ldi	r20, 0x01	; 1
 782:	50 e0       	ldi	r21, 0x00	; 0
 784:	4e d0       	rcall	.+156    	; 0x822 <__divmodsi4>
 786:	49 01       	movw	r8, r18
 788:	5a 01       	movw	r10, r20
 78a:	9b 01       	movw	r18, r22
 78c:	ac 01       	movw	r20, r24
 78e:	a7 ea       	ldi	r26, 0xA7	; 167
 790:	b1 e4       	ldi	r27, 0x41	; 65
 792:	63 d0       	rcall	.+198    	; 0x85a <__muluhisi3>
 794:	6b 01       	movw	r12, r22
 796:	7c 01       	movw	r14, r24
 798:	ac ee       	ldi	r26, 0xEC	; 236
 79a:	b4 ef       	ldi	r27, 0xF4	; 244
 79c:	a5 01       	movw	r20, r10
 79e:	94 01       	movw	r18, r8
 7a0:	68 d0       	rcall	.+208    	; 0x872 <__mulohisi3>
 7a2:	dc 01       	movw	r26, r24
 7a4:	cb 01       	movw	r24, r22
 7a6:	8c 0d       	add	r24, r12
 7a8:	9d 1d       	adc	r25, r13
 7aa:	ae 1d       	adc	r26, r14
 7ac:	bf 1d       	adc	r27, r15
 7ae:	b7 ff       	sbrs	r27, 7
 7b0:	03 c0       	rjmp	.+6      	; 0x7b8 <do_rand+0x6c>
 7b2:	01 97       	sbiw	r24, 0x01	; 1
 7b4:	a1 09       	sbc	r26, r1
 7b6:	b0 48       	sbci	r27, 0x80	; 128
 7b8:	88 83       	st	Y, r24
 7ba:	99 83       	std	Y+1, r25	; 0x01
 7bc:	aa 83       	std	Y+2, r26	; 0x02
 7be:	bb 83       	std	Y+3, r27	; 0x03
 7c0:	9f 77       	andi	r25, 0x7F	; 127
 7c2:	df 91       	pop	r29
 7c4:	cf 91       	pop	r28
 7c6:	ff 90       	pop	r15
 7c8:	ef 90       	pop	r14
 7ca:	df 90       	pop	r13
 7cc:	cf 90       	pop	r12
 7ce:	bf 90       	pop	r11
 7d0:	af 90       	pop	r10
 7d2:	9f 90       	pop	r9
 7d4:	8f 90       	pop	r8
 7d6:	08 95       	ret

000007d8 <rand_r>:
 7d8:	b9 cf       	rjmp	.-142    	; 0x74c <do_rand>

000007da <rand>:
 7da:	80 e0       	ldi	r24, 0x00	; 0
 7dc:	91 e0       	ldi	r25, 0x01	; 1
 7de:	b6 cf       	rjmp	.-148    	; 0x74c <do_rand>

000007e0 <srand>:
 7e0:	a0 e0       	ldi	r26, 0x00	; 0
 7e2:	b0 e0       	ldi	r27, 0x00	; 0
 7e4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 7e8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 7ec:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 7f0:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 7f4:	08 95       	ret

000007f6 <eeprom_write_dword>:
 7f6:	24 2f       	mov	r18, r20
 7f8:	07 d0       	rcall	.+14     	; 0x808 <eeprom_write_r18>
 7fa:	25 2f       	mov	r18, r21
 7fc:	05 d0       	rcall	.+10     	; 0x808 <eeprom_write_r18>
 7fe:	00 c0       	rjmp	.+0      	; 0x800 <eeprom_write_word>

00000800 <eeprom_write_word>:
 800:	02 d0       	rcall	.+4      	; 0x806 <eeprom_write_byte>
 802:	27 2f       	mov	r18, r23
 804:	01 c0       	rjmp	.+2      	; 0x808 <eeprom_write_r18>

00000806 <eeprom_write_byte>:
 806:	26 2f       	mov	r18, r22

00000808 <eeprom_write_r18>:
 808:	f9 99       	sbic	0x1f, 1	; 31
 80a:	fe cf       	rjmp	.-4      	; 0x808 <eeprom_write_r18>
 80c:	1f ba       	out	0x1f, r1	; 31
 80e:	92 bd       	out	0x22, r25	; 34
 810:	81 bd       	out	0x21, r24	; 33
 812:	20 bd       	out	0x20, r18	; 32
 814:	0f b6       	in	r0, 0x3f	; 63
 816:	f8 94       	cli
 818:	fa 9a       	sbi	0x1f, 2	; 31
 81a:	f9 9a       	sbi	0x1f, 1	; 31
 81c:	0f be       	out	0x3f, r0	; 63
 81e:	01 96       	adiw	r24, 0x01	; 1
 820:	08 95       	ret

00000822 <__divmodsi4>:
 822:	05 2e       	mov	r0, r21
 824:	97 fb       	bst	r25, 7
 826:	16 f4       	brtc	.+4      	; 0x82c <__divmodsi4+0xa>
 828:	00 94       	com	r0
 82a:	0f d0       	rcall	.+30     	; 0x84a <__negsi2>
 82c:	57 fd       	sbrc	r21, 7
 82e:	05 d0       	rcall	.+10     	; 0x83a <__divmodsi4_neg2>
 830:	24 d0       	rcall	.+72     	; 0x87a <__udivmodsi4>
 832:	07 fc       	sbrc	r0, 7
 834:	02 d0       	rcall	.+4      	; 0x83a <__divmodsi4_neg2>
 836:	46 f4       	brtc	.+16     	; 0x848 <__divmodsi4_exit>
 838:	08 c0       	rjmp	.+16     	; 0x84a <__negsi2>

0000083a <__divmodsi4_neg2>:
 83a:	50 95       	com	r21
 83c:	40 95       	com	r20
 83e:	30 95       	com	r19
 840:	21 95       	neg	r18
 842:	3f 4f       	sbci	r19, 0xFF	; 255
 844:	4f 4f       	sbci	r20, 0xFF	; 255
 846:	5f 4f       	sbci	r21, 0xFF	; 255

00000848 <__divmodsi4_exit>:
 848:	08 95       	ret

0000084a <__negsi2>:
 84a:	90 95       	com	r25
 84c:	80 95       	com	r24
 84e:	70 95       	com	r23
 850:	61 95       	neg	r22
 852:	7f 4f       	sbci	r23, 0xFF	; 255
 854:	8f 4f       	sbci	r24, 0xFF	; 255
 856:	9f 4f       	sbci	r25, 0xFF	; 255
 858:	08 95       	ret

0000085a <__muluhisi3>:
 85a:	31 d0       	rcall	.+98     	; 0x8be <__umulhisi3>
 85c:	a5 9f       	mul	r26, r21
 85e:	90 0d       	add	r25, r0
 860:	b4 9f       	mul	r27, r20
 862:	90 0d       	add	r25, r0
 864:	a4 9f       	mul	r26, r20
 866:	80 0d       	add	r24, r0
 868:	91 1d       	adc	r25, r1
 86a:	11 24       	eor	r1, r1
 86c:	08 95       	ret

0000086e <__mulshisi3>:
 86e:	b7 ff       	sbrs	r27, 7
 870:	f4 cf       	rjmp	.-24     	; 0x85a <__muluhisi3>

00000872 <__mulohisi3>:
 872:	f3 df       	rcall	.-26     	; 0x85a <__muluhisi3>
 874:	82 1b       	sub	r24, r18
 876:	93 0b       	sbc	r25, r19
 878:	08 95       	ret

0000087a <__udivmodsi4>:
 87a:	a1 e2       	ldi	r26, 0x21	; 33
 87c:	1a 2e       	mov	r1, r26
 87e:	aa 1b       	sub	r26, r26
 880:	bb 1b       	sub	r27, r27
 882:	fd 01       	movw	r30, r26
 884:	0d c0       	rjmp	.+26     	; 0x8a0 <__udivmodsi4_ep>

00000886 <__udivmodsi4_loop>:
 886:	aa 1f       	adc	r26, r26
 888:	bb 1f       	adc	r27, r27
 88a:	ee 1f       	adc	r30, r30
 88c:	ff 1f       	adc	r31, r31
 88e:	a2 17       	cp	r26, r18
 890:	b3 07       	cpc	r27, r19
 892:	e4 07       	cpc	r30, r20
 894:	f5 07       	cpc	r31, r21
 896:	20 f0       	brcs	.+8      	; 0x8a0 <__udivmodsi4_ep>
 898:	a2 1b       	sub	r26, r18
 89a:	b3 0b       	sbc	r27, r19
 89c:	e4 0b       	sbc	r30, r20
 89e:	f5 0b       	sbc	r31, r21

000008a0 <__udivmodsi4_ep>:
 8a0:	66 1f       	adc	r22, r22
 8a2:	77 1f       	adc	r23, r23
 8a4:	88 1f       	adc	r24, r24
 8a6:	99 1f       	adc	r25, r25
 8a8:	1a 94       	dec	r1
 8aa:	69 f7       	brne	.-38     	; 0x886 <__udivmodsi4_loop>
 8ac:	60 95       	com	r22
 8ae:	70 95       	com	r23
 8b0:	80 95       	com	r24
 8b2:	90 95       	com	r25
 8b4:	9b 01       	movw	r18, r22
 8b6:	ac 01       	movw	r20, r24
 8b8:	bd 01       	movw	r22, r26
 8ba:	cf 01       	movw	r24, r30
 8bc:	08 95       	ret

000008be <__umulhisi3>:
 8be:	a2 9f       	mul	r26, r18
 8c0:	b0 01       	movw	r22, r0
 8c2:	b3 9f       	mul	r27, r19
 8c4:	c0 01       	movw	r24, r0
 8c6:	a3 9f       	mul	r26, r19
 8c8:	70 0d       	add	r23, r0
 8ca:	81 1d       	adc	r24, r1
 8cc:	11 24       	eor	r1, r1
 8ce:	91 1d       	adc	r25, r1
 8d0:	b2 9f       	mul	r27, r18
 8d2:	70 0d       	add	r23, r0
 8d4:	81 1d       	adc	r24, r1
 8d6:	11 24       	eor	r1, r1
 8d8:	91 1d       	adc	r25, r1
 8da:	08 95       	ret

000008dc <_exit>:
 8dc:	f8 94       	cli

000008de <__stop_program>:
 8de:	ff cf       	rjmp	.-2      	; 0x8de <__stop_program>
