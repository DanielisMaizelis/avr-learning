
GccApplication7.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000452  000004e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000452  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800106  00800106  000004ec  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004ec  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000051c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  0000055c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000979  00000000  00000000  0000058c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000848  00000000  00000000  00000f05  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000335  00000000  00000000  0000174d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000008c  00000000  00000000  00001a84  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004ce  00000000  00000000  00001b10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000137  00000000  00000000  00001fde  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00002115  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	61 c0       	rjmp	.+194    	; 0xc8 <__vector_1>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e5       	ldi	r30, 0x52	; 82
  a0:	f4 e0       	ldi	r31, 0x04	; 4
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 30       	cpi	r26, 0x06	; 6
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a6 e0       	ldi	r26, 0x06	; 6
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ab 30       	cpi	r26, 0x0B	; 11
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	97 d0       	rcall	.+302    	; 0x1f2 <main>
  c4:	c4 c1       	rjmp	.+904    	; 0x44e <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_1>:
bool reaction_timer_on = 0;
float reaction_time;
int to_make_a_second = 62500;

ISR(INT0_vect) // interrupt vector
{
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	0b b6       	in	r0, 0x3b	; 59
  d4:	0f 92       	push	r0
  d6:	2f 93       	push	r18
  d8:	3f 93       	push	r19
  da:	4f 93       	push	r20
  dc:	5f 93       	push	r21
  de:	6f 93       	push	r22
  e0:	7f 93       	push	r23
  e2:	8f 93       	push	r24
  e4:	9f 93       	push	r25
  e6:	af 93       	push	r26
  e8:	bf 93       	push	r27
  ea:	ef 93       	push	r30
  ec:	ff 93       	push	r31
	reaction_timer_on = 1;
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <reaction_timer_on>
	
	if(TCNT1*to_make_a_second > 1000)
  f4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
  f8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
  fc:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <to_make_a_second>
 100:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <to_make_a_second+0x1>
 104:	48 9f       	mul	r20, r24
 106:	90 01       	movw	r18, r0
 108:	49 9f       	mul	r20, r25
 10a:	30 0d       	add	r19, r0
 10c:	58 9f       	mul	r21, r24
 10e:	30 0d       	add	r19, r0
 110:	11 24       	eor	r1, r1
 112:	29 3e       	cpi	r18, 0xE9	; 233
 114:	33 40       	sbci	r19, 0x03	; 3
 116:	68 f0       	brcs	.+26     	; 0x132 <__vector_1+0x6a>
	{
		reaction_time = 2;
 118:	80 e0       	ldi	r24, 0x00	; 0
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	a0 e0       	ldi	r26, 0x00	; 0
 11e:	b0 e4       	ldi	r27, 0x40	; 64
 120:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
 124:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x1>
 128:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <__data_end+0x2>
 12c:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <__data_end+0x3>
 130:	43 c0       	rjmp	.+134    	; 0x1b8 <__vector_1+0xf0>
	}
	else if(TCNT1*to_make_a_second <= 100)
 132:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 136:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 13a:	84 9f       	mul	r24, r20
 13c:	90 01       	movw	r18, r0
 13e:	85 9f       	mul	r24, r21
 140:	30 0d       	add	r19, r0
 142:	94 9f       	mul	r25, r20
 144:	30 0d       	add	r19, r0
 146:	11 24       	eor	r1, r1
 148:	25 36       	cpi	r18, 0x65	; 101
 14a:	31 05       	cpc	r19, r1
 14c:	68 f4       	brcc	.+26     	; 0x168 <__vector_1+0xa0>
	{
		reaction_time = 1;
 14e:	80 e0       	ldi	r24, 0x00	; 0
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	a0 e8       	ldi	r26, 0x80	; 128
 154:	bf e3       	ldi	r27, 0x3F	; 63
 156:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
 15a:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x1>
 15e:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <__data_end+0x2>
 162:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <__data_end+0x3>
 166:	28 c0       	rjmp	.+80     	; 0x1b8 <__vector_1+0xf0>
	}
	else
	{
		reaction_time = 1+(TCNT1*to_make_a_second)/1000; 
 168:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 16c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 170:	84 9f       	mul	r24, r20
 172:	90 01       	movw	r18, r0
 174:	85 9f       	mul	r24, r21
 176:	30 0d       	add	r19, r0
 178:	94 9f       	mul	r25, r20
 17a:	30 0d       	add	r19, r0
 17c:	11 24       	eor	r1, r1
 17e:	36 95       	lsr	r19
 180:	27 95       	ror	r18
 182:	36 95       	lsr	r19
 184:	27 95       	ror	r18
 186:	36 95       	lsr	r19
 188:	27 95       	ror	r18
 18a:	a5 ec       	ldi	r26, 0xC5	; 197
 18c:	b0 e2       	ldi	r27, 0x20	; 32
 18e:	99 d0       	rcall	.+306    	; 0x2c2 <__umulhisi3>
 190:	92 95       	swap	r25
 192:	82 95       	swap	r24
 194:	8f 70       	andi	r24, 0x0F	; 15
 196:	89 27       	eor	r24, r25
 198:	9f 70       	andi	r25, 0x0F	; 15
 19a:	89 27       	eor	r24, r25
 19c:	bc 01       	movw	r22, r24
 19e:	6f 5f       	subi	r22, 0xFF	; 255
 1a0:	7f 4f       	sbci	r23, 0xFF	; 255
 1a2:	80 e0       	ldi	r24, 0x00	; 0
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	3d d0       	rcall	.+122    	; 0x222 <__floatunsisf>
 1a8:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <__data_end>
 1ac:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <__data_end+0x1>
 1b0:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__data_end+0x2>
 1b4:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <__data_end+0x3>
	}
	
	PORTB |= 0b00000010; // turns on a second led
 1b8:	85 b1       	in	r24, 0x05	; 5
 1ba:	82 60       	ori	r24, 0x02	; 2
 1bc:	85 b9       	out	0x05, r24	; 5
}
 1be:	ff 91       	pop	r31
 1c0:	ef 91       	pop	r30
 1c2:	bf 91       	pop	r27
 1c4:	af 91       	pop	r26
 1c6:	9f 91       	pop	r25
 1c8:	8f 91       	pop	r24
 1ca:	7f 91       	pop	r23
 1cc:	6f 91       	pop	r22
 1ce:	5f 91       	pop	r21
 1d0:	4f 91       	pop	r20
 1d2:	3f 91       	pop	r19
 1d4:	2f 91       	pop	r18
 1d6:	0f 90       	pop	r0
 1d8:	0b be       	out	0x3b, r0	; 59
 1da:	0f 90       	pop	r0
 1dc:	0f be       	out	0x3f, r0	; 63
 1de:	0f 90       	pop	r0
 1e0:	1f 90       	pop	r1
 1e2:	18 95       	reti

000001e4 <_Z8random_vv>:
	sei();
}

int random_v()
{
	return rand() % 3000 + 1000; // Set from 3-4seconds
 1e4:	d8 d0       	rcall	.+432    	; 0x396 <rand>
 1e6:	68 eb       	ldi	r22, 0xB8	; 184
 1e8:	7b e0       	ldi	r23, 0x0B	; 11
 1ea:	58 d0       	rcall	.+176    	; 0x29c <__divmodhi4>
}
 1ec:	88 51       	subi	r24, 0x18	; 24
 1ee:	9c 4f       	sbci	r25, 0xFC	; 252
 1f0:	08 95       	ret

000001f2 <main>:

}*/

int main(void)
{
	int random_value = random_v();// Random value that should have been working commented below
 1f2:	f8 df       	rcall	.-16     	; 0x1e4 <_Z8random_vv>
	
	//Timer 1
	TCNT1 |= 0b0000100;*/
	
	// Pins for the LEDs
	DDRB = 0b00000011; // Sets PB0 and PB1 as outputs
 1f4:	83 e0       	ldi	r24, 0x03	; 3
 1f6:	84 b9       	out	0x04, r24	; 4
	PORTB = 0b00000000;
 1f8:	15 b8       	out	0x05, r1	; 5
	if (__tmp < 1.0)
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 1fa:	80 e1       	ldi	r24, 0x10	; 16
 1fc:	97 e2       	ldi	r25, 0x27	; 39
		while(__ticks)
 1fe:	00 97       	sbiw	r24, 0x00	; 0
 200:	31 f0       	breq	.+12     	; 0x20e <main+0x1c>
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 202:	e0 e9       	ldi	r30, 0x90	; 144
 204:	f1 e0       	ldi	r31, 0x01	; 1
 206:	31 97       	sbiw	r30, 0x01	; 1
 208:	f1 f7       	brne	.-4      	; 0x206 <main+0x14>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 20a:	01 97       	sbiw	r24, 0x01	; 1
 20c:	f8 cf       	rjmp	.-16     	; 0x1fe <main+0xc>
	EICRA = 0b00000010; //ISC0n to be sent on falling edge - so when the button is pressed from 1 to 0
	//EICRA = 0b00000010; //ISC0n to be sent on rising edge - so when the button is pressed from 0 to 1
	EIMSK = 0b00000001; // Enables INT0, basically the interrupt, otherwise it won't work*/
	
	_delay_ms(1000);
	PORTB |= 0b00000001; // turns on a first led
 20e:	85 b1       	in	r24, 0x05	; 5
 210:	81 60       	ori	r24, 0x01	; 1
 212:	85 b9       	out	0x05, r24	; 5
	PORTB |= 0b00000010; // turns on a second led
 214:	85 b1       	in	r24, 0x05	; 5
 216:	82 60       	ori	r24, 0x02	; 2
 218:	85 b9       	out	0x05, r24	; 5
	
	//TCNT1 = 0; // Starts the counter
	//PORTB = 0b00000000; // turns on a first led
	//PORTB = 0b00000000; // turns on a second led
	
	sei();
 21a:	78 94       	sei
}
 21c:	80 e0       	ldi	r24, 0x00	; 0
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	08 95       	ret

00000222 <__floatunsisf>:
 222:	e8 94       	clt
 224:	09 c0       	rjmp	.+18     	; 0x238 <__floatsisf+0x12>

00000226 <__floatsisf>:
 226:	97 fb       	bst	r25, 7
 228:	3e f4       	brtc	.+14     	; 0x238 <__floatsisf+0x12>
 22a:	90 95       	com	r25
 22c:	80 95       	com	r24
 22e:	70 95       	com	r23
 230:	61 95       	neg	r22
 232:	7f 4f       	sbci	r23, 0xFF	; 255
 234:	8f 4f       	sbci	r24, 0xFF	; 255
 236:	9f 4f       	sbci	r25, 0xFF	; 255
 238:	99 23       	and	r25, r25
 23a:	a9 f0       	breq	.+42     	; 0x266 <__floatsisf+0x40>
 23c:	f9 2f       	mov	r31, r25
 23e:	96 e9       	ldi	r25, 0x96	; 150
 240:	bb 27       	eor	r27, r27
 242:	93 95       	inc	r25
 244:	f6 95       	lsr	r31
 246:	87 95       	ror	r24
 248:	77 95       	ror	r23
 24a:	67 95       	ror	r22
 24c:	b7 95       	ror	r27
 24e:	f1 11       	cpse	r31, r1
 250:	f8 cf       	rjmp	.-16     	; 0x242 <__floatsisf+0x1c>
 252:	fa f4       	brpl	.+62     	; 0x292 <__floatsisf+0x6c>
 254:	bb 0f       	add	r27, r27
 256:	11 f4       	brne	.+4      	; 0x25c <__floatsisf+0x36>
 258:	60 ff       	sbrs	r22, 0
 25a:	1b c0       	rjmp	.+54     	; 0x292 <__floatsisf+0x6c>
 25c:	6f 5f       	subi	r22, 0xFF	; 255
 25e:	7f 4f       	sbci	r23, 0xFF	; 255
 260:	8f 4f       	sbci	r24, 0xFF	; 255
 262:	9f 4f       	sbci	r25, 0xFF	; 255
 264:	16 c0       	rjmp	.+44     	; 0x292 <__floatsisf+0x6c>
 266:	88 23       	and	r24, r24
 268:	11 f0       	breq	.+4      	; 0x26e <__floatsisf+0x48>
 26a:	96 e9       	ldi	r25, 0x96	; 150
 26c:	11 c0       	rjmp	.+34     	; 0x290 <__floatsisf+0x6a>
 26e:	77 23       	and	r23, r23
 270:	21 f0       	breq	.+8      	; 0x27a <__floatsisf+0x54>
 272:	9e e8       	ldi	r25, 0x8E	; 142
 274:	87 2f       	mov	r24, r23
 276:	76 2f       	mov	r23, r22
 278:	05 c0       	rjmp	.+10     	; 0x284 <__floatsisf+0x5e>
 27a:	66 23       	and	r22, r22
 27c:	71 f0       	breq	.+28     	; 0x29a <__floatsisf+0x74>
 27e:	96 e8       	ldi	r25, 0x86	; 134
 280:	86 2f       	mov	r24, r22
 282:	70 e0       	ldi	r23, 0x00	; 0
 284:	60 e0       	ldi	r22, 0x00	; 0
 286:	2a f0       	brmi	.+10     	; 0x292 <__floatsisf+0x6c>
 288:	9a 95       	dec	r25
 28a:	66 0f       	add	r22, r22
 28c:	77 1f       	adc	r23, r23
 28e:	88 1f       	adc	r24, r24
 290:	da f7       	brpl	.-10     	; 0x288 <__floatsisf+0x62>
 292:	88 0f       	add	r24, r24
 294:	96 95       	lsr	r25
 296:	87 95       	ror	r24
 298:	97 f9       	bld	r25, 7
 29a:	08 95       	ret

0000029c <__divmodhi4>:
 29c:	97 fb       	bst	r25, 7
 29e:	07 2e       	mov	r0, r23
 2a0:	16 f4       	brtc	.+4      	; 0x2a6 <__divmodhi4+0xa>
 2a2:	00 94       	com	r0
 2a4:	06 d0       	rcall	.+12     	; 0x2b2 <__divmodhi4_neg1>
 2a6:	77 fd       	sbrc	r23, 7
 2a8:	08 d0       	rcall	.+16     	; 0x2ba <__divmodhi4_neg2>
 2aa:	1a d0       	rcall	.+52     	; 0x2e0 <__udivmodhi4>
 2ac:	07 fc       	sbrc	r0, 7
 2ae:	05 d0       	rcall	.+10     	; 0x2ba <__divmodhi4_neg2>
 2b0:	3e f4       	brtc	.+14     	; 0x2c0 <__divmodhi4_exit>

000002b2 <__divmodhi4_neg1>:
 2b2:	90 95       	com	r25
 2b4:	81 95       	neg	r24
 2b6:	9f 4f       	sbci	r25, 0xFF	; 255
 2b8:	08 95       	ret

000002ba <__divmodhi4_neg2>:
 2ba:	70 95       	com	r23
 2bc:	61 95       	neg	r22
 2be:	7f 4f       	sbci	r23, 0xFF	; 255

000002c0 <__divmodhi4_exit>:
 2c0:	08 95       	ret

000002c2 <__umulhisi3>:
 2c2:	a2 9f       	mul	r26, r18
 2c4:	b0 01       	movw	r22, r0
 2c6:	b3 9f       	mul	r27, r19
 2c8:	c0 01       	movw	r24, r0
 2ca:	a3 9f       	mul	r26, r19
 2cc:	70 0d       	add	r23, r0
 2ce:	81 1d       	adc	r24, r1
 2d0:	11 24       	eor	r1, r1
 2d2:	91 1d       	adc	r25, r1
 2d4:	b2 9f       	mul	r27, r18
 2d6:	70 0d       	add	r23, r0
 2d8:	81 1d       	adc	r24, r1
 2da:	11 24       	eor	r1, r1
 2dc:	91 1d       	adc	r25, r1
 2de:	08 95       	ret

000002e0 <__udivmodhi4>:
 2e0:	aa 1b       	sub	r26, r26
 2e2:	bb 1b       	sub	r27, r27
 2e4:	51 e1       	ldi	r21, 0x11	; 17
 2e6:	07 c0       	rjmp	.+14     	; 0x2f6 <__udivmodhi4_ep>

000002e8 <__udivmodhi4_loop>:
 2e8:	aa 1f       	adc	r26, r26
 2ea:	bb 1f       	adc	r27, r27
 2ec:	a6 17       	cp	r26, r22
 2ee:	b7 07       	cpc	r27, r23
 2f0:	10 f0       	brcs	.+4      	; 0x2f6 <__udivmodhi4_ep>
 2f2:	a6 1b       	sub	r26, r22
 2f4:	b7 0b       	sbc	r27, r23

000002f6 <__udivmodhi4_ep>:
 2f6:	88 1f       	adc	r24, r24
 2f8:	99 1f       	adc	r25, r25
 2fa:	5a 95       	dec	r21
 2fc:	a9 f7       	brne	.-22     	; 0x2e8 <__udivmodhi4_loop>
 2fe:	80 95       	com	r24
 300:	90 95       	com	r25
 302:	bc 01       	movw	r22, r24
 304:	cd 01       	movw	r24, r26
 306:	08 95       	ret

00000308 <do_rand>:
 308:	8f 92       	push	r8
 30a:	9f 92       	push	r9
 30c:	af 92       	push	r10
 30e:	bf 92       	push	r11
 310:	cf 92       	push	r12
 312:	df 92       	push	r13
 314:	ef 92       	push	r14
 316:	ff 92       	push	r15
 318:	cf 93       	push	r28
 31a:	df 93       	push	r29
 31c:	ec 01       	movw	r28, r24
 31e:	68 81       	ld	r22, Y
 320:	79 81       	ldd	r23, Y+1	; 0x01
 322:	8a 81       	ldd	r24, Y+2	; 0x02
 324:	9b 81       	ldd	r25, Y+3	; 0x03
 326:	61 15       	cp	r22, r1
 328:	71 05       	cpc	r23, r1
 32a:	81 05       	cpc	r24, r1
 32c:	91 05       	cpc	r25, r1
 32e:	21 f4       	brne	.+8      	; 0x338 <do_rand+0x30>
 330:	64 e2       	ldi	r22, 0x24	; 36
 332:	79 ed       	ldi	r23, 0xD9	; 217
 334:	8b e5       	ldi	r24, 0x5B	; 91
 336:	97 e0       	ldi	r25, 0x07	; 7
 338:	2d e1       	ldi	r18, 0x1D	; 29
 33a:	33 ef       	ldi	r19, 0xF3	; 243
 33c:	41 e0       	ldi	r20, 0x01	; 1
 33e:	50 e0       	ldi	r21, 0x00	; 0
 340:	38 d0       	rcall	.+112    	; 0x3b2 <__divmodsi4>
 342:	49 01       	movw	r8, r18
 344:	5a 01       	movw	r10, r20
 346:	9b 01       	movw	r18, r22
 348:	ac 01       	movw	r20, r24
 34a:	a7 ea       	ldi	r26, 0xA7	; 167
 34c:	b1 e4       	ldi	r27, 0x41	; 65
 34e:	4d d0       	rcall	.+154    	; 0x3ea <__muluhisi3>
 350:	6b 01       	movw	r12, r22
 352:	7c 01       	movw	r14, r24
 354:	ac ee       	ldi	r26, 0xEC	; 236
 356:	b4 ef       	ldi	r27, 0xF4	; 244
 358:	a5 01       	movw	r20, r10
 35a:	94 01       	movw	r18, r8
 35c:	52 d0       	rcall	.+164    	; 0x402 <__mulohisi3>
 35e:	dc 01       	movw	r26, r24
 360:	cb 01       	movw	r24, r22
 362:	8c 0d       	add	r24, r12
 364:	9d 1d       	adc	r25, r13
 366:	ae 1d       	adc	r26, r14
 368:	bf 1d       	adc	r27, r15
 36a:	b7 ff       	sbrs	r27, 7
 36c:	03 c0       	rjmp	.+6      	; 0x374 <do_rand+0x6c>
 36e:	01 97       	sbiw	r24, 0x01	; 1
 370:	a1 09       	sbc	r26, r1
 372:	b0 48       	sbci	r27, 0x80	; 128
 374:	88 83       	st	Y, r24
 376:	99 83       	std	Y+1, r25	; 0x01
 378:	aa 83       	std	Y+2, r26	; 0x02
 37a:	bb 83       	std	Y+3, r27	; 0x03
 37c:	9f 77       	andi	r25, 0x7F	; 127
 37e:	df 91       	pop	r29
 380:	cf 91       	pop	r28
 382:	ff 90       	pop	r15
 384:	ef 90       	pop	r14
 386:	df 90       	pop	r13
 388:	cf 90       	pop	r12
 38a:	bf 90       	pop	r11
 38c:	af 90       	pop	r10
 38e:	9f 90       	pop	r9
 390:	8f 90       	pop	r8
 392:	08 95       	ret

00000394 <rand_r>:
 394:	b9 cf       	rjmp	.-142    	; 0x308 <do_rand>

00000396 <rand>:
 396:	80 e0       	ldi	r24, 0x00	; 0
 398:	91 e0       	ldi	r25, 0x01	; 1
 39a:	b6 cf       	rjmp	.-148    	; 0x308 <do_rand>

0000039c <srand>:
 39c:	a0 e0       	ldi	r26, 0x00	; 0
 39e:	b0 e0       	ldi	r27, 0x00	; 0
 3a0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 3a4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 3a8:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 3ac:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 3b0:	08 95       	ret

000003b2 <__divmodsi4>:
 3b2:	05 2e       	mov	r0, r21
 3b4:	97 fb       	bst	r25, 7
 3b6:	16 f4       	brtc	.+4      	; 0x3bc <__divmodsi4+0xa>
 3b8:	00 94       	com	r0
 3ba:	0f d0       	rcall	.+30     	; 0x3da <__negsi2>
 3bc:	57 fd       	sbrc	r21, 7
 3be:	05 d0       	rcall	.+10     	; 0x3ca <__divmodsi4_neg2>
 3c0:	24 d0       	rcall	.+72     	; 0x40a <__udivmodsi4>
 3c2:	07 fc       	sbrc	r0, 7
 3c4:	02 d0       	rcall	.+4      	; 0x3ca <__divmodsi4_neg2>
 3c6:	46 f4       	brtc	.+16     	; 0x3d8 <__divmodsi4_exit>
 3c8:	08 c0       	rjmp	.+16     	; 0x3da <__negsi2>

000003ca <__divmodsi4_neg2>:
 3ca:	50 95       	com	r21
 3cc:	40 95       	com	r20
 3ce:	30 95       	com	r19
 3d0:	21 95       	neg	r18
 3d2:	3f 4f       	sbci	r19, 0xFF	; 255
 3d4:	4f 4f       	sbci	r20, 0xFF	; 255
 3d6:	5f 4f       	sbci	r21, 0xFF	; 255

000003d8 <__divmodsi4_exit>:
 3d8:	08 95       	ret

000003da <__negsi2>:
 3da:	90 95       	com	r25
 3dc:	80 95       	com	r24
 3de:	70 95       	com	r23
 3e0:	61 95       	neg	r22
 3e2:	7f 4f       	sbci	r23, 0xFF	; 255
 3e4:	8f 4f       	sbci	r24, 0xFF	; 255
 3e6:	9f 4f       	sbci	r25, 0xFF	; 255
 3e8:	08 95       	ret

000003ea <__muluhisi3>:
 3ea:	6b df       	rcall	.-298    	; 0x2c2 <__umulhisi3>
 3ec:	a5 9f       	mul	r26, r21
 3ee:	90 0d       	add	r25, r0
 3f0:	b4 9f       	mul	r27, r20
 3f2:	90 0d       	add	r25, r0
 3f4:	a4 9f       	mul	r26, r20
 3f6:	80 0d       	add	r24, r0
 3f8:	91 1d       	adc	r25, r1
 3fa:	11 24       	eor	r1, r1
 3fc:	08 95       	ret

000003fe <__mulshisi3>:
 3fe:	b7 ff       	sbrs	r27, 7
 400:	f4 cf       	rjmp	.-24     	; 0x3ea <__muluhisi3>

00000402 <__mulohisi3>:
 402:	f3 df       	rcall	.-26     	; 0x3ea <__muluhisi3>
 404:	82 1b       	sub	r24, r18
 406:	93 0b       	sbc	r25, r19
 408:	08 95       	ret

0000040a <__udivmodsi4>:
 40a:	a1 e2       	ldi	r26, 0x21	; 33
 40c:	1a 2e       	mov	r1, r26
 40e:	aa 1b       	sub	r26, r26
 410:	bb 1b       	sub	r27, r27
 412:	fd 01       	movw	r30, r26
 414:	0d c0       	rjmp	.+26     	; 0x430 <__udivmodsi4_ep>

00000416 <__udivmodsi4_loop>:
 416:	aa 1f       	adc	r26, r26
 418:	bb 1f       	adc	r27, r27
 41a:	ee 1f       	adc	r30, r30
 41c:	ff 1f       	adc	r31, r31
 41e:	a2 17       	cp	r26, r18
 420:	b3 07       	cpc	r27, r19
 422:	e4 07       	cpc	r30, r20
 424:	f5 07       	cpc	r31, r21
 426:	20 f0       	brcs	.+8      	; 0x430 <__udivmodsi4_ep>
 428:	a2 1b       	sub	r26, r18
 42a:	b3 0b       	sbc	r27, r19
 42c:	e4 0b       	sbc	r30, r20
 42e:	f5 0b       	sbc	r31, r21

00000430 <__udivmodsi4_ep>:
 430:	66 1f       	adc	r22, r22
 432:	77 1f       	adc	r23, r23
 434:	88 1f       	adc	r24, r24
 436:	99 1f       	adc	r25, r25
 438:	1a 94       	dec	r1
 43a:	69 f7       	brne	.-38     	; 0x416 <__udivmodsi4_loop>
 43c:	60 95       	com	r22
 43e:	70 95       	com	r23
 440:	80 95       	com	r24
 442:	90 95       	com	r25
 444:	9b 01       	movw	r18, r22
 446:	ac 01       	movw	r20, r24
 448:	bd 01       	movw	r22, r26
 44a:	cf 01       	movw	r24, r30
 44c:	08 95       	ret

0000044e <_exit>:
 44e:	f8 94       	cli

00000450 <__stop_program>:
 450:	ff cf       	rjmp	.-2      	; 0x450 <__stop_program>
