
lab 3 (PWM and ADC).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000d5e  00000df2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d5e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800104  00800104  00000df6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000df6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e54  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000e94  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ce7  00000000  00000000  00000f2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000093b  00000000  00000000  00001c13  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000064a  00000000  00000000  0000254e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000174  00000000  00000000  00002b98  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004a9  00000000  00000000  00002d0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005cd  00000000  00000000  000031b5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00003782  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 a0 00 	jmp	0x140	; 0x140 <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e5       	ldi	r30, 0x5E	; 94
  7c:	fd e0       	ldi	r31, 0x0D	; 13
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 30       	cpi	r26, 0x04	; 4
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e0       	ldi	r26, 0x04	; 4
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 30       	cpi	r26, 0x06	; 6
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <main>
  9e:	0c 94 ad 06 	jmp	0xd5a	; 0xd5a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <adcSetup>:
#include "main.h"


void adcSetup()
{
	DDRC   |= 0x00;					  // Set the pins for analog as input
  a6:	87 b1       	in	r24, 0x07	; 7
  a8:	87 b9       	out	0x07, r24	; 7
	PORTC  |= 0x00;			          // Set the pins for analog as input
  aa:	88 b1       	in	r24, 0x08	; 8
  ac:	88 b9       	out	0x08, r24	; 8
	ADCSRA |= (1 << ADEN) | (1 << ADIE)| (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); // Enable ADC, ADC Interrupt
  ae:	ea e7       	ldi	r30, 0x7A	; 122
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	80 81       	ld	r24, Z
  b4:	8f 68       	ori	r24, 0x8F	; 143
  b6:	80 83       	st	Z, r24
	ADMUX  |= 1 << REFS0;				  // Set reference voltage to AVCC
  b8:	ac e7       	ldi	r26, 0x7C	; 124
  ba:	b0 e0       	ldi	r27, 0x00	; 0
  bc:	8c 91       	ld	r24, X
  be:	80 64       	ori	r24, 0x40	; 64
  c0:	8c 93       	st	X, r24
	// ADMUX  |= 1 << ADLAR;				  // Left adjust result

	// Set ADC channel to 0
	//ADMUX &= ~(1 << MUX0) & ~(1 << MUX1) & ~(1 << MUX2) & ~(1 << MUX3);
	ADMUX |= (1 << MUX0);
  c2:	8c 91       	ld	r24, X
  c4:	81 60       	ori	r24, 0x01	; 1
  c6:	8c 93       	st	X, r24

	// Start conversion and interrupts
	ADCSRA |= (1 << ADSC)|(1<< ADIE);
  c8:	80 81       	ld	r24, Z
  ca:	88 64       	ori	r24, 0x48	; 72
  cc:	80 83       	st	Z, r24
  ce:	08 95       	ret

000000d0 <command>:
	command(0b00111000);
	
	// Display on/off
	command(0b00001100);
	
	clearScreen();
  d0:	8b b9       	out	0x0b, r24	; 11
  d2:	85 b1       	in	r24, 0x05	; 5
  d4:	80 62       	ori	r24, 0x20	; 32
  d6:	85 b9       	out	0x05, r24	; 5
  d8:	8f e9       	ldi	r24, 0x9F	; 159
  da:	9f e0       	ldi	r25, 0x0F	; 15
  dc:	01 97       	sbiw	r24, 0x01	; 1
  de:	f1 f7       	brne	.-4      	; 0xdc <command+0xc>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <command+0x12>
  e2:	00 00       	nop
  e4:	85 b1       	in	r24, 0x05	; 5
  e6:	15 b8       	out	0x05, r1	; 5
  e8:	08 95       	ret

000000ea <clearScreen>:
  ea:	86 e0       	ldi	r24, 0x06	; 6
  ec:	0e 94 68 00 	call	0xd0	; 0xd0 <command>
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	0e 94 68 00 	call	0xd0	; 0xd0 <command>
  f6:	2f ef       	ldi	r18, 0xFF	; 255
  f8:	89 ef       	ldi	r24, 0xF9	; 249
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	21 50       	subi	r18, 0x01	; 1
  fe:	80 40       	sbci	r24, 0x00	; 0
 100:	90 40       	sbci	r25, 0x00	; 0
 102:	e1 f7       	brne	.-8      	; 0xfc <clearScreen+0x12>
 104:	00 c0       	rjmp	.+0      	; 0x106 <clearScreen+0x1c>
 106:	00 00       	nop
 108:	08 95       	ret

0000010a <setData>:



void setData(char data) // RS = 1 R/W = 0, Enable = 1
{
	DATA    = data;
 10a:	8b b9       	out	0x0b, r24	; 11
	CONTROL |= (1<<RS)|(1<<EN);
 10c:	85 b1       	in	r24, 0x05	; 5
 10e:	88 62       	ori	r24, 0x28	; 40
 110:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 112:	8f e9       	ldi	r24, 0x9F	; 159
 114:	9f e0       	ldi	r25, 0x0F	; 15
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <setData+0xc>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <setData+0x12>
 11c:	00 00       	nop
	_delay_ms(1);
	CONTROL &= ~(1<<EN); // Rs stay, enable 0
 11e:	85 b1       	in	r24, 0x05	; 5
 120:	8f 7d       	andi	r24, 0xDF	; 223
 122:	85 b9       	out	0x05, r24	; 5
 124:	08 95       	ret

00000126 <displayVoltageLcd>:

}

void displayVoltageLcd(char * word)
{
 126:	cf 93       	push	r28
 128:	df 93       	push	r29
 12a:	ec 01       	movw	r28, r24
	while (*word)
 12c:	03 c0       	rjmp	.+6      	; 0x134 <displayVoltageLcd+0xe>
	setData(*word++);
 12e:	21 96       	adiw	r28, 0x01	; 1
 130:	0e 94 85 00 	call	0x10a	; 0x10a <setData>

}

void displayVoltageLcd(char * word)
{
	while (*word)
 134:	88 81       	ld	r24, Y
 136:	81 11       	cpse	r24, r1
 138:	fa cf       	rjmp	.-12     	; 0x12e <displayVoltageLcd+0x8>
	setData(*word++);
 13a:	df 91       	pop	r29
 13c:	cf 91       	pop	r28
 13e:	08 95       	ret

00000140 <__vector_21>:
#include "main.h"
volatile uint16_t result;
	
ISR(ADC_vect)
{
 140:	1f 92       	push	r1
 142:	0f 92       	push	r0
 144:	0f b6       	in	r0, 0x3f	; 63
 146:	0f 92       	push	r0
 148:	11 24       	eor	r1, r1
 14a:	8f 93       	push	r24
 14c:	9f 93       	push	r25
	result = ADC;
 14e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 152:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 156:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 15a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
}
 15e:	9f 91       	pop	r25
 160:	8f 91       	pop	r24
 162:	0f 90       	pop	r0
 164:	0f be       	out	0x3f, r0	; 63
 166:	0f 90       	pop	r0
 168:	1f 90       	pop	r1
 16a:	18 95       	reti

0000016c <float_to_string>:


void float_to_string(float value, char* buffer, int precision) {
 16c:	4f 92       	push	r4
 16e:	5f 92       	push	r5
 170:	6f 92       	push	r6
 172:	7f 92       	push	r7
 174:	af 92       	push	r10
 176:	bf 92       	push	r11
 178:	cf 92       	push	r12
 17a:	df 92       	push	r13
 17c:	ef 92       	push	r14
 17e:	ff 92       	push	r15
 180:	0f 93       	push	r16
 182:	1f 93       	push	r17
 184:	cf 93       	push	r28
 186:	df 93       	push	r29
 188:	2b 01       	movw	r4, r22
 18a:	3c 01       	movw	r6, r24
 18c:	7a 01       	movw	r14, r20
 18e:	59 01       	movw	r10, r18
	int int_part = (int)value;
 190:	0e 94 5f 02 	call	0x4be	; 0x4be <__fixsfsi>
 194:	8b 01       	movw	r16, r22
	float remainder = value - int_part;
 196:	07 2e       	mov	r0, r23
 198:	00 0c       	add	r0, r0
 19a:	88 0b       	sbc	r24, r24
 19c:	99 0b       	sbc	r25, r25
 19e:	0e 94 97 02 	call	0x52e	; 0x52e <__floatsisf>
 1a2:	9b 01       	movw	r18, r22
 1a4:	ac 01       	movw	r20, r24
 1a6:	c3 01       	movw	r24, r6
 1a8:	b2 01       	movw	r22, r4
 1aa:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <__subsf3>
 1ae:	2b 01       	movw	r4, r22
 1b0:	3c 01       	movw	r6, r24
	int index = 0;
 1b2:	20 e0       	ldi	r18, 0x00	; 0
 1b4:	30 e0       	ldi	r19, 0x00	; 0

	// Convert the integer part to string
	while (int_part != 0) {
 1b6:	0e c0       	rjmp	.+28     	; 0x1d4 <float_to_string+0x68>
		buffer[index++] = int_part % 10 + '0';
 1b8:	f7 01       	movw	r30, r14
 1ba:	e2 0f       	add	r30, r18
 1bc:	f3 1f       	adc	r31, r19
 1be:	c8 01       	movw	r24, r16
 1c0:	6a e0       	ldi	r22, 0x0A	; 10
 1c2:	70 e0       	ldi	r23, 0x00	; 0
 1c4:	0e 94 90 03 	call	0x720	; 0x720 <__divmodhi4>
 1c8:	80 5d       	subi	r24, 0xD0	; 208
 1ca:	80 83       	st	Z, r24
		int_part /= 10;
 1cc:	06 2f       	mov	r16, r22
 1ce:	17 2f       	mov	r17, r23
	float remainder = value - int_part;
	int index = 0;

	// Convert the integer part to string
	while (int_part != 0) {
		buffer[index++] = int_part % 10 + '0';
 1d0:	2f 5f       	subi	r18, 0xFF	; 255
 1d2:	3f 4f       	sbci	r19, 0xFF	; 255
	int int_part = (int)value;
	float remainder = value - int_part;
	int index = 0;

	// Convert the integer part to string
	while (int_part != 0) {
 1d4:	01 15       	cp	r16, r1
 1d6:	11 05       	cpc	r17, r1
 1d8:	79 f7       	brne	.-34     	; 0x1b8 <float_to_string+0x4c>
 1da:	80 e0       	ldi	r24, 0x00	; 0
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	0e c0       	rjmp	.+28     	; 0x1fc <float_to_string+0x90>
		int_part /= 10;
	}

	// Reverse the integer part in the buffer
	for (int i = 0; i < index / 2; i++) {
		char temp = buffer[i];
 1e0:	d7 01       	movw	r26, r14
 1e2:	a8 0f       	add	r26, r24
 1e4:	b9 1f       	adc	r27, r25
 1e6:	4c 91       	ld	r20, X
		buffer[i] = buffer[index - i - 1];
 1e8:	f9 01       	movw	r30, r18
 1ea:	e8 1b       	sub	r30, r24
 1ec:	f9 0b       	sbc	r31, r25
 1ee:	31 97       	sbiw	r30, 0x01	; 1
 1f0:	ee 0d       	add	r30, r14
 1f2:	ff 1d       	adc	r31, r15
 1f4:	50 81       	ld	r21, Z
 1f6:	5c 93       	st	X, r21
		buffer[index - i - 1] = temp;
 1f8:	40 83       	st	Z, r20
		buffer[index++] = int_part % 10 + '0';
		int_part /= 10;
	}

	// Reverse the integer part in the buffer
	for (int i = 0; i < index / 2; i++) {
 1fa:	01 96       	adiw	r24, 0x01	; 1
 1fc:	a9 01       	movw	r20, r18
 1fe:	33 23       	and	r19, r19
 200:	14 f4       	brge	.+4      	; 0x206 <float_to_string+0x9a>
 202:	4f 5f       	subi	r20, 0xFF	; 255
 204:	5f 4f       	sbci	r21, 0xFF	; 255
 206:	55 95       	asr	r21
 208:	47 95       	ror	r20
 20a:	84 17       	cp	r24, r20
 20c:	95 07       	cpc	r25, r21
 20e:	44 f3       	brlt	.-48     	; 0x1e0 <float_to_string+0x74>
		buffer[i] = buffer[index - i - 1];
		buffer[index - i - 1] = temp;
	}

	// Append the decimal point
	buffer[index++] = '.';
 210:	e9 01       	movw	r28, r18
 212:	21 96       	adiw	r28, 0x01	; 1
 214:	f7 01       	movw	r30, r14
 216:	e2 0f       	add	r30, r18
 218:	f3 1f       	adc	r31, r19
 21a:	8e e2       	ldi	r24, 0x2E	; 46
 21c:	80 83       	st	Z, r24

	// Convert the fractional part to string
	for (int i = 0; i < precision; i++) {
 21e:	00 e0       	ldi	r16, 0x00	; 0
 220:	10 e0       	ldi	r17, 0x00	; 0
 222:	26 c0       	rjmp	.+76     	; 0x270 <float_to_string+0x104>
		remainder *= 10;
 224:	20 e0       	ldi	r18, 0x00	; 0
 226:	30 e0       	ldi	r19, 0x00	; 0
 228:	40 e2       	ldi	r20, 0x20	; 32
 22a:	51 e4       	ldi	r21, 0x41	; 65
 22c:	c3 01       	movw	r24, r6
 22e:	b2 01       	movw	r22, r4
 230:	0e 94 23 03 	call	0x646	; 0x646 <__mulsf3>
 234:	2b 01       	movw	r4, r22
 236:	3c 01       	movw	r6, r24
		int digit = (int)remainder;
 238:	0e 94 5f 02 	call	0x4be	; 0x4be <__fixsfsi>
		buffer[index++] = digit + '0';
 23c:	6e 01       	movw	r12, r28
 23e:	2f ef       	ldi	r18, 0xFF	; 255
 240:	c2 1a       	sub	r12, r18
 242:	d2 0a       	sbc	r13, r18
 244:	ce 0d       	add	r28, r14
 246:	df 1d       	adc	r29, r15
 248:	20 e3       	ldi	r18, 0x30	; 48
 24a:	26 0f       	add	r18, r22
 24c:	28 83       	st	Y, r18
		remainder -= digit;
 24e:	07 2e       	mov	r0, r23
 250:	00 0c       	add	r0, r0
 252:	88 0b       	sbc	r24, r24
 254:	99 0b       	sbc	r25, r25
 256:	0e 94 97 02 	call	0x52e	; 0x52e <__floatsisf>
 25a:	9b 01       	movw	r18, r22
 25c:	ac 01       	movw	r20, r24
 25e:	c3 01       	movw	r24, r6
 260:	b2 01       	movw	r22, r4
 262:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <__subsf3>
 266:	2b 01       	movw	r4, r22
 268:	3c 01       	movw	r6, r24

	// Append the decimal point
	buffer[index++] = '.';

	// Convert the fractional part to string
	for (int i = 0; i < precision; i++) {
 26a:	0f 5f       	subi	r16, 0xFF	; 255
 26c:	1f 4f       	sbci	r17, 0xFF	; 255
		remainder *= 10;
		int digit = (int)remainder;
		buffer[index++] = digit + '0';
 26e:	e6 01       	movw	r28, r12

	// Append the decimal point
	buffer[index++] = '.';

	// Convert the fractional part to string
	for (int i = 0; i < precision; i++) {
 270:	0a 15       	cp	r16, r10
 272:	1b 05       	cpc	r17, r11
 274:	bc f2       	brlt	.-82     	; 0x224 <float_to_string+0xb8>
		buffer[index++] = digit + '0';
		remainder -= digit;
	}

	// Null-terminate the string
	buffer[index] = '\0';
 276:	ce 0d       	add	r28, r14
 278:	df 1d       	adc	r29, r15
 27a:	18 82       	st	Y, r1
}
 27c:	df 91       	pop	r29
 27e:	cf 91       	pop	r28
 280:	1f 91       	pop	r17
 282:	0f 91       	pop	r16
 284:	ff 90       	pop	r15
 286:	ef 90       	pop	r14
 288:	df 90       	pop	r13
 28a:	cf 90       	pop	r12
 28c:	bf 90       	pop	r11
 28e:	af 90       	pop	r10
 290:	7f 90       	pop	r7
 292:	6f 90       	pop	r6
 294:	5f 90       	pop	r5
 296:	4f 90       	pop	r4
 298:	08 95       	ret

0000029a <getVoltage>:


void getVoltage()
{
 29a:	cf 92       	push	r12
 29c:	df 92       	push	r13
 29e:	ef 92       	push	r14
 2a0:	ff 92       	push	r15
 2a2:	0f 93       	push	r16
 2a4:	1f 93       	push	r17
 2a6:	cf 93       	push	r28
 2a8:	df 93       	push	r29
 2aa:	cd b7       	in	r28, 0x3d	; 61
 2ac:	de b7       	in	r29, 0x3e	; 62
 2ae:	64 97       	sbiw	r28, 0x14	; 20
 2b0:	0f b6       	in	r0, 0x3f	; 63
 2b2:	f8 94       	cli
 2b4:	de bf       	out	0x3e, r29	; 62
 2b6:	0f be       	out	0x3f, r0	; 63
 2b8:	cd bf       	out	0x3d, r28	; 61
	ADCSRA |= (1 << ADSC)|(1<< ADIE); // Start adc interrupts and adc 
 2ba:	0f 2e       	mov	r0, r31
 2bc:	fa e7       	ldi	r31, 0x7A	; 122
 2be:	ef 2e       	mov	r14, r31
 2c0:	f1 2c       	mov	r15, r1
 2c2:	f0 2d       	mov	r31, r0
 2c4:	f7 01       	movw	r30, r14
 2c6:	80 81       	ld	r24, Z
 2c8:	88 64       	ori	r24, 0x48	; 72
 2ca:	80 83       	st	Z, r24
	char msg[10];
	char msg3[10];
	
	float resultf    = (float)(result/1024.0)*100;
 2cc:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <__data_end>
 2d0:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <__data_end+0x1>
 2d4:	80 e0       	ldi	r24, 0x00	; 0
 2d6:	90 e0       	ldi	r25, 0x00	; 0
 2d8:	0e 94 95 02 	call	0x52a	; 0x52a <__floatunsisf>
 2dc:	20 e0       	ldi	r18, 0x00	; 0
 2de:	30 e0       	ldi	r19, 0x00	; 0
 2e0:	40 e8       	ldi	r20, 0x80	; 128
 2e2:	5a e3       	ldi	r21, 0x3A	; 58
 2e4:	0e 94 23 03 	call	0x646	; 0x646 <__mulsf3>
 2e8:	20 e0       	ldi	r18, 0x00	; 0
 2ea:	30 e0       	ldi	r19, 0x00	; 0
 2ec:	48 ec       	ldi	r20, 0xC8	; 200
 2ee:	52 e4       	ldi	r21, 0x42	; 66
 2f0:	0e 94 23 03 	call	0x646	; 0x646 <__mulsf3>
	uint8_t resultInt = (uint8_t)resultf;
 2f4:	0e 94 66 02 	call	0x4cc	; 0x4cc <__fixunssfsi>
 2f8:	d6 2e       	mov	r13, r22
	
	
	float_to_string((result*5.0)/1024.0, msg, 3);
 2fa:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <__data_end>
 2fe:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <__data_end+0x1>
 302:	80 e0       	ldi	r24, 0x00	; 0
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	0e 94 95 02 	call	0x52a	; 0x52a <__floatunsisf>
 30a:	20 e0       	ldi	r18, 0x00	; 0
 30c:	30 e0       	ldi	r19, 0x00	; 0
 30e:	40 ea       	ldi	r20, 0xA0	; 160
 310:	50 e4       	ldi	r21, 0x40	; 64
 312:	0e 94 23 03 	call	0x646	; 0x646 <__mulsf3>
 316:	20 e0       	ldi	r18, 0x00	; 0
 318:	30 e0       	ldi	r19, 0x00	; 0
 31a:	40 e8       	ldi	r20, 0x80	; 128
 31c:	5a e3       	ldi	r21, 0x3A	; 58
 31e:	0e 94 23 03 	call	0x646	; 0x646 <__mulsf3>
 322:	23 e0       	ldi	r18, 0x03	; 3
 324:	30 e0       	ldi	r19, 0x00	; 0
 326:	8e 01       	movw	r16, r28
 328:	0f 5f       	subi	r16, 0xFF	; 255
 32a:	1f 4f       	sbci	r17, 0xFF	; 255
 32c:	a8 01       	movw	r20, r16
 32e:	0e 94 b6 00 	call	0x16c	; 0x16c <float_to_string>
	sprintf(msg3, "%d", (uint8_t)resultInt);
 332:	1f 92       	push	r1
 334:	df 92       	push	r13
 336:	80 e0       	ldi	r24, 0x00	; 0
 338:	91 e0       	ldi	r25, 0x01	; 1
 33a:	9f 93       	push	r25
 33c:	8f 93       	push	r24
 33e:	6e 01       	movw	r12, r28
 340:	fb e0       	ldi	r31, 0x0B	; 11
 342:	cf 0e       	add	r12, r31
 344:	d1 1c       	adc	r13, r1
 346:	df 92       	push	r13
 348:	cf 92       	push	r12
 34a:	0e 94 c3 03 	call	0x786	; 0x786 <sprintf>
	strcat(msg," V ");
 34e:	f8 01       	movw	r30, r16
 350:	01 90       	ld	r0, Z+
 352:	00 20       	and	r0, r0
 354:	e9 f7       	brne	.-6      	; 0x350 <getVoltage+0xb6>
 356:	31 97       	sbiw	r30, 0x01	; 1
 358:	80 e2       	ldi	r24, 0x20	; 32
 35a:	96 e5       	ldi	r25, 0x56	; 86
 35c:	91 83       	std	Z+1, r25	; 0x01
 35e:	80 83       	st	Z, r24
 360:	80 e2       	ldi	r24, 0x20	; 32
 362:	90 e0       	ldi	r25, 0x00	; 0
 364:	93 83       	std	Z+3, r25	; 0x03
 366:	82 83       	std	Z+2, r24	; 0x02
	strcat(msg, msg3);
 368:	b6 01       	movw	r22, r12
 36a:	c8 01       	movw	r24, r16
 36c:	0e 94 b8 03 	call	0x770	; 0x770 <strcat>
	strcat(msg, "%");
 370:	f8 01       	movw	r30, r16
 372:	01 90       	ld	r0, Z+
 374:	00 20       	and	r0, r0
 376:	e9 f7       	brne	.-6      	; 0x372 <getVoltage+0xd8>
 378:	31 97       	sbiw	r30, 0x01	; 1
 37a:	85 e2       	ldi	r24, 0x25	; 37
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	91 83       	std	Z+1, r25	; 0x01
 380:	80 83       	st	Z, r24
	displayVoltageLcd(msg);
 382:	c8 01       	movw	r24, r16
 384:	0e 94 93 00 	call	0x126	; 0x126 <displayVoltageLcd>
 388:	2f ef       	ldi	r18, 0xFF	; 255
 38a:	81 ee       	ldi	r24, 0xE1	; 225
 38c:	94 e0       	ldi	r25, 0x04	; 4
 38e:	21 50       	subi	r18, 0x01	; 1
 390:	80 40       	sbci	r24, 0x00	; 0
 392:	90 40       	sbci	r25, 0x00	; 0
 394:	e1 f7       	brne	.-8      	; 0x38e <getVoltage+0xf4>
 396:	00 c0       	rjmp	.+0      	; 0x398 <getVoltage+0xfe>
 398:	00 00       	nop
	_delay_ms(100);						 // Intentional Delay
	clearScreen();
 39a:	0e 94 75 00 	call	0xea	; 0xea <clearScreen>
	//usartTransmitString(msg);
	ADCSRA &= ~((1 << ADSC)|(1<< ADIE)); // Stop adc interrupts and adc	
 39e:	f7 01       	movw	r30, r14
 3a0:	80 81       	ld	r24, Z
 3a2:	87 7b       	andi	r24, 0xB7	; 183
 3a4:	80 83       	st	Z, r24
}
 3a6:	0f 90       	pop	r0
 3a8:	0f 90       	pop	r0
 3aa:	0f 90       	pop	r0
 3ac:	0f 90       	pop	r0
 3ae:	0f 90       	pop	r0
 3b0:	0f 90       	pop	r0
 3b2:	64 96       	adiw	r28, 0x14	; 20
 3b4:	0f b6       	in	r0, 0x3f	; 63
 3b6:	f8 94       	cli
 3b8:	de bf       	out	0x3e, r29	; 62
 3ba:	0f be       	out	0x3f, r0	; 63
 3bc:	cd bf       	out	0x3d, r28	; 61
 3be:	df 91       	pop	r29
 3c0:	cf 91       	pop	r28
 3c2:	1f 91       	pop	r17
 3c4:	0f 91       	pop	r16
 3c6:	ff 90       	pop	r15
 3c8:	ef 90       	pop	r14
 3ca:	df 90       	pop	r13
 3cc:	cf 90       	pop	r12
 3ce:	08 95       	ret

000003d0 <main>:
int main(void)
{

	// Setup usart
	//USART_Init(MYUBRR);
	adcSetup();
 3d0:	0e 94 53 00 	call	0xa6	; 0xa6 <adcSetup>
	sei();
 3d4:	78 94       	sei
	
    while (1) 
    {
		float resultf     = (float)(result/1024.0)*100;
 3d6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 3da:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
		uint8_t resultInt = (uint8_t)resultf;
		getVoltage();
 3de:	0e 94 4d 01 	call	0x29a	; 0x29a <getVoltage>
 3e2:	f9 cf       	rjmp	.-14     	; 0x3d6 <main+0x6>

000003e4 <__subsf3>:
 3e4:	50 58       	subi	r21, 0x80	; 128

000003e6 <__addsf3>:
 3e6:	bb 27       	eor	r27, r27
 3e8:	aa 27       	eor	r26, r26
 3ea:	0e 94 0a 02 	call	0x414	; 0x414 <__addsf3x>
 3ee:	0c 94 e9 02 	jmp	0x5d2	; 0x5d2 <__fp_round>
 3f2:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__fp_pscA>
 3f6:	38 f0       	brcs	.+14     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3f8:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <__fp_pscB>
 3fc:	20 f0       	brcs	.+8      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3fe:	39 f4       	brne	.+14     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 400:	9f 3f       	cpi	r25, 0xFF	; 255
 402:	19 f4       	brne	.+6      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 404:	26 f4       	brtc	.+8      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 406:	0c 94 d8 02 	jmp	0x5b0	; 0x5b0 <__fp_nan>
 40a:	0e f4       	brtc	.+2      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 40c:	e0 95       	com	r30
 40e:	e7 fb       	bst	r30, 7
 410:	0c 94 d2 02 	jmp	0x5a4	; 0x5a4 <__fp_inf>

00000414 <__addsf3x>:
 414:	e9 2f       	mov	r30, r25
 416:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <__fp_split3>
 41a:	58 f3       	brcs	.-42     	; 0x3f2 <__addsf3+0xc>
 41c:	ba 17       	cp	r27, r26
 41e:	62 07       	cpc	r22, r18
 420:	73 07       	cpc	r23, r19
 422:	84 07       	cpc	r24, r20
 424:	95 07       	cpc	r25, r21
 426:	20 f0       	brcs	.+8      	; 0x430 <__addsf3x+0x1c>
 428:	79 f4       	brne	.+30     	; 0x448 <__addsf3x+0x34>
 42a:	a6 f5       	brtc	.+104    	; 0x494 <__addsf3x+0x80>
 42c:	0c 94 1c 03 	jmp	0x638	; 0x638 <__fp_zero>
 430:	0e f4       	brtc	.+2      	; 0x434 <__addsf3x+0x20>
 432:	e0 95       	com	r30
 434:	0b 2e       	mov	r0, r27
 436:	ba 2f       	mov	r27, r26
 438:	a0 2d       	mov	r26, r0
 43a:	0b 01       	movw	r0, r22
 43c:	b9 01       	movw	r22, r18
 43e:	90 01       	movw	r18, r0
 440:	0c 01       	movw	r0, r24
 442:	ca 01       	movw	r24, r20
 444:	a0 01       	movw	r20, r0
 446:	11 24       	eor	r1, r1
 448:	ff 27       	eor	r31, r31
 44a:	59 1b       	sub	r21, r25
 44c:	99 f0       	breq	.+38     	; 0x474 <__addsf3x+0x60>
 44e:	59 3f       	cpi	r21, 0xF9	; 249
 450:	50 f4       	brcc	.+20     	; 0x466 <__addsf3x+0x52>
 452:	50 3e       	cpi	r21, 0xE0	; 224
 454:	68 f1       	brcs	.+90     	; 0x4b0 <__addsf3x+0x9c>
 456:	1a 16       	cp	r1, r26
 458:	f0 40       	sbci	r31, 0x00	; 0
 45a:	a2 2f       	mov	r26, r18
 45c:	23 2f       	mov	r18, r19
 45e:	34 2f       	mov	r19, r20
 460:	44 27       	eor	r20, r20
 462:	58 5f       	subi	r21, 0xF8	; 248
 464:	f3 cf       	rjmp	.-26     	; 0x44c <__addsf3x+0x38>
 466:	46 95       	lsr	r20
 468:	37 95       	ror	r19
 46a:	27 95       	ror	r18
 46c:	a7 95       	ror	r26
 46e:	f0 40       	sbci	r31, 0x00	; 0
 470:	53 95       	inc	r21
 472:	c9 f7       	brne	.-14     	; 0x466 <__addsf3x+0x52>
 474:	7e f4       	brtc	.+30     	; 0x494 <__addsf3x+0x80>
 476:	1f 16       	cp	r1, r31
 478:	ba 0b       	sbc	r27, r26
 47a:	62 0b       	sbc	r22, r18
 47c:	73 0b       	sbc	r23, r19
 47e:	84 0b       	sbc	r24, r20
 480:	ba f0       	brmi	.+46     	; 0x4b0 <__addsf3x+0x9c>
 482:	91 50       	subi	r25, 0x01	; 1
 484:	a1 f0       	breq	.+40     	; 0x4ae <__addsf3x+0x9a>
 486:	ff 0f       	add	r31, r31
 488:	bb 1f       	adc	r27, r27
 48a:	66 1f       	adc	r22, r22
 48c:	77 1f       	adc	r23, r23
 48e:	88 1f       	adc	r24, r24
 490:	c2 f7       	brpl	.-16     	; 0x482 <__addsf3x+0x6e>
 492:	0e c0       	rjmp	.+28     	; 0x4b0 <__addsf3x+0x9c>
 494:	ba 0f       	add	r27, r26
 496:	62 1f       	adc	r22, r18
 498:	73 1f       	adc	r23, r19
 49a:	84 1f       	adc	r24, r20
 49c:	48 f4       	brcc	.+18     	; 0x4b0 <__addsf3x+0x9c>
 49e:	87 95       	ror	r24
 4a0:	77 95       	ror	r23
 4a2:	67 95       	ror	r22
 4a4:	b7 95       	ror	r27
 4a6:	f7 95       	ror	r31
 4a8:	9e 3f       	cpi	r25, 0xFE	; 254
 4aa:	08 f0       	brcs	.+2      	; 0x4ae <__addsf3x+0x9a>
 4ac:	b0 cf       	rjmp	.-160    	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 4ae:	93 95       	inc	r25
 4b0:	88 0f       	add	r24, r24
 4b2:	08 f0       	brcs	.+2      	; 0x4b6 <__addsf3x+0xa2>
 4b4:	99 27       	eor	r25, r25
 4b6:	ee 0f       	add	r30, r30
 4b8:	97 95       	ror	r25
 4ba:	87 95       	ror	r24
 4bc:	08 95       	ret

000004be <__fixsfsi>:
 4be:	0e 94 66 02 	call	0x4cc	; 0x4cc <__fixunssfsi>
 4c2:	68 94       	set
 4c4:	b1 11       	cpse	r27, r1
 4c6:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__fp_szero>
 4ca:	08 95       	ret

000004cc <__fixunssfsi>:
 4cc:	0e 94 02 03 	call	0x604	; 0x604 <__fp_splitA>
 4d0:	88 f0       	brcs	.+34     	; 0x4f4 <__fixunssfsi+0x28>
 4d2:	9f 57       	subi	r25, 0x7F	; 127
 4d4:	98 f0       	brcs	.+38     	; 0x4fc <__fixunssfsi+0x30>
 4d6:	b9 2f       	mov	r27, r25
 4d8:	99 27       	eor	r25, r25
 4da:	b7 51       	subi	r27, 0x17	; 23
 4dc:	b0 f0       	brcs	.+44     	; 0x50a <__fixunssfsi+0x3e>
 4de:	e1 f0       	breq	.+56     	; 0x518 <__fixunssfsi+0x4c>
 4e0:	66 0f       	add	r22, r22
 4e2:	77 1f       	adc	r23, r23
 4e4:	88 1f       	adc	r24, r24
 4e6:	99 1f       	adc	r25, r25
 4e8:	1a f0       	brmi	.+6      	; 0x4f0 <__fixunssfsi+0x24>
 4ea:	ba 95       	dec	r27
 4ec:	c9 f7       	brne	.-14     	; 0x4e0 <__fixunssfsi+0x14>
 4ee:	14 c0       	rjmp	.+40     	; 0x518 <__fixunssfsi+0x4c>
 4f0:	b1 30       	cpi	r27, 0x01	; 1
 4f2:	91 f0       	breq	.+36     	; 0x518 <__fixunssfsi+0x4c>
 4f4:	0e 94 1c 03 	call	0x638	; 0x638 <__fp_zero>
 4f8:	b1 e0       	ldi	r27, 0x01	; 1
 4fa:	08 95       	ret
 4fc:	0c 94 1c 03 	jmp	0x638	; 0x638 <__fp_zero>
 500:	67 2f       	mov	r22, r23
 502:	78 2f       	mov	r23, r24
 504:	88 27       	eor	r24, r24
 506:	b8 5f       	subi	r27, 0xF8	; 248
 508:	39 f0       	breq	.+14     	; 0x518 <__fixunssfsi+0x4c>
 50a:	b9 3f       	cpi	r27, 0xF9	; 249
 50c:	cc f3       	brlt	.-14     	; 0x500 <__fixunssfsi+0x34>
 50e:	86 95       	lsr	r24
 510:	77 95       	ror	r23
 512:	67 95       	ror	r22
 514:	b3 95       	inc	r27
 516:	d9 f7       	brne	.-10     	; 0x50e <__fixunssfsi+0x42>
 518:	3e f4       	brtc	.+14     	; 0x528 <__fixunssfsi+0x5c>
 51a:	90 95       	com	r25
 51c:	80 95       	com	r24
 51e:	70 95       	com	r23
 520:	61 95       	neg	r22
 522:	7f 4f       	sbci	r23, 0xFF	; 255
 524:	8f 4f       	sbci	r24, 0xFF	; 255
 526:	9f 4f       	sbci	r25, 0xFF	; 255
 528:	08 95       	ret

0000052a <__floatunsisf>:
 52a:	e8 94       	clt
 52c:	09 c0       	rjmp	.+18     	; 0x540 <__floatsisf+0x12>

0000052e <__floatsisf>:
 52e:	97 fb       	bst	r25, 7
 530:	3e f4       	brtc	.+14     	; 0x540 <__floatsisf+0x12>
 532:	90 95       	com	r25
 534:	80 95       	com	r24
 536:	70 95       	com	r23
 538:	61 95       	neg	r22
 53a:	7f 4f       	sbci	r23, 0xFF	; 255
 53c:	8f 4f       	sbci	r24, 0xFF	; 255
 53e:	9f 4f       	sbci	r25, 0xFF	; 255
 540:	99 23       	and	r25, r25
 542:	a9 f0       	breq	.+42     	; 0x56e <__floatsisf+0x40>
 544:	f9 2f       	mov	r31, r25
 546:	96 e9       	ldi	r25, 0x96	; 150
 548:	bb 27       	eor	r27, r27
 54a:	93 95       	inc	r25
 54c:	f6 95       	lsr	r31
 54e:	87 95       	ror	r24
 550:	77 95       	ror	r23
 552:	67 95       	ror	r22
 554:	b7 95       	ror	r27
 556:	f1 11       	cpse	r31, r1
 558:	f8 cf       	rjmp	.-16     	; 0x54a <__floatsisf+0x1c>
 55a:	fa f4       	brpl	.+62     	; 0x59a <__floatsisf+0x6c>
 55c:	bb 0f       	add	r27, r27
 55e:	11 f4       	brne	.+4      	; 0x564 <__floatsisf+0x36>
 560:	60 ff       	sbrs	r22, 0
 562:	1b c0       	rjmp	.+54     	; 0x59a <__floatsisf+0x6c>
 564:	6f 5f       	subi	r22, 0xFF	; 255
 566:	7f 4f       	sbci	r23, 0xFF	; 255
 568:	8f 4f       	sbci	r24, 0xFF	; 255
 56a:	9f 4f       	sbci	r25, 0xFF	; 255
 56c:	16 c0       	rjmp	.+44     	; 0x59a <__floatsisf+0x6c>
 56e:	88 23       	and	r24, r24
 570:	11 f0       	breq	.+4      	; 0x576 <__floatsisf+0x48>
 572:	96 e9       	ldi	r25, 0x96	; 150
 574:	11 c0       	rjmp	.+34     	; 0x598 <__floatsisf+0x6a>
 576:	77 23       	and	r23, r23
 578:	21 f0       	breq	.+8      	; 0x582 <__floatsisf+0x54>
 57a:	9e e8       	ldi	r25, 0x8E	; 142
 57c:	87 2f       	mov	r24, r23
 57e:	76 2f       	mov	r23, r22
 580:	05 c0       	rjmp	.+10     	; 0x58c <__floatsisf+0x5e>
 582:	66 23       	and	r22, r22
 584:	71 f0       	breq	.+28     	; 0x5a2 <__floatsisf+0x74>
 586:	96 e8       	ldi	r25, 0x86	; 134
 588:	86 2f       	mov	r24, r22
 58a:	70 e0       	ldi	r23, 0x00	; 0
 58c:	60 e0       	ldi	r22, 0x00	; 0
 58e:	2a f0       	brmi	.+10     	; 0x59a <__floatsisf+0x6c>
 590:	9a 95       	dec	r25
 592:	66 0f       	add	r22, r22
 594:	77 1f       	adc	r23, r23
 596:	88 1f       	adc	r24, r24
 598:	da f7       	brpl	.-10     	; 0x590 <__floatsisf+0x62>
 59a:	88 0f       	add	r24, r24
 59c:	96 95       	lsr	r25
 59e:	87 95       	ror	r24
 5a0:	97 f9       	bld	r25, 7
 5a2:	08 95       	ret

000005a4 <__fp_inf>:
 5a4:	97 f9       	bld	r25, 7
 5a6:	9f 67       	ori	r25, 0x7F	; 127
 5a8:	80 e8       	ldi	r24, 0x80	; 128
 5aa:	70 e0       	ldi	r23, 0x00	; 0
 5ac:	60 e0       	ldi	r22, 0x00	; 0
 5ae:	08 95       	ret

000005b0 <__fp_nan>:
 5b0:	9f ef       	ldi	r25, 0xFF	; 255
 5b2:	80 ec       	ldi	r24, 0xC0	; 192
 5b4:	08 95       	ret

000005b6 <__fp_pscA>:
 5b6:	00 24       	eor	r0, r0
 5b8:	0a 94       	dec	r0
 5ba:	16 16       	cp	r1, r22
 5bc:	17 06       	cpc	r1, r23
 5be:	18 06       	cpc	r1, r24
 5c0:	09 06       	cpc	r0, r25
 5c2:	08 95       	ret

000005c4 <__fp_pscB>:
 5c4:	00 24       	eor	r0, r0
 5c6:	0a 94       	dec	r0
 5c8:	12 16       	cp	r1, r18
 5ca:	13 06       	cpc	r1, r19
 5cc:	14 06       	cpc	r1, r20
 5ce:	05 06       	cpc	r0, r21
 5d0:	08 95       	ret

000005d2 <__fp_round>:
 5d2:	09 2e       	mov	r0, r25
 5d4:	03 94       	inc	r0
 5d6:	00 0c       	add	r0, r0
 5d8:	11 f4       	brne	.+4      	; 0x5de <__fp_round+0xc>
 5da:	88 23       	and	r24, r24
 5dc:	52 f0       	brmi	.+20     	; 0x5f2 <__fp_round+0x20>
 5de:	bb 0f       	add	r27, r27
 5e0:	40 f4       	brcc	.+16     	; 0x5f2 <__fp_round+0x20>
 5e2:	bf 2b       	or	r27, r31
 5e4:	11 f4       	brne	.+4      	; 0x5ea <__fp_round+0x18>
 5e6:	60 ff       	sbrs	r22, 0
 5e8:	04 c0       	rjmp	.+8      	; 0x5f2 <__fp_round+0x20>
 5ea:	6f 5f       	subi	r22, 0xFF	; 255
 5ec:	7f 4f       	sbci	r23, 0xFF	; 255
 5ee:	8f 4f       	sbci	r24, 0xFF	; 255
 5f0:	9f 4f       	sbci	r25, 0xFF	; 255
 5f2:	08 95       	ret

000005f4 <__fp_split3>:
 5f4:	57 fd       	sbrc	r21, 7
 5f6:	90 58       	subi	r25, 0x80	; 128
 5f8:	44 0f       	add	r20, r20
 5fa:	55 1f       	adc	r21, r21
 5fc:	59 f0       	breq	.+22     	; 0x614 <__fp_splitA+0x10>
 5fe:	5f 3f       	cpi	r21, 0xFF	; 255
 600:	71 f0       	breq	.+28     	; 0x61e <__fp_splitA+0x1a>
 602:	47 95       	ror	r20

00000604 <__fp_splitA>:
 604:	88 0f       	add	r24, r24
 606:	97 fb       	bst	r25, 7
 608:	99 1f       	adc	r25, r25
 60a:	61 f0       	breq	.+24     	; 0x624 <__fp_splitA+0x20>
 60c:	9f 3f       	cpi	r25, 0xFF	; 255
 60e:	79 f0       	breq	.+30     	; 0x62e <__fp_splitA+0x2a>
 610:	87 95       	ror	r24
 612:	08 95       	ret
 614:	12 16       	cp	r1, r18
 616:	13 06       	cpc	r1, r19
 618:	14 06       	cpc	r1, r20
 61a:	55 1f       	adc	r21, r21
 61c:	f2 cf       	rjmp	.-28     	; 0x602 <__fp_split3+0xe>
 61e:	46 95       	lsr	r20
 620:	f1 df       	rcall	.-30     	; 0x604 <__fp_splitA>
 622:	08 c0       	rjmp	.+16     	; 0x634 <__fp_splitA+0x30>
 624:	16 16       	cp	r1, r22
 626:	17 06       	cpc	r1, r23
 628:	18 06       	cpc	r1, r24
 62a:	99 1f       	adc	r25, r25
 62c:	f1 cf       	rjmp	.-30     	; 0x610 <__fp_splitA+0xc>
 62e:	86 95       	lsr	r24
 630:	71 05       	cpc	r23, r1
 632:	61 05       	cpc	r22, r1
 634:	08 94       	sec
 636:	08 95       	ret

00000638 <__fp_zero>:
 638:	e8 94       	clt

0000063a <__fp_szero>:
 63a:	bb 27       	eor	r27, r27
 63c:	66 27       	eor	r22, r22
 63e:	77 27       	eor	r23, r23
 640:	cb 01       	movw	r24, r22
 642:	97 f9       	bld	r25, 7
 644:	08 95       	ret

00000646 <__mulsf3>:
 646:	0e 94 36 03 	call	0x66c	; 0x66c <__mulsf3x>
 64a:	0c 94 e9 02 	jmp	0x5d2	; 0x5d2 <__fp_round>
 64e:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__fp_pscA>
 652:	38 f0       	brcs	.+14     	; 0x662 <__mulsf3+0x1c>
 654:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <__fp_pscB>
 658:	20 f0       	brcs	.+8      	; 0x662 <__mulsf3+0x1c>
 65a:	95 23       	and	r25, r21
 65c:	11 f0       	breq	.+4      	; 0x662 <__mulsf3+0x1c>
 65e:	0c 94 d2 02 	jmp	0x5a4	; 0x5a4 <__fp_inf>
 662:	0c 94 d8 02 	jmp	0x5b0	; 0x5b0 <__fp_nan>
 666:	11 24       	eor	r1, r1
 668:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__fp_szero>

0000066c <__mulsf3x>:
 66c:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <__fp_split3>
 670:	70 f3       	brcs	.-36     	; 0x64e <__mulsf3+0x8>

00000672 <__mulsf3_pse>:
 672:	95 9f       	mul	r25, r21
 674:	c1 f3       	breq	.-16     	; 0x666 <__mulsf3+0x20>
 676:	95 0f       	add	r25, r21
 678:	50 e0       	ldi	r21, 0x00	; 0
 67a:	55 1f       	adc	r21, r21
 67c:	62 9f       	mul	r22, r18
 67e:	f0 01       	movw	r30, r0
 680:	72 9f       	mul	r23, r18
 682:	bb 27       	eor	r27, r27
 684:	f0 0d       	add	r31, r0
 686:	b1 1d       	adc	r27, r1
 688:	63 9f       	mul	r22, r19
 68a:	aa 27       	eor	r26, r26
 68c:	f0 0d       	add	r31, r0
 68e:	b1 1d       	adc	r27, r1
 690:	aa 1f       	adc	r26, r26
 692:	64 9f       	mul	r22, r20
 694:	66 27       	eor	r22, r22
 696:	b0 0d       	add	r27, r0
 698:	a1 1d       	adc	r26, r1
 69a:	66 1f       	adc	r22, r22
 69c:	82 9f       	mul	r24, r18
 69e:	22 27       	eor	r18, r18
 6a0:	b0 0d       	add	r27, r0
 6a2:	a1 1d       	adc	r26, r1
 6a4:	62 1f       	adc	r22, r18
 6a6:	73 9f       	mul	r23, r19
 6a8:	b0 0d       	add	r27, r0
 6aa:	a1 1d       	adc	r26, r1
 6ac:	62 1f       	adc	r22, r18
 6ae:	83 9f       	mul	r24, r19
 6b0:	a0 0d       	add	r26, r0
 6b2:	61 1d       	adc	r22, r1
 6b4:	22 1f       	adc	r18, r18
 6b6:	74 9f       	mul	r23, r20
 6b8:	33 27       	eor	r19, r19
 6ba:	a0 0d       	add	r26, r0
 6bc:	61 1d       	adc	r22, r1
 6be:	23 1f       	adc	r18, r19
 6c0:	84 9f       	mul	r24, r20
 6c2:	60 0d       	add	r22, r0
 6c4:	21 1d       	adc	r18, r1
 6c6:	82 2f       	mov	r24, r18
 6c8:	76 2f       	mov	r23, r22
 6ca:	6a 2f       	mov	r22, r26
 6cc:	11 24       	eor	r1, r1
 6ce:	9f 57       	subi	r25, 0x7F	; 127
 6d0:	50 40       	sbci	r21, 0x00	; 0
 6d2:	9a f0       	brmi	.+38     	; 0x6fa <__mulsf3_pse+0x88>
 6d4:	f1 f0       	breq	.+60     	; 0x712 <__mulsf3_pse+0xa0>
 6d6:	88 23       	and	r24, r24
 6d8:	4a f0       	brmi	.+18     	; 0x6ec <__mulsf3_pse+0x7a>
 6da:	ee 0f       	add	r30, r30
 6dc:	ff 1f       	adc	r31, r31
 6de:	bb 1f       	adc	r27, r27
 6e0:	66 1f       	adc	r22, r22
 6e2:	77 1f       	adc	r23, r23
 6e4:	88 1f       	adc	r24, r24
 6e6:	91 50       	subi	r25, 0x01	; 1
 6e8:	50 40       	sbci	r21, 0x00	; 0
 6ea:	a9 f7       	brne	.-22     	; 0x6d6 <__mulsf3_pse+0x64>
 6ec:	9e 3f       	cpi	r25, 0xFE	; 254
 6ee:	51 05       	cpc	r21, r1
 6f0:	80 f0       	brcs	.+32     	; 0x712 <__mulsf3_pse+0xa0>
 6f2:	0c 94 d2 02 	jmp	0x5a4	; 0x5a4 <__fp_inf>
 6f6:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__fp_szero>
 6fa:	5f 3f       	cpi	r21, 0xFF	; 255
 6fc:	e4 f3       	brlt	.-8      	; 0x6f6 <__mulsf3_pse+0x84>
 6fe:	98 3e       	cpi	r25, 0xE8	; 232
 700:	d4 f3       	brlt	.-12     	; 0x6f6 <__mulsf3_pse+0x84>
 702:	86 95       	lsr	r24
 704:	77 95       	ror	r23
 706:	67 95       	ror	r22
 708:	b7 95       	ror	r27
 70a:	f7 95       	ror	r31
 70c:	e7 95       	ror	r30
 70e:	9f 5f       	subi	r25, 0xFF	; 255
 710:	c1 f7       	brne	.-16     	; 0x702 <__mulsf3_pse+0x90>
 712:	fe 2b       	or	r31, r30
 714:	88 0f       	add	r24, r24
 716:	91 1d       	adc	r25, r1
 718:	96 95       	lsr	r25
 71a:	87 95       	ror	r24
 71c:	97 f9       	bld	r25, 7
 71e:	08 95       	ret

00000720 <__divmodhi4>:
 720:	97 fb       	bst	r25, 7
 722:	07 2e       	mov	r0, r23
 724:	16 f4       	brtc	.+4      	; 0x72a <__divmodhi4+0xa>
 726:	00 94       	com	r0
 728:	07 d0       	rcall	.+14     	; 0x738 <__divmodhi4_neg1>
 72a:	77 fd       	sbrc	r23, 7
 72c:	09 d0       	rcall	.+18     	; 0x740 <__divmodhi4_neg2>
 72e:	0e 94 a4 03 	call	0x748	; 0x748 <__udivmodhi4>
 732:	07 fc       	sbrc	r0, 7
 734:	05 d0       	rcall	.+10     	; 0x740 <__divmodhi4_neg2>
 736:	3e f4       	brtc	.+14     	; 0x746 <__divmodhi4_exit>

00000738 <__divmodhi4_neg1>:
 738:	90 95       	com	r25
 73a:	81 95       	neg	r24
 73c:	9f 4f       	sbci	r25, 0xFF	; 255
 73e:	08 95       	ret

00000740 <__divmodhi4_neg2>:
 740:	70 95       	com	r23
 742:	61 95       	neg	r22
 744:	7f 4f       	sbci	r23, 0xFF	; 255

00000746 <__divmodhi4_exit>:
 746:	08 95       	ret

00000748 <__udivmodhi4>:
 748:	aa 1b       	sub	r26, r26
 74a:	bb 1b       	sub	r27, r27
 74c:	51 e1       	ldi	r21, 0x11	; 17
 74e:	07 c0       	rjmp	.+14     	; 0x75e <__udivmodhi4_ep>

00000750 <__udivmodhi4_loop>:
 750:	aa 1f       	adc	r26, r26
 752:	bb 1f       	adc	r27, r27
 754:	a6 17       	cp	r26, r22
 756:	b7 07       	cpc	r27, r23
 758:	10 f0       	brcs	.+4      	; 0x75e <__udivmodhi4_ep>
 75a:	a6 1b       	sub	r26, r22
 75c:	b7 0b       	sbc	r27, r23

0000075e <__udivmodhi4_ep>:
 75e:	88 1f       	adc	r24, r24
 760:	99 1f       	adc	r25, r25
 762:	5a 95       	dec	r21
 764:	a9 f7       	brne	.-22     	; 0x750 <__udivmodhi4_loop>
 766:	80 95       	com	r24
 768:	90 95       	com	r25
 76a:	bc 01       	movw	r22, r24
 76c:	cd 01       	movw	r24, r26
 76e:	08 95       	ret

00000770 <strcat>:
 770:	fb 01       	movw	r30, r22
 772:	dc 01       	movw	r26, r24
 774:	0d 90       	ld	r0, X+
 776:	00 20       	and	r0, r0
 778:	e9 f7       	brne	.-6      	; 0x774 <strcat+0x4>
 77a:	11 97       	sbiw	r26, 0x01	; 1
 77c:	01 90       	ld	r0, Z+
 77e:	0d 92       	st	X+, r0
 780:	00 20       	and	r0, r0
 782:	e1 f7       	brne	.-8      	; 0x77c <strcat+0xc>
 784:	08 95       	ret

00000786 <sprintf>:
 786:	ae e0       	ldi	r26, 0x0E	; 14
 788:	b0 e0       	ldi	r27, 0x00	; 0
 78a:	e9 ec       	ldi	r30, 0xC9	; 201
 78c:	f3 e0       	ldi	r31, 0x03	; 3
 78e:	0c 94 84 06 	jmp	0xd08	; 0xd08 <__prologue_saves__+0x1c>
 792:	0d 89       	ldd	r16, Y+21	; 0x15
 794:	1e 89       	ldd	r17, Y+22	; 0x16
 796:	86 e0       	ldi	r24, 0x06	; 6
 798:	8c 83       	std	Y+4, r24	; 0x04
 79a:	1a 83       	std	Y+2, r17	; 0x02
 79c:	09 83       	std	Y+1, r16	; 0x01
 79e:	8f ef       	ldi	r24, 0xFF	; 255
 7a0:	9f e7       	ldi	r25, 0x7F	; 127
 7a2:	9e 83       	std	Y+6, r25	; 0x06
 7a4:	8d 83       	std	Y+5, r24	; 0x05
 7a6:	ae 01       	movw	r20, r28
 7a8:	47 5e       	subi	r20, 0xE7	; 231
 7aa:	5f 4f       	sbci	r21, 0xFF	; 255
 7ac:	6f 89       	ldd	r22, Y+23	; 0x17
 7ae:	78 8d       	ldd	r23, Y+24	; 0x18
 7b0:	ce 01       	movw	r24, r28
 7b2:	01 96       	adiw	r24, 0x01	; 1
 7b4:	0e 94 e5 03 	call	0x7ca	; 0x7ca <vfprintf>
 7b8:	ef 81       	ldd	r30, Y+7	; 0x07
 7ba:	f8 85       	ldd	r31, Y+8	; 0x08
 7bc:	e0 0f       	add	r30, r16
 7be:	f1 1f       	adc	r31, r17
 7c0:	10 82       	st	Z, r1
 7c2:	2e 96       	adiw	r28, 0x0e	; 14
 7c4:	e4 e0       	ldi	r30, 0x04	; 4
 7c6:	0c 94 a0 06 	jmp	0xd40	; 0xd40 <__epilogue_restores__+0x1c>

000007ca <vfprintf>:
 7ca:	ab e0       	ldi	r26, 0x0B	; 11
 7cc:	b0 e0       	ldi	r27, 0x00	; 0
 7ce:	eb ee       	ldi	r30, 0xEB	; 235
 7d0:	f3 e0       	ldi	r31, 0x03	; 3
 7d2:	0c 94 76 06 	jmp	0xcec	; 0xcec <__prologue_saves__>
 7d6:	6c 01       	movw	r12, r24
 7d8:	7b 01       	movw	r14, r22
 7da:	8a 01       	movw	r16, r20
 7dc:	fc 01       	movw	r30, r24
 7de:	17 82       	std	Z+7, r1	; 0x07
 7e0:	16 82       	std	Z+6, r1	; 0x06
 7e2:	83 81       	ldd	r24, Z+3	; 0x03
 7e4:	81 ff       	sbrs	r24, 1
 7e6:	cc c1       	rjmp	.+920    	; 0xb80 <__stack+0x281>
 7e8:	ce 01       	movw	r24, r28
 7ea:	01 96       	adiw	r24, 0x01	; 1
 7ec:	3c 01       	movw	r6, r24
 7ee:	f6 01       	movw	r30, r12
 7f0:	93 81       	ldd	r25, Z+3	; 0x03
 7f2:	f7 01       	movw	r30, r14
 7f4:	93 fd       	sbrc	r25, 3
 7f6:	85 91       	lpm	r24, Z+
 7f8:	93 ff       	sbrs	r25, 3
 7fa:	81 91       	ld	r24, Z+
 7fc:	7f 01       	movw	r14, r30
 7fe:	88 23       	and	r24, r24
 800:	09 f4       	brne	.+2      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 802:	ba c1       	rjmp	.+884    	; 0xb78 <__stack+0x279>
 804:	85 32       	cpi	r24, 0x25	; 37
 806:	39 f4       	brne	.+14     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 808:	93 fd       	sbrc	r25, 3
 80a:	85 91       	lpm	r24, Z+
 80c:	93 ff       	sbrs	r25, 3
 80e:	81 91       	ld	r24, Z+
 810:	7f 01       	movw	r14, r30
 812:	85 32       	cpi	r24, 0x25	; 37
 814:	29 f4       	brne	.+10     	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 816:	b6 01       	movw	r22, r12
 818:	90 e0       	ldi	r25, 0x00	; 0
 81a:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <fputc>
 81e:	e7 cf       	rjmp	.-50     	; 0x7ee <vfprintf+0x24>
 820:	91 2c       	mov	r9, r1
 822:	21 2c       	mov	r2, r1
 824:	31 2c       	mov	r3, r1
 826:	ff e1       	ldi	r31, 0x1F	; 31
 828:	f3 15       	cp	r31, r3
 82a:	d8 f0       	brcs	.+54     	; 0x862 <__DATA_REGION_LENGTH__+0x62>
 82c:	8b 32       	cpi	r24, 0x2B	; 43
 82e:	79 f0       	breq	.+30     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 830:	38 f4       	brcc	.+14     	; 0x840 <__DATA_REGION_LENGTH__+0x40>
 832:	80 32       	cpi	r24, 0x20	; 32
 834:	79 f0       	breq	.+30     	; 0x854 <__DATA_REGION_LENGTH__+0x54>
 836:	83 32       	cpi	r24, 0x23	; 35
 838:	a1 f4       	brne	.+40     	; 0x862 <__DATA_REGION_LENGTH__+0x62>
 83a:	23 2d       	mov	r18, r3
 83c:	20 61       	ori	r18, 0x10	; 16
 83e:	1d c0       	rjmp	.+58     	; 0x87a <__DATA_REGION_LENGTH__+0x7a>
 840:	8d 32       	cpi	r24, 0x2D	; 45
 842:	61 f0       	breq	.+24     	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
 844:	80 33       	cpi	r24, 0x30	; 48
 846:	69 f4       	brne	.+26     	; 0x862 <__DATA_REGION_LENGTH__+0x62>
 848:	23 2d       	mov	r18, r3
 84a:	21 60       	ori	r18, 0x01	; 1
 84c:	16 c0       	rjmp	.+44     	; 0x87a <__DATA_REGION_LENGTH__+0x7a>
 84e:	83 2d       	mov	r24, r3
 850:	82 60       	ori	r24, 0x02	; 2
 852:	38 2e       	mov	r3, r24
 854:	e3 2d       	mov	r30, r3
 856:	e4 60       	ori	r30, 0x04	; 4
 858:	3e 2e       	mov	r3, r30
 85a:	2a c0       	rjmp	.+84     	; 0x8b0 <__DATA_REGION_LENGTH__+0xb0>
 85c:	f3 2d       	mov	r31, r3
 85e:	f8 60       	ori	r31, 0x08	; 8
 860:	1d c0       	rjmp	.+58     	; 0x89c <__DATA_REGION_LENGTH__+0x9c>
 862:	37 fc       	sbrc	r3, 7
 864:	2d c0       	rjmp	.+90     	; 0x8c0 <__DATA_REGION_LENGTH__+0xc0>
 866:	20 ed       	ldi	r18, 0xD0	; 208
 868:	28 0f       	add	r18, r24
 86a:	2a 30       	cpi	r18, 0x0A	; 10
 86c:	40 f0       	brcs	.+16     	; 0x87e <__DATA_REGION_LENGTH__+0x7e>
 86e:	8e 32       	cpi	r24, 0x2E	; 46
 870:	b9 f4       	brne	.+46     	; 0x8a0 <__DATA_REGION_LENGTH__+0xa0>
 872:	36 fc       	sbrc	r3, 6
 874:	81 c1       	rjmp	.+770    	; 0xb78 <__stack+0x279>
 876:	23 2d       	mov	r18, r3
 878:	20 64       	ori	r18, 0x40	; 64
 87a:	32 2e       	mov	r3, r18
 87c:	19 c0       	rjmp	.+50     	; 0x8b0 <__DATA_REGION_LENGTH__+0xb0>
 87e:	36 fe       	sbrs	r3, 6
 880:	06 c0       	rjmp	.+12     	; 0x88e <__DATA_REGION_LENGTH__+0x8e>
 882:	8a e0       	ldi	r24, 0x0A	; 10
 884:	98 9e       	mul	r9, r24
 886:	20 0d       	add	r18, r0
 888:	11 24       	eor	r1, r1
 88a:	92 2e       	mov	r9, r18
 88c:	11 c0       	rjmp	.+34     	; 0x8b0 <__DATA_REGION_LENGTH__+0xb0>
 88e:	ea e0       	ldi	r30, 0x0A	; 10
 890:	2e 9e       	mul	r2, r30
 892:	20 0d       	add	r18, r0
 894:	11 24       	eor	r1, r1
 896:	22 2e       	mov	r2, r18
 898:	f3 2d       	mov	r31, r3
 89a:	f0 62       	ori	r31, 0x20	; 32
 89c:	3f 2e       	mov	r3, r31
 89e:	08 c0       	rjmp	.+16     	; 0x8b0 <__DATA_REGION_LENGTH__+0xb0>
 8a0:	8c 36       	cpi	r24, 0x6C	; 108
 8a2:	21 f4       	brne	.+8      	; 0x8ac <__DATA_REGION_LENGTH__+0xac>
 8a4:	83 2d       	mov	r24, r3
 8a6:	80 68       	ori	r24, 0x80	; 128
 8a8:	38 2e       	mov	r3, r24
 8aa:	02 c0       	rjmp	.+4      	; 0x8b0 <__DATA_REGION_LENGTH__+0xb0>
 8ac:	88 36       	cpi	r24, 0x68	; 104
 8ae:	41 f4       	brne	.+16     	; 0x8c0 <__DATA_REGION_LENGTH__+0xc0>
 8b0:	f7 01       	movw	r30, r14
 8b2:	93 fd       	sbrc	r25, 3
 8b4:	85 91       	lpm	r24, Z+
 8b6:	93 ff       	sbrs	r25, 3
 8b8:	81 91       	ld	r24, Z+
 8ba:	7f 01       	movw	r14, r30
 8bc:	81 11       	cpse	r24, r1
 8be:	b3 cf       	rjmp	.-154    	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 8c0:	98 2f       	mov	r25, r24
 8c2:	9f 7d       	andi	r25, 0xDF	; 223
 8c4:	95 54       	subi	r25, 0x45	; 69
 8c6:	93 30       	cpi	r25, 0x03	; 3
 8c8:	28 f4       	brcc	.+10     	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
 8ca:	0c 5f       	subi	r16, 0xFC	; 252
 8cc:	1f 4f       	sbci	r17, 0xFF	; 255
 8ce:	9f e3       	ldi	r25, 0x3F	; 63
 8d0:	99 83       	std	Y+1, r25	; 0x01
 8d2:	0d c0       	rjmp	.+26     	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 8d4:	83 36       	cpi	r24, 0x63	; 99
 8d6:	31 f0       	breq	.+12     	; 0x8e4 <__DATA_REGION_LENGTH__+0xe4>
 8d8:	83 37       	cpi	r24, 0x73	; 115
 8da:	71 f0       	breq	.+28     	; 0x8f8 <__DATA_REGION_LENGTH__+0xf8>
 8dc:	83 35       	cpi	r24, 0x53	; 83
 8de:	09 f0       	breq	.+2      	; 0x8e2 <__DATA_REGION_LENGTH__+0xe2>
 8e0:	59 c0       	rjmp	.+178    	; 0x994 <__stack+0x95>
 8e2:	21 c0       	rjmp	.+66     	; 0x926 <__stack+0x27>
 8e4:	f8 01       	movw	r30, r16
 8e6:	80 81       	ld	r24, Z
 8e8:	89 83       	std	Y+1, r24	; 0x01
 8ea:	0e 5f       	subi	r16, 0xFE	; 254
 8ec:	1f 4f       	sbci	r17, 0xFF	; 255
 8ee:	88 24       	eor	r8, r8
 8f0:	83 94       	inc	r8
 8f2:	91 2c       	mov	r9, r1
 8f4:	53 01       	movw	r10, r6
 8f6:	13 c0       	rjmp	.+38     	; 0x91e <__stack+0x1f>
 8f8:	28 01       	movw	r4, r16
 8fa:	f2 e0       	ldi	r31, 0x02	; 2
 8fc:	4f 0e       	add	r4, r31
 8fe:	51 1c       	adc	r5, r1
 900:	f8 01       	movw	r30, r16
 902:	a0 80       	ld	r10, Z
 904:	b1 80       	ldd	r11, Z+1	; 0x01
 906:	36 fe       	sbrs	r3, 6
 908:	03 c0       	rjmp	.+6      	; 0x910 <__stack+0x11>
 90a:	69 2d       	mov	r22, r9
 90c:	70 e0       	ldi	r23, 0x00	; 0
 90e:	02 c0       	rjmp	.+4      	; 0x914 <__stack+0x15>
 910:	6f ef       	ldi	r22, 0xFF	; 255
 912:	7f ef       	ldi	r23, 0xFF	; 255
 914:	c5 01       	movw	r24, r10
 916:	0e 94 d1 05 	call	0xba2	; 0xba2 <strnlen>
 91a:	4c 01       	movw	r8, r24
 91c:	82 01       	movw	r16, r4
 91e:	f3 2d       	mov	r31, r3
 920:	ff 77       	andi	r31, 0x7F	; 127
 922:	3f 2e       	mov	r3, r31
 924:	16 c0       	rjmp	.+44     	; 0x952 <__stack+0x53>
 926:	28 01       	movw	r4, r16
 928:	22 e0       	ldi	r18, 0x02	; 2
 92a:	42 0e       	add	r4, r18
 92c:	51 1c       	adc	r5, r1
 92e:	f8 01       	movw	r30, r16
 930:	a0 80       	ld	r10, Z
 932:	b1 80       	ldd	r11, Z+1	; 0x01
 934:	36 fe       	sbrs	r3, 6
 936:	03 c0       	rjmp	.+6      	; 0x93e <__stack+0x3f>
 938:	69 2d       	mov	r22, r9
 93a:	70 e0       	ldi	r23, 0x00	; 0
 93c:	02 c0       	rjmp	.+4      	; 0x942 <__stack+0x43>
 93e:	6f ef       	ldi	r22, 0xFF	; 255
 940:	7f ef       	ldi	r23, 0xFF	; 255
 942:	c5 01       	movw	r24, r10
 944:	0e 94 c6 05 	call	0xb8c	; 0xb8c <strnlen_P>
 948:	4c 01       	movw	r8, r24
 94a:	f3 2d       	mov	r31, r3
 94c:	f0 68       	ori	r31, 0x80	; 128
 94e:	3f 2e       	mov	r3, r31
 950:	82 01       	movw	r16, r4
 952:	33 fc       	sbrc	r3, 3
 954:	1b c0       	rjmp	.+54     	; 0x98c <__stack+0x8d>
 956:	82 2d       	mov	r24, r2
 958:	90 e0       	ldi	r25, 0x00	; 0
 95a:	88 16       	cp	r8, r24
 95c:	99 06       	cpc	r9, r25
 95e:	b0 f4       	brcc	.+44     	; 0x98c <__stack+0x8d>
 960:	b6 01       	movw	r22, r12
 962:	80 e2       	ldi	r24, 0x20	; 32
 964:	90 e0       	ldi	r25, 0x00	; 0
 966:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <fputc>
 96a:	2a 94       	dec	r2
 96c:	f4 cf       	rjmp	.-24     	; 0x956 <__stack+0x57>
 96e:	f5 01       	movw	r30, r10
 970:	37 fc       	sbrc	r3, 7
 972:	85 91       	lpm	r24, Z+
 974:	37 fe       	sbrs	r3, 7
 976:	81 91       	ld	r24, Z+
 978:	5f 01       	movw	r10, r30
 97a:	b6 01       	movw	r22, r12
 97c:	90 e0       	ldi	r25, 0x00	; 0
 97e:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <fputc>
 982:	21 10       	cpse	r2, r1
 984:	2a 94       	dec	r2
 986:	21 e0       	ldi	r18, 0x01	; 1
 988:	82 1a       	sub	r8, r18
 98a:	91 08       	sbc	r9, r1
 98c:	81 14       	cp	r8, r1
 98e:	91 04       	cpc	r9, r1
 990:	71 f7       	brne	.-36     	; 0x96e <__stack+0x6f>
 992:	e8 c0       	rjmp	.+464    	; 0xb64 <__stack+0x265>
 994:	84 36       	cpi	r24, 0x64	; 100
 996:	11 f0       	breq	.+4      	; 0x99c <__stack+0x9d>
 998:	89 36       	cpi	r24, 0x69	; 105
 99a:	41 f5       	brne	.+80     	; 0x9ec <__stack+0xed>
 99c:	f8 01       	movw	r30, r16
 99e:	37 fe       	sbrs	r3, 7
 9a0:	07 c0       	rjmp	.+14     	; 0x9b0 <__stack+0xb1>
 9a2:	60 81       	ld	r22, Z
 9a4:	71 81       	ldd	r23, Z+1	; 0x01
 9a6:	82 81       	ldd	r24, Z+2	; 0x02
 9a8:	93 81       	ldd	r25, Z+3	; 0x03
 9aa:	0c 5f       	subi	r16, 0xFC	; 252
 9ac:	1f 4f       	sbci	r17, 0xFF	; 255
 9ae:	08 c0       	rjmp	.+16     	; 0x9c0 <__stack+0xc1>
 9b0:	60 81       	ld	r22, Z
 9b2:	71 81       	ldd	r23, Z+1	; 0x01
 9b4:	07 2e       	mov	r0, r23
 9b6:	00 0c       	add	r0, r0
 9b8:	88 0b       	sbc	r24, r24
 9ba:	99 0b       	sbc	r25, r25
 9bc:	0e 5f       	subi	r16, 0xFE	; 254
 9be:	1f 4f       	sbci	r17, 0xFF	; 255
 9c0:	f3 2d       	mov	r31, r3
 9c2:	ff 76       	andi	r31, 0x6F	; 111
 9c4:	3f 2e       	mov	r3, r31
 9c6:	97 ff       	sbrs	r25, 7
 9c8:	09 c0       	rjmp	.+18     	; 0x9dc <__stack+0xdd>
 9ca:	90 95       	com	r25
 9cc:	80 95       	com	r24
 9ce:	70 95       	com	r23
 9d0:	61 95       	neg	r22
 9d2:	7f 4f       	sbci	r23, 0xFF	; 255
 9d4:	8f 4f       	sbci	r24, 0xFF	; 255
 9d6:	9f 4f       	sbci	r25, 0xFF	; 255
 9d8:	f0 68       	ori	r31, 0x80	; 128
 9da:	3f 2e       	mov	r3, r31
 9dc:	2a e0       	ldi	r18, 0x0A	; 10
 9de:	30 e0       	ldi	r19, 0x00	; 0
 9e0:	a3 01       	movw	r20, r6
 9e2:	0e 94 18 06 	call	0xc30	; 0xc30 <__ultoa_invert>
 9e6:	88 2e       	mov	r8, r24
 9e8:	86 18       	sub	r8, r6
 9ea:	45 c0       	rjmp	.+138    	; 0xa76 <__stack+0x177>
 9ec:	85 37       	cpi	r24, 0x75	; 117
 9ee:	31 f4       	brne	.+12     	; 0x9fc <__stack+0xfd>
 9f0:	23 2d       	mov	r18, r3
 9f2:	2f 7e       	andi	r18, 0xEF	; 239
 9f4:	b2 2e       	mov	r11, r18
 9f6:	2a e0       	ldi	r18, 0x0A	; 10
 9f8:	30 e0       	ldi	r19, 0x00	; 0
 9fa:	25 c0       	rjmp	.+74     	; 0xa46 <__stack+0x147>
 9fc:	93 2d       	mov	r25, r3
 9fe:	99 7f       	andi	r25, 0xF9	; 249
 a00:	b9 2e       	mov	r11, r25
 a02:	8f 36       	cpi	r24, 0x6F	; 111
 a04:	c1 f0       	breq	.+48     	; 0xa36 <__stack+0x137>
 a06:	18 f4       	brcc	.+6      	; 0xa0e <__stack+0x10f>
 a08:	88 35       	cpi	r24, 0x58	; 88
 a0a:	79 f0       	breq	.+30     	; 0xa2a <__stack+0x12b>
 a0c:	b5 c0       	rjmp	.+362    	; 0xb78 <__stack+0x279>
 a0e:	80 37       	cpi	r24, 0x70	; 112
 a10:	19 f0       	breq	.+6      	; 0xa18 <__stack+0x119>
 a12:	88 37       	cpi	r24, 0x78	; 120
 a14:	21 f0       	breq	.+8      	; 0xa1e <__stack+0x11f>
 a16:	b0 c0       	rjmp	.+352    	; 0xb78 <__stack+0x279>
 a18:	e9 2f       	mov	r30, r25
 a1a:	e0 61       	ori	r30, 0x10	; 16
 a1c:	be 2e       	mov	r11, r30
 a1e:	b4 fe       	sbrs	r11, 4
 a20:	0d c0       	rjmp	.+26     	; 0xa3c <__stack+0x13d>
 a22:	fb 2d       	mov	r31, r11
 a24:	f4 60       	ori	r31, 0x04	; 4
 a26:	bf 2e       	mov	r11, r31
 a28:	09 c0       	rjmp	.+18     	; 0xa3c <__stack+0x13d>
 a2a:	34 fe       	sbrs	r3, 4
 a2c:	0a c0       	rjmp	.+20     	; 0xa42 <__stack+0x143>
 a2e:	29 2f       	mov	r18, r25
 a30:	26 60       	ori	r18, 0x06	; 6
 a32:	b2 2e       	mov	r11, r18
 a34:	06 c0       	rjmp	.+12     	; 0xa42 <__stack+0x143>
 a36:	28 e0       	ldi	r18, 0x08	; 8
 a38:	30 e0       	ldi	r19, 0x00	; 0
 a3a:	05 c0       	rjmp	.+10     	; 0xa46 <__stack+0x147>
 a3c:	20 e1       	ldi	r18, 0x10	; 16
 a3e:	30 e0       	ldi	r19, 0x00	; 0
 a40:	02 c0       	rjmp	.+4      	; 0xa46 <__stack+0x147>
 a42:	20 e1       	ldi	r18, 0x10	; 16
 a44:	32 e0       	ldi	r19, 0x02	; 2
 a46:	f8 01       	movw	r30, r16
 a48:	b7 fe       	sbrs	r11, 7
 a4a:	07 c0       	rjmp	.+14     	; 0xa5a <__stack+0x15b>
 a4c:	60 81       	ld	r22, Z
 a4e:	71 81       	ldd	r23, Z+1	; 0x01
 a50:	82 81       	ldd	r24, Z+2	; 0x02
 a52:	93 81       	ldd	r25, Z+3	; 0x03
 a54:	0c 5f       	subi	r16, 0xFC	; 252
 a56:	1f 4f       	sbci	r17, 0xFF	; 255
 a58:	06 c0       	rjmp	.+12     	; 0xa66 <__stack+0x167>
 a5a:	60 81       	ld	r22, Z
 a5c:	71 81       	ldd	r23, Z+1	; 0x01
 a5e:	80 e0       	ldi	r24, 0x00	; 0
 a60:	90 e0       	ldi	r25, 0x00	; 0
 a62:	0e 5f       	subi	r16, 0xFE	; 254
 a64:	1f 4f       	sbci	r17, 0xFF	; 255
 a66:	a3 01       	movw	r20, r6
 a68:	0e 94 18 06 	call	0xc30	; 0xc30 <__ultoa_invert>
 a6c:	88 2e       	mov	r8, r24
 a6e:	86 18       	sub	r8, r6
 a70:	fb 2d       	mov	r31, r11
 a72:	ff 77       	andi	r31, 0x7F	; 127
 a74:	3f 2e       	mov	r3, r31
 a76:	36 fe       	sbrs	r3, 6
 a78:	0d c0       	rjmp	.+26     	; 0xa94 <__stack+0x195>
 a7a:	23 2d       	mov	r18, r3
 a7c:	2e 7f       	andi	r18, 0xFE	; 254
 a7e:	a2 2e       	mov	r10, r18
 a80:	89 14       	cp	r8, r9
 a82:	58 f4       	brcc	.+22     	; 0xa9a <__stack+0x19b>
 a84:	34 fe       	sbrs	r3, 4
 a86:	0b c0       	rjmp	.+22     	; 0xa9e <__stack+0x19f>
 a88:	32 fc       	sbrc	r3, 2
 a8a:	09 c0       	rjmp	.+18     	; 0xa9e <__stack+0x19f>
 a8c:	83 2d       	mov	r24, r3
 a8e:	8e 7e       	andi	r24, 0xEE	; 238
 a90:	a8 2e       	mov	r10, r24
 a92:	05 c0       	rjmp	.+10     	; 0xa9e <__stack+0x19f>
 a94:	b8 2c       	mov	r11, r8
 a96:	a3 2c       	mov	r10, r3
 a98:	03 c0       	rjmp	.+6      	; 0xaa0 <__stack+0x1a1>
 a9a:	b8 2c       	mov	r11, r8
 a9c:	01 c0       	rjmp	.+2      	; 0xaa0 <__stack+0x1a1>
 a9e:	b9 2c       	mov	r11, r9
 aa0:	a4 fe       	sbrs	r10, 4
 aa2:	0f c0       	rjmp	.+30     	; 0xac2 <__stack+0x1c3>
 aa4:	fe 01       	movw	r30, r28
 aa6:	e8 0d       	add	r30, r8
 aa8:	f1 1d       	adc	r31, r1
 aaa:	80 81       	ld	r24, Z
 aac:	80 33       	cpi	r24, 0x30	; 48
 aae:	21 f4       	brne	.+8      	; 0xab8 <__stack+0x1b9>
 ab0:	9a 2d       	mov	r25, r10
 ab2:	99 7e       	andi	r25, 0xE9	; 233
 ab4:	a9 2e       	mov	r10, r25
 ab6:	09 c0       	rjmp	.+18     	; 0xaca <__stack+0x1cb>
 ab8:	a2 fe       	sbrs	r10, 2
 aba:	06 c0       	rjmp	.+12     	; 0xac8 <__stack+0x1c9>
 abc:	b3 94       	inc	r11
 abe:	b3 94       	inc	r11
 ac0:	04 c0       	rjmp	.+8      	; 0xaca <__stack+0x1cb>
 ac2:	8a 2d       	mov	r24, r10
 ac4:	86 78       	andi	r24, 0x86	; 134
 ac6:	09 f0       	breq	.+2      	; 0xaca <__stack+0x1cb>
 ac8:	b3 94       	inc	r11
 aca:	a3 fc       	sbrc	r10, 3
 acc:	11 c0       	rjmp	.+34     	; 0xaf0 <__stack+0x1f1>
 ace:	a0 fe       	sbrs	r10, 0
 ad0:	06 c0       	rjmp	.+12     	; 0xade <__stack+0x1df>
 ad2:	b2 14       	cp	r11, r2
 ad4:	88 f4       	brcc	.+34     	; 0xaf8 <__stack+0x1f9>
 ad6:	28 0c       	add	r2, r8
 ad8:	92 2c       	mov	r9, r2
 ada:	9b 18       	sub	r9, r11
 adc:	0e c0       	rjmp	.+28     	; 0xafa <__stack+0x1fb>
 ade:	b2 14       	cp	r11, r2
 ae0:	60 f4       	brcc	.+24     	; 0xafa <__stack+0x1fb>
 ae2:	b6 01       	movw	r22, r12
 ae4:	80 e2       	ldi	r24, 0x20	; 32
 ae6:	90 e0       	ldi	r25, 0x00	; 0
 ae8:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <fputc>
 aec:	b3 94       	inc	r11
 aee:	f7 cf       	rjmp	.-18     	; 0xade <__stack+0x1df>
 af0:	b2 14       	cp	r11, r2
 af2:	18 f4       	brcc	.+6      	; 0xafa <__stack+0x1fb>
 af4:	2b 18       	sub	r2, r11
 af6:	02 c0       	rjmp	.+4      	; 0xafc <__stack+0x1fd>
 af8:	98 2c       	mov	r9, r8
 afa:	21 2c       	mov	r2, r1
 afc:	a4 fe       	sbrs	r10, 4
 afe:	10 c0       	rjmp	.+32     	; 0xb20 <__stack+0x221>
 b00:	b6 01       	movw	r22, r12
 b02:	80 e3       	ldi	r24, 0x30	; 48
 b04:	90 e0       	ldi	r25, 0x00	; 0
 b06:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <fputc>
 b0a:	a2 fe       	sbrs	r10, 2
 b0c:	17 c0       	rjmp	.+46     	; 0xb3c <__stack+0x23d>
 b0e:	a1 fc       	sbrc	r10, 1
 b10:	03 c0       	rjmp	.+6      	; 0xb18 <__stack+0x219>
 b12:	88 e7       	ldi	r24, 0x78	; 120
 b14:	90 e0       	ldi	r25, 0x00	; 0
 b16:	02 c0       	rjmp	.+4      	; 0xb1c <__stack+0x21d>
 b18:	88 e5       	ldi	r24, 0x58	; 88
 b1a:	90 e0       	ldi	r25, 0x00	; 0
 b1c:	b6 01       	movw	r22, r12
 b1e:	0c c0       	rjmp	.+24     	; 0xb38 <__stack+0x239>
 b20:	8a 2d       	mov	r24, r10
 b22:	86 78       	andi	r24, 0x86	; 134
 b24:	59 f0       	breq	.+22     	; 0xb3c <__stack+0x23d>
 b26:	a1 fe       	sbrs	r10, 1
 b28:	02 c0       	rjmp	.+4      	; 0xb2e <__stack+0x22f>
 b2a:	8b e2       	ldi	r24, 0x2B	; 43
 b2c:	01 c0       	rjmp	.+2      	; 0xb30 <__stack+0x231>
 b2e:	80 e2       	ldi	r24, 0x20	; 32
 b30:	a7 fc       	sbrc	r10, 7
 b32:	8d e2       	ldi	r24, 0x2D	; 45
 b34:	b6 01       	movw	r22, r12
 b36:	90 e0       	ldi	r25, 0x00	; 0
 b38:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <fputc>
 b3c:	89 14       	cp	r8, r9
 b3e:	38 f4       	brcc	.+14     	; 0xb4e <__stack+0x24f>
 b40:	b6 01       	movw	r22, r12
 b42:	80 e3       	ldi	r24, 0x30	; 48
 b44:	90 e0       	ldi	r25, 0x00	; 0
 b46:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <fputc>
 b4a:	9a 94       	dec	r9
 b4c:	f7 cf       	rjmp	.-18     	; 0xb3c <__stack+0x23d>
 b4e:	8a 94       	dec	r8
 b50:	f3 01       	movw	r30, r6
 b52:	e8 0d       	add	r30, r8
 b54:	f1 1d       	adc	r31, r1
 b56:	80 81       	ld	r24, Z
 b58:	b6 01       	movw	r22, r12
 b5a:	90 e0       	ldi	r25, 0x00	; 0
 b5c:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <fputc>
 b60:	81 10       	cpse	r8, r1
 b62:	f5 cf       	rjmp	.-22     	; 0xb4e <__stack+0x24f>
 b64:	22 20       	and	r2, r2
 b66:	09 f4       	brne	.+2      	; 0xb6a <__stack+0x26b>
 b68:	42 ce       	rjmp	.-892    	; 0x7ee <vfprintf+0x24>
 b6a:	b6 01       	movw	r22, r12
 b6c:	80 e2       	ldi	r24, 0x20	; 32
 b6e:	90 e0       	ldi	r25, 0x00	; 0
 b70:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <fputc>
 b74:	2a 94       	dec	r2
 b76:	f6 cf       	rjmp	.-20     	; 0xb64 <__stack+0x265>
 b78:	f6 01       	movw	r30, r12
 b7a:	86 81       	ldd	r24, Z+6	; 0x06
 b7c:	97 81       	ldd	r25, Z+7	; 0x07
 b7e:	02 c0       	rjmp	.+4      	; 0xb84 <__stack+0x285>
 b80:	8f ef       	ldi	r24, 0xFF	; 255
 b82:	9f ef       	ldi	r25, 0xFF	; 255
 b84:	2b 96       	adiw	r28, 0x0b	; 11
 b86:	e2 e1       	ldi	r30, 0x12	; 18
 b88:	0c 94 92 06 	jmp	0xd24	; 0xd24 <__epilogue_restores__>

00000b8c <strnlen_P>:
 b8c:	fc 01       	movw	r30, r24
 b8e:	05 90       	lpm	r0, Z+
 b90:	61 50       	subi	r22, 0x01	; 1
 b92:	70 40       	sbci	r23, 0x00	; 0
 b94:	01 10       	cpse	r0, r1
 b96:	d8 f7       	brcc	.-10     	; 0xb8e <strnlen_P+0x2>
 b98:	80 95       	com	r24
 b9a:	90 95       	com	r25
 b9c:	8e 0f       	add	r24, r30
 b9e:	9f 1f       	adc	r25, r31
 ba0:	08 95       	ret

00000ba2 <strnlen>:
 ba2:	fc 01       	movw	r30, r24
 ba4:	61 50       	subi	r22, 0x01	; 1
 ba6:	70 40       	sbci	r23, 0x00	; 0
 ba8:	01 90       	ld	r0, Z+
 baa:	01 10       	cpse	r0, r1
 bac:	d8 f7       	brcc	.-10     	; 0xba4 <strnlen+0x2>
 bae:	80 95       	com	r24
 bb0:	90 95       	com	r25
 bb2:	8e 0f       	add	r24, r30
 bb4:	9f 1f       	adc	r25, r31
 bb6:	08 95       	ret

00000bb8 <fputc>:
 bb8:	0f 93       	push	r16
 bba:	1f 93       	push	r17
 bbc:	cf 93       	push	r28
 bbe:	df 93       	push	r29
 bc0:	fb 01       	movw	r30, r22
 bc2:	23 81       	ldd	r18, Z+3	; 0x03
 bc4:	21 fd       	sbrc	r18, 1
 bc6:	03 c0       	rjmp	.+6      	; 0xbce <fputc+0x16>
 bc8:	8f ef       	ldi	r24, 0xFF	; 255
 bca:	9f ef       	ldi	r25, 0xFF	; 255
 bcc:	2c c0       	rjmp	.+88     	; 0xc26 <fputc+0x6e>
 bce:	22 ff       	sbrs	r18, 2
 bd0:	16 c0       	rjmp	.+44     	; 0xbfe <fputc+0x46>
 bd2:	46 81       	ldd	r20, Z+6	; 0x06
 bd4:	57 81       	ldd	r21, Z+7	; 0x07
 bd6:	24 81       	ldd	r18, Z+4	; 0x04
 bd8:	35 81       	ldd	r19, Z+5	; 0x05
 bda:	42 17       	cp	r20, r18
 bdc:	53 07       	cpc	r21, r19
 bde:	44 f4       	brge	.+16     	; 0xbf0 <fputc+0x38>
 be0:	a0 81       	ld	r26, Z
 be2:	b1 81       	ldd	r27, Z+1	; 0x01
 be4:	9d 01       	movw	r18, r26
 be6:	2f 5f       	subi	r18, 0xFF	; 255
 be8:	3f 4f       	sbci	r19, 0xFF	; 255
 bea:	31 83       	std	Z+1, r19	; 0x01
 bec:	20 83       	st	Z, r18
 bee:	8c 93       	st	X, r24
 bf0:	26 81       	ldd	r18, Z+6	; 0x06
 bf2:	37 81       	ldd	r19, Z+7	; 0x07
 bf4:	2f 5f       	subi	r18, 0xFF	; 255
 bf6:	3f 4f       	sbci	r19, 0xFF	; 255
 bf8:	37 83       	std	Z+7, r19	; 0x07
 bfa:	26 83       	std	Z+6, r18	; 0x06
 bfc:	14 c0       	rjmp	.+40     	; 0xc26 <fputc+0x6e>
 bfe:	8b 01       	movw	r16, r22
 c00:	ec 01       	movw	r28, r24
 c02:	fb 01       	movw	r30, r22
 c04:	00 84       	ldd	r0, Z+8	; 0x08
 c06:	f1 85       	ldd	r31, Z+9	; 0x09
 c08:	e0 2d       	mov	r30, r0
 c0a:	09 95       	icall
 c0c:	89 2b       	or	r24, r25
 c0e:	e1 f6       	brne	.-72     	; 0xbc8 <fputc+0x10>
 c10:	d8 01       	movw	r26, r16
 c12:	16 96       	adiw	r26, 0x06	; 6
 c14:	8d 91       	ld	r24, X+
 c16:	9c 91       	ld	r25, X
 c18:	17 97       	sbiw	r26, 0x07	; 7
 c1a:	01 96       	adiw	r24, 0x01	; 1
 c1c:	17 96       	adiw	r26, 0x07	; 7
 c1e:	9c 93       	st	X, r25
 c20:	8e 93       	st	-X, r24
 c22:	16 97       	sbiw	r26, 0x06	; 6
 c24:	ce 01       	movw	r24, r28
 c26:	df 91       	pop	r29
 c28:	cf 91       	pop	r28
 c2a:	1f 91       	pop	r17
 c2c:	0f 91       	pop	r16
 c2e:	08 95       	ret

00000c30 <__ultoa_invert>:
 c30:	fa 01       	movw	r30, r20
 c32:	aa 27       	eor	r26, r26
 c34:	28 30       	cpi	r18, 0x08	; 8
 c36:	51 f1       	breq	.+84     	; 0xc8c <__ultoa_invert+0x5c>
 c38:	20 31       	cpi	r18, 0x10	; 16
 c3a:	81 f1       	breq	.+96     	; 0xc9c <__ultoa_invert+0x6c>
 c3c:	e8 94       	clt
 c3e:	6f 93       	push	r22
 c40:	6e 7f       	andi	r22, 0xFE	; 254
 c42:	6e 5f       	subi	r22, 0xFE	; 254
 c44:	7f 4f       	sbci	r23, 0xFF	; 255
 c46:	8f 4f       	sbci	r24, 0xFF	; 255
 c48:	9f 4f       	sbci	r25, 0xFF	; 255
 c4a:	af 4f       	sbci	r26, 0xFF	; 255
 c4c:	b1 e0       	ldi	r27, 0x01	; 1
 c4e:	3e d0       	rcall	.+124    	; 0xccc <__ultoa_invert+0x9c>
 c50:	b4 e0       	ldi	r27, 0x04	; 4
 c52:	3c d0       	rcall	.+120    	; 0xccc <__ultoa_invert+0x9c>
 c54:	67 0f       	add	r22, r23
 c56:	78 1f       	adc	r23, r24
 c58:	89 1f       	adc	r24, r25
 c5a:	9a 1f       	adc	r25, r26
 c5c:	a1 1d       	adc	r26, r1
 c5e:	68 0f       	add	r22, r24
 c60:	79 1f       	adc	r23, r25
 c62:	8a 1f       	adc	r24, r26
 c64:	91 1d       	adc	r25, r1
 c66:	a1 1d       	adc	r26, r1
 c68:	6a 0f       	add	r22, r26
 c6a:	71 1d       	adc	r23, r1
 c6c:	81 1d       	adc	r24, r1
 c6e:	91 1d       	adc	r25, r1
 c70:	a1 1d       	adc	r26, r1
 c72:	20 d0       	rcall	.+64     	; 0xcb4 <__ultoa_invert+0x84>
 c74:	09 f4       	brne	.+2      	; 0xc78 <__ultoa_invert+0x48>
 c76:	68 94       	set
 c78:	3f 91       	pop	r19
 c7a:	2a e0       	ldi	r18, 0x0A	; 10
 c7c:	26 9f       	mul	r18, r22
 c7e:	11 24       	eor	r1, r1
 c80:	30 19       	sub	r19, r0
 c82:	30 5d       	subi	r19, 0xD0	; 208
 c84:	31 93       	st	Z+, r19
 c86:	de f6       	brtc	.-74     	; 0xc3e <__ultoa_invert+0xe>
 c88:	cf 01       	movw	r24, r30
 c8a:	08 95       	ret
 c8c:	46 2f       	mov	r20, r22
 c8e:	47 70       	andi	r20, 0x07	; 7
 c90:	40 5d       	subi	r20, 0xD0	; 208
 c92:	41 93       	st	Z+, r20
 c94:	b3 e0       	ldi	r27, 0x03	; 3
 c96:	0f d0       	rcall	.+30     	; 0xcb6 <__ultoa_invert+0x86>
 c98:	c9 f7       	brne	.-14     	; 0xc8c <__ultoa_invert+0x5c>
 c9a:	f6 cf       	rjmp	.-20     	; 0xc88 <__ultoa_invert+0x58>
 c9c:	46 2f       	mov	r20, r22
 c9e:	4f 70       	andi	r20, 0x0F	; 15
 ca0:	40 5d       	subi	r20, 0xD0	; 208
 ca2:	4a 33       	cpi	r20, 0x3A	; 58
 ca4:	18 f0       	brcs	.+6      	; 0xcac <__ultoa_invert+0x7c>
 ca6:	49 5d       	subi	r20, 0xD9	; 217
 ca8:	31 fd       	sbrc	r19, 1
 caa:	40 52       	subi	r20, 0x20	; 32
 cac:	41 93       	st	Z+, r20
 cae:	02 d0       	rcall	.+4      	; 0xcb4 <__ultoa_invert+0x84>
 cb0:	a9 f7       	brne	.-22     	; 0xc9c <__ultoa_invert+0x6c>
 cb2:	ea cf       	rjmp	.-44     	; 0xc88 <__ultoa_invert+0x58>
 cb4:	b4 e0       	ldi	r27, 0x04	; 4
 cb6:	a6 95       	lsr	r26
 cb8:	97 95       	ror	r25
 cba:	87 95       	ror	r24
 cbc:	77 95       	ror	r23
 cbe:	67 95       	ror	r22
 cc0:	ba 95       	dec	r27
 cc2:	c9 f7       	brne	.-14     	; 0xcb6 <__ultoa_invert+0x86>
 cc4:	00 97       	sbiw	r24, 0x00	; 0
 cc6:	61 05       	cpc	r22, r1
 cc8:	71 05       	cpc	r23, r1
 cca:	08 95       	ret
 ccc:	9b 01       	movw	r18, r22
 cce:	ac 01       	movw	r20, r24
 cd0:	0a 2e       	mov	r0, r26
 cd2:	06 94       	lsr	r0
 cd4:	57 95       	ror	r21
 cd6:	47 95       	ror	r20
 cd8:	37 95       	ror	r19
 cda:	27 95       	ror	r18
 cdc:	ba 95       	dec	r27
 cde:	c9 f7       	brne	.-14     	; 0xcd2 <__ultoa_invert+0xa2>
 ce0:	62 0f       	add	r22, r18
 ce2:	73 1f       	adc	r23, r19
 ce4:	84 1f       	adc	r24, r20
 ce6:	95 1f       	adc	r25, r21
 ce8:	a0 1d       	adc	r26, r0
 cea:	08 95       	ret

00000cec <__prologue_saves__>:
 cec:	2f 92       	push	r2
 cee:	3f 92       	push	r3
 cf0:	4f 92       	push	r4
 cf2:	5f 92       	push	r5
 cf4:	6f 92       	push	r6
 cf6:	7f 92       	push	r7
 cf8:	8f 92       	push	r8
 cfa:	9f 92       	push	r9
 cfc:	af 92       	push	r10
 cfe:	bf 92       	push	r11
 d00:	cf 92       	push	r12
 d02:	df 92       	push	r13
 d04:	ef 92       	push	r14
 d06:	ff 92       	push	r15
 d08:	0f 93       	push	r16
 d0a:	1f 93       	push	r17
 d0c:	cf 93       	push	r28
 d0e:	df 93       	push	r29
 d10:	cd b7       	in	r28, 0x3d	; 61
 d12:	de b7       	in	r29, 0x3e	; 62
 d14:	ca 1b       	sub	r28, r26
 d16:	db 0b       	sbc	r29, r27
 d18:	0f b6       	in	r0, 0x3f	; 63
 d1a:	f8 94       	cli
 d1c:	de bf       	out	0x3e, r29	; 62
 d1e:	0f be       	out	0x3f, r0	; 63
 d20:	cd bf       	out	0x3d, r28	; 61
 d22:	09 94       	ijmp

00000d24 <__epilogue_restores__>:
 d24:	2a 88       	ldd	r2, Y+18	; 0x12
 d26:	39 88       	ldd	r3, Y+17	; 0x11
 d28:	48 88       	ldd	r4, Y+16	; 0x10
 d2a:	5f 84       	ldd	r5, Y+15	; 0x0f
 d2c:	6e 84       	ldd	r6, Y+14	; 0x0e
 d2e:	7d 84       	ldd	r7, Y+13	; 0x0d
 d30:	8c 84       	ldd	r8, Y+12	; 0x0c
 d32:	9b 84       	ldd	r9, Y+11	; 0x0b
 d34:	aa 84       	ldd	r10, Y+10	; 0x0a
 d36:	b9 84       	ldd	r11, Y+9	; 0x09
 d38:	c8 84       	ldd	r12, Y+8	; 0x08
 d3a:	df 80       	ldd	r13, Y+7	; 0x07
 d3c:	ee 80       	ldd	r14, Y+6	; 0x06
 d3e:	fd 80       	ldd	r15, Y+5	; 0x05
 d40:	0c 81       	ldd	r16, Y+4	; 0x04
 d42:	1b 81       	ldd	r17, Y+3	; 0x03
 d44:	aa 81       	ldd	r26, Y+2	; 0x02
 d46:	b9 81       	ldd	r27, Y+1	; 0x01
 d48:	ce 0f       	add	r28, r30
 d4a:	d1 1d       	adc	r29, r1
 d4c:	0f b6       	in	r0, 0x3f	; 63
 d4e:	f8 94       	cli
 d50:	de bf       	out	0x3e, r29	; 62
 d52:	0f be       	out	0x3f, r0	; 63
 d54:	cd bf       	out	0x3d, r28	; 61
 d56:	ed 01       	movw	r28, r26
 d58:	08 95       	ret

00000d5a <_exit>:
 d5a:	f8 94       	cli

00000d5c <__stop_program>:
 d5c:	ff cf       	rjmp	.-2      	; 0xd5c <__stop_program>
